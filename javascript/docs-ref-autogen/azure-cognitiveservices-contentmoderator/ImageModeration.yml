### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-contentmoderator.ImageModeration
    id: azure-cognitiveservices-contentmoderator.ImageModeration
    name: ImageModeration
    summary: Class representing a ImageModeration.
    fullName: azure-cognitiveservices-contentmoderator.ImageModeration
    source:
      id: azure-cognitiveservices-contentmoderator.ImageModeration
      path: lib\services\contentModerator\lib\operations\imageModeration.js
      startLine: 1855
      remote:
        branch: master
        path: lib\services\contentModerator\lib\operations\imageModeration.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-cognitiveservices-contentmoderator.ImageModeration.#ctor'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#findFacesWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#findFaces'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#oCRMethodWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRMethod'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#evaluateMethodWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#evaluateMethod'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#matchMethodWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#matchMethod'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#findFacesFileInputWithHttpOperationResponse
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#findFacesFileInput
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#findFacesUrlInputWithHttpOperationResponse
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#findFacesUrlInput
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#oCRUrlInputWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRUrlInput'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#oCRFileInputWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRFileInput'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#evaluateFileInputWithHttpOperationResponse
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#evaluateFileInput
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#evaluateUrlInputWithHttpOperationResponse
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#evaluateUrlInput
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#matchUrlInputWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#matchUrlInput'
      - >-
        azure-cognitiveservices-contentmoderator.ImageModeration#matchFileInputWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.ImageModeration#matchFileInput'
    langs:
      - js
  - id: 'azure-cognitiveservices-contentmoderator.ImageModeration.#ctor'
    uid: 'azure-cognitiveservices-contentmoderator.ImageModeration.#ctor'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: ImageModeration(client)
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.ImageModeration(client)
    summary: Create a ImageModeration.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedContentModeratorAPIClient
          description: Reference to the service client.
      content: new ImageModeration(client)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: findFacesWithHttpOperationResponse(options)
    summary: Returns the list of faces found.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.findFacesWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FoundFaces>} - The deserialized result object.'
        value: '{HttpOperationResponse<FoundFaces>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function findFacesWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#findFaces'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#findFaces'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'findFaces(options, optionalCallback)'
    summary: Returns the list of faces found.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.findFaces(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FoundFaces} - The deserialized result object.'
        value: '{FoundFaces} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FoundFaces} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FoundFaces} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function findFaces(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#oCRMethodWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#oCRMethodWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'oCRMethodWithHttpOperationResponse(language, options)'
    summary: "Returns any text found in the image for the language specified. If no\rlanguage is specified in input then the detection defaults to English."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethodWithHttpOperationResponse(language,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<OCR>} - The deserialized result object.'
        value: '{HttpOperationResponse<OCR>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.enhanced
          type:
            - boolean
          description: "When set to True, the image goes through\radditional processing to come with additional candidates.\r\rimage/tiff is not supported when enhanced is set to true\r\rNote: This impacts the response time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function oCRMethodWithHttpOperationResponse(language, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRMethod'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRMethod'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'oCRMethod(language, options, optionalCallback)'
    summary: "Returns any text found in the image for the language specified. If no\rlanguage is specified in input then the detection defaults to English."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.oCRMethod(language,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OCR} - The deserialized result object.'
        value: '{OCR} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OCR} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OCR} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.enhanced
          type:
            - boolean
          description: "When set to True, the image goes through\radditional processing to come with additional candidates.\r\rimage/tiff is not supported when enhanced is set to true\r\rNote: This impacts the response time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function oCRMethod(language, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#evaluateMethodWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#evaluateMethodWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: evaluateMethodWithHttpOperationResponse(options)
    summary: Returns probabilities of the image containing racy or adult content.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethodWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Evaluate>} - The deserialized result object.'
        value: '{HttpOperationResponse<Evaluate>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function evaluateMethodWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#evaluateMethod'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#evaluateMethod'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'evaluateMethod(options, optionalCallback)'
    summary: Returns probabilities of the image containing racy or adult content.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.evaluateMethod(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Evaluate} - The deserialized result object.'
        value: '{Evaluate} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Evaluate} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Evaluate} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function evaluateMethod(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#matchMethodWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#matchMethodWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: matchMethodWithHttpOperationResponse(options)
    summary: "Fuzzily match an image against one of your custom Image Lists. You can\rcreate and manage your custom image lists using <a\rhref=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a>\rAPI.\r\rReturns ID and tags of matching image.<br/>\r<br/>\rNote: Refresh Index must be run on the corresponding Image List before\radditions and removals are reflected in the response."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.matchMethodWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<MatchResponse>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<MatchResponse>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function matchMethodWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#matchMethod'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#matchMethod'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'matchMethod(options, optionalCallback)'
    summary: "Fuzzily match an image against one of your custom Image Lists. You can\rcreate and manage your custom image lists using <a\rhref=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a>\rAPI.\r\rReturns ID and tags of matching image.<br/>\r<br/>\rNote: Refresh Index must be run on the corresponding Image List before\radditions and removals are reflected in the response."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.matchMethod(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{MatchResponse} - The deserialized result object.'
        value: '{MatchResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MatchResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MatchResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function matchMethod(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesFileInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesFileInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'findFacesFileInputWithHttpOperationResponse(imageStream, options)'
    summary: Returns the list of faces found.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInputWithHttpOperationResponse(imageStream,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FoundFaces>} - The deserialized result object.'
        value: '{HttpOperationResponse<FoundFaces>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function findFacesFileInputWithHttpOperationResponse(imageStream,
        options)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesFileInput
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesFileInput
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'findFacesFileInput(imageStream, options, optionalCallback)'
    summary: Returns the list of faces found.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.findFacesFileInput(imageStream,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FoundFaces} - The deserialized result object.'
        value: '{FoundFaces} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FoundFaces} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FoundFaces} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function findFacesFileInput(imageStream, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesUrlInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#findFacesUrlInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'findFacesUrlInputWithHttpOperationResponse(contentType, imageUrl, options)'
    summary: Returns the list of faces found.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInputWithHttpOperationResponse(contentType,
      imageUrl, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FoundFaces>} - The deserialized result object.'
        value: '{HttpOperationResponse<FoundFaces>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function findFacesUrlInputWithHttpOperationResponse(contentType,
        imageUrl, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#findFacesUrlInput'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#findFacesUrlInput'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'findFacesUrlInput(contentType, imageUrl, options, optionalCallback)'
    summary: Returns the list of faces found.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.findFacesUrlInput(contentType,
      imageUrl, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FoundFaces} - The deserialized result object.'
        value: '{FoundFaces} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FoundFaces} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FoundFaces} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function findFacesUrlInput(contentType, imageUrl, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#oCRUrlInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#oCRUrlInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: >-
      oCRUrlInputWithHttpOperationResponse(language, contentType, imageUrl,
      options)
    summary: "Returns any text found in the image for the language specified. If no\rlanguage is specified in input then the detection defaults to English."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInputWithHttpOperationResponse(language,
      contentType, imageUrl, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<OCR>} - The deserialized result object.'
        value: '{HttpOperationResponse<OCR>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.enhanced
          type:
            - boolean
          description: "When set to True, the image goes through\radditional processing to come with additional candidates.\r\rimage/tiff is not supported when enhanced is set to true\r\rNote: This impacts the response time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function oCRUrlInputWithHttpOperationResponse(language, contentType,
        imageUrl, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRUrlInput'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRUrlInput'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'oCRUrlInput(language, contentType, imageUrl, options, optionalCallback)'
    summary: "Returns any text found in the image for the language specified. If no\rlanguage is specified in input then the detection defaults to English."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.oCRUrlInput(language,
      contentType, imageUrl, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OCR} - The deserialized result object.'
        value: '{OCR} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OCR} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OCR} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.enhanced
          type:
            - boolean
          description: "When set to True, the image goes through\radditional processing to come with additional candidates.\r\rimage/tiff is not supported when enhanced is set to true\r\rNote: This impacts the response time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function oCRUrlInput(language, contentType, imageUrl, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#oCRFileInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#oCRFileInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'oCRFileInputWithHttpOperationResponse(language, imageStream, options)'
    summary: "Returns any text found in the image for the language specified. If no\rlanguage is specified in input then the detection defaults to English."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInputWithHttpOperationResponse(language,
      imageStream, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<OCR>} - The deserialized result object.'
        value: '{HttpOperationResponse<OCR>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.enhanced
          type:
            - boolean
          description: "When set to True, the image goes through\radditional processing to come with additional candidates.\r\rimage/tiff is not supported when enhanced is set to true\r\rNote: This impacts the response time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function oCRFileInputWithHttpOperationResponse(language, imageStream,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRFileInput'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#oCRFileInput'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'oCRFileInput(language, imageStream, options, optionalCallback)'
    summary: "Returns any text found in the image for the language specified. If no\rlanguage is specified in input then the detection defaults to English."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.oCRFileInput(language,
      imageStream, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{OCR} - The deserialized result object.'
        value: '{OCR} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OCR} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OCR} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.enhanced
          type:
            - boolean
          description: "When set to True, the image goes through\radditional processing to come with additional candidates.\r\rimage/tiff is not supported when enhanced is set to true\r\rNote: This impacts the response time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function oCRFileInput(language, imageStream, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#evaluateFileInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#evaluateFileInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'evaluateFileInputWithHttpOperationResponse(imageStream, options)'
    summary: Returns probabilities of the image containing racy or adult content.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInputWithHttpOperationResponse(imageStream,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Evaluate>} - The deserialized result object.'
        value: '{HttpOperationResponse<Evaluate>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function evaluateFileInputWithHttpOperationResponse(imageStream,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#evaluateFileInput'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#evaluateFileInput'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'evaluateFileInput(imageStream, options, optionalCallback)'
    summary: Returns probabilities of the image containing racy or adult content.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.evaluateFileInput(imageStream,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Evaluate} - The deserialized result object.'
        value: '{Evaluate} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Evaluate} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Evaluate} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function evaluateFileInput(imageStream, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#evaluateUrlInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#evaluateUrlInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'evaluateUrlInputWithHttpOperationResponse(contentType, imageUrl, options)'
    summary: Returns probabilities of the image containing racy or adult content.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInputWithHttpOperationResponse(contentType,
      imageUrl, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Evaluate>} - The deserialized result object.'
        value: '{HttpOperationResponse<Evaluate>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function evaluateUrlInputWithHttpOperationResponse(contentType,
        imageUrl, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#evaluateUrlInput'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#evaluateUrlInput'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'evaluateUrlInput(contentType, imageUrl, options, optionalCallback)'
    summary: Returns probabilities of the image containing racy or adult content.
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.evaluateUrlInput(contentType,
      imageUrl, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Evaluate} - The deserialized result object.'
        value: '{Evaluate} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Evaluate} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Evaluate} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function evaluateUrlInput(contentType, imageUrl, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#matchUrlInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#matchUrlInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'matchUrlInputWithHttpOperationResponse(contentType, imageUrl, options)'
    summary: "Fuzzily match an image against one of your custom Image Lists. You can\rcreate and manage your custom image lists using <a\rhref=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a>\rAPI.\r\rReturns ID and tags of matching image.<br/>\r<br/>\rNote: Refresh Index must be run on the corresponding Image List before\radditions and removals are reflected in the response."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInputWithHttpOperationResponse(contentType,
      imageUrl, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<MatchResponse>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<MatchResponse>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function matchUrlInputWithHttpOperationResponse(contentType, imageUrl,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#matchUrlInput'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#matchUrlInput'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'matchUrlInput(contentType, imageUrl, options, optionalCallback)'
    summary: "Fuzzily match an image against one of your custom Image Lists. You can\rcreate and manage your custom image lists using <a\rhref=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a>\rAPI.\r\rReturns ID and tags of matching image.<br/>\r<br/>\rNote: Refresh Index must be run on the corresponding Image List before\radditions and removals are reflected in the response."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.matchUrlInput(contentType,
      imageUrl, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{MatchResponse} - The deserialized result object.'
        value: '{MatchResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MatchResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MatchResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: imageUrl
          type:
            - object
          description: The image url.
        - id: imageUrl.dataRepresentation
          type:
            - string
          description: ''
          optional: true
        - id: imageUrl.value
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function matchUrlInput(contentType, imageUrl, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#matchFileInputWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.ImageModeration#matchFileInputWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'matchFileInputWithHttpOperationResponse(imageStream, options)'
    summary: "Fuzzily match an image against one of your custom Image Lists. You can\rcreate and manage your custom image lists using <a\rhref=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a>\rAPI.\r\rReturns ID and tags of matching image.<br/>\r<br/>\rNote: Refresh Index must be run on the corresponding Image List before\radditions and removals are reflected in the response."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInputWithHttpOperationResponse(imageStream,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<MatchResponse>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<MatchResponse>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function matchFileInputWithHttpOperationResponse(imageStream, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.ImageModeration#matchFileInput'
    id: 'azure-cognitiveservices-contentmoderator.ImageModeration#matchFileInput'
    parent: azure-cognitiveservices-contentmoderator.ImageModeration
    name: 'matchFileInput(imageStream, options, optionalCallback)'
    summary: "Fuzzily match an image against one of your custom Image Lists. You can\rcreate and manage your custom image lists using <a\rhref=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a>\rAPI.\r\rReturns ID and tags of matching image.<br/>\r<br/>\rNote: Refresh Index must be run on the corresponding Image List before\radditions and removals are reflected in the response."
    fullName: >-
      azure-cognitiveservices-contentmoderator.ImageModeration.matchFileInput(imageStream,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{MatchResponse} - The deserialized result object.'
        value: '{MatchResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MatchResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MatchResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: imageStream
          type:
            - object
          description: The image file.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.cacheImage
          type:
            - boolean
          description: "Whether to retain the submitted image\rfor future use; defaults to false if omitted."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function matchFileInput(imageStream, options, optionalCallback)'
    langs:
      - js
