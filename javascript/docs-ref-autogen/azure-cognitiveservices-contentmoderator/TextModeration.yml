### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-contentmoderator.TextModeration
    id: azure-cognitiveservices-contentmoderator.TextModeration
    name: TextModeration
    summary: Class representing a TextModeration.
    fullName: azure-cognitiveservices-contentmoderator.TextModeration
    source:
      id: azure-cognitiveservices-contentmoderator.TextModeration
      path: lib\services\contentModerator\lib\operations\textModeration.js
      startLine: 371
      remote:
        branch: master
        path: lib\services\contentModerator\lib\operations\textModeration.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-cognitiveservices-contentmoderator.TextModeration.#ctor'
      - >-
        azure-cognitiveservices-contentmoderator.TextModeration#screenTextWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.TextModeration#screenText'
      - >-
        azure-cognitiveservices-contentmoderator.TextModeration#detectLanguageWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.TextModeration#detectLanguage'
    langs:
      - js
  - id: 'azure-cognitiveservices-contentmoderator.TextModeration.#ctor'
    uid: 'azure-cognitiveservices-contentmoderator.TextModeration.#ctor'
    parent: azure-cognitiveservices-contentmoderator.TextModeration
    name: TextModeration(client)
    fullName: >-
      azure-cognitiveservices-contentmoderator.TextModeration.TextModeration(client)
    summary: Create a TextModeration.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedContentModeratorAPIClient
          description: Reference to the service client.
      content: new TextModeration(client)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.TextModeration#screenTextWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.TextModeration#screenTextWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.TextModeration
    name: >-
      screenTextWithHttpOperationResponse(language, textContentType,
      textContent, options)
    summary: "Detect profanity and match against custom and shared blacklists\r\rDetects profanity in more than 100 languages and match against custom and\rshared blacklists."
    fullName: >-
      azure-cognitiveservices-contentmoderator.TextModeration.screenTextWithHttpOperationResponse(language,
      textContentType, textContent, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Screen>} - The deserialized result object.'
        value: '{HttpOperationResponse<Screen>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: textContentType
          type:
            - string
          description: "The content type. Possible values include:\r'text/plain', 'text/html', 'text/xml', 'text/markdown'"
        - id: textContent
          type:
            - string
          description: Content to screen.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.autocorrect
          type:
            - boolean
          description: Autocorrect text.
          optional: true
        - id: options.pII
          type:
            - boolean
          description: Detect personal identifiable information.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.classify
          type:
            - boolean
          description: Classify input.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function screenTextWithHttpOperationResponse(language, textContentType,
        textContent, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.TextModeration#screenText'
    id: 'azure-cognitiveservices-contentmoderator.TextModeration#screenText'
    parent: azure-cognitiveservices-contentmoderator.TextModeration
    name: >-
      screenText(language, textContentType, textContent, options,
      optionalCallback)
    summary: "Detect profanity and match against custom and shared blacklists\r\rDetects profanity in more than 100 languages and match against custom and\rshared blacklists."
    fullName: >-
      azure-cognitiveservices-contentmoderator.TextModeration.screenText(language,
      textContentType, textContent, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Screen} - The deserialized result object.'
        value: '{Screen} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Screen} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Screen} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: language
          type:
            - string
          description: Language of the terms.
        - id: textContentType
          type:
            - string
          description: "The content type. Possible values include:\r'text/plain', 'text/html', 'text/xml', 'text/markdown'"
        - id: textContent
          type:
            - string
          description: Content to screen.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.autocorrect
          type:
            - boolean
          description: Autocorrect text.
          optional: true
        - id: options.pII
          type:
            - boolean
          description: Detect personal identifiable information.
          optional: true
        - id: options.listId
          type:
            - string
          description: The list Id.
          optional: true
        - id: options.classify
          type:
            - boolean
          description: Classify input.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function screenText(language, textContentType, textContent, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.TextModeration#detectLanguageWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.TextModeration#detectLanguageWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.TextModeration
    name: >-
      detectLanguageWithHttpOperationResponse(textContentType, textContent,
      options)
    summary: "This operation will detect the language of given input content. Returns the\r<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a> for\rthe predominant language comprising the submitted text. Over 110 languages\rsupported."
    fullName: >-
      azure-cognitiveservices-contentmoderator.TextModeration.detectLanguageWithHttpOperationResponse(textContentType,
      textContent, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DetectedLanguage>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DetectedLanguage>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: textContentType
          type:
            - string
          description: "The content type. Possible values include:\r'text/plain', 'text/html', 'text/xml', 'text/markdown'"
        - id: textContent
          type:
            - string
          description: Content to screen.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function detectLanguageWithHttpOperationResponse(textContentType,
        textContent, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.TextModeration#detectLanguage'
    id: 'azure-cognitiveservices-contentmoderator.TextModeration#detectLanguage'
    parent: azure-cognitiveservices-contentmoderator.TextModeration
    name: 'detectLanguage(textContentType, textContent, options, optionalCallback)'
    summary: "This operation will detect the language of given input content. Returns the\r<a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a> for\rthe predominant language comprising the submitted text. Over 110 languages\rsupported."
    fullName: >-
      azure-cognitiveservices-contentmoderator.TextModeration.detectLanguage(textContentType,
      textContent, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DetectedLanguage} - The deserialized result object.'
        value: '{DetectedLanguage} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DetectedLanguage} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DetectedLanguage} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: textContentType
          type:
            - string
          description: "The content type. Possible values include:\r'text/plain', 'text/html', 'text/xml', 'text/markdown'"
        - id: textContent
          type:
            - string
          description: Content to screen.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function detectLanguage(textContentType, textContent, options,
        optionalCallback)
    langs:
      - js
