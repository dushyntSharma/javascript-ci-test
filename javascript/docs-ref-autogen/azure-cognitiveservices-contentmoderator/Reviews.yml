### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-contentmoderator.Reviews
    id: azure-cognitiveservices-contentmoderator.Reviews
    name: Reviews
    summary: Class representing a Reviews.
    fullName: azure-cognitiveservices-contentmoderator.Reviews
    source:
      id: azure-cognitiveservices-contentmoderator.Reviews
      path: lib\services\contentModerator\lib\operations\reviews.js
      startLine: 1977
      remote:
        branch: master
        path: lib\services\contentModerator\lib\operations\reviews.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-cognitiveservices-contentmoderator.Reviews.#ctor'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#getReviewWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#getReview'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#getJobDetailsWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#getJobDetails'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#createReviewsWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#createReviews'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#createJobWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#createJob'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrame'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#getVideoFramesWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#getVideoFrames'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#publishVideoReviewWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#publishVideoReview'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptModerationResultWithHttpOperationResponse
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptModerationResult
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscript'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#createVideoReviewsWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#createVideoReviews'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameUrlWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameUrl'
      - >-
        azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameStreamWithHttpOperationResponse
      - 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameStream'
    langs:
      - js
  - id: 'azure-cognitiveservices-contentmoderator.Reviews.#ctor'
    uid: 'azure-cognitiveservices-contentmoderator.Reviews.#ctor'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: Reviews(client)
    fullName: azure-cognitiveservices-contentmoderator.Reviews.Reviews(client)
    summary: Create a Reviews.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedContentModeratorAPIClient
          description: Reference to the service client.
      content: new Reviews(client)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#getReviewWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#getReviewWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'getReviewWithHttpOperationResponse(teamName, reviewId, options)'
    summary: Returns review details for the review Id passed.
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.getReviewWithHttpOperationResponse(teamName,
      reviewId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Review>} - The deserialized result object.'
        value: '{HttpOperationResponse<Review>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getReviewWithHttpOperationResponse(teamName, reviewId, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#getReview'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#getReview'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'getReview(teamName, reviewId, options, optionalCallback)'
    summary: Returns review details for the review Id passed.
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.getReview(teamName,
      reviewId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Review} - The deserialized result object.'
        value: '{Review} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Review} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Review} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getReview(teamName, reviewId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#getJobDetailsWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#getJobDetailsWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'getJobDetailsWithHttpOperationResponse(teamName, jobId, options)'
    summary: Get the Job Details for a Job Id.
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.getJobDetailsWithHttpOperationResponse(teamName,
      jobId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Job>} - The deserialized result object.'
        value: '{HttpOperationResponse<Job>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: jobId
          type:
            - string
          description: Id of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getJobDetailsWithHttpOperationResponse(teamName, jobId,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#getJobDetails'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#getJobDetails'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'getJobDetails(teamName, jobId, options, optionalCallback)'
    summary: Get the Job Details for a Job Id.
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.getJobDetails(teamName,
      jobId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Job} - The deserialized result object.'
        value: '{Job} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Job} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Job} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your Team Name.
        - id: jobId
          type:
            - string
          description: Id of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getJobDetails(teamName, jobId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#createReviewsWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#createReviewsWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      createReviewsWithHttpOperationResponse(urlContentType, teamName,
      createReviewBody, options)
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.createReviewsWithHttpOperationResponse(urlContentType,
      teamName, createReviewBody, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: urlContentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createReviewBody
          type:
            - array
          description: Body for create reviews API
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.subTeam
          type:
            - string
          description: "SubTeam of your team, you want to assign\rthe created review to."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createReviewsWithHttpOperationResponse(urlContentType,
        teamName, createReviewBody, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#createReviews'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#createReviews'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      createReviews(urlContentType, teamName, createReviewBody, options,
      optionalCallback)
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.createReviews(urlContentType,
      teamName, createReviewBody, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: urlContentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createReviewBody
          type:
            - array
          description: Body for create reviews API
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.subTeam
          type:
            - string
          description: "SubTeam of your team, you want to assign\rthe created review to."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createReviews(urlContentType, teamName, createReviewBody,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#createJobWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#createJobWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      createJobWithHttpOperationResponse(teamName, contentType, contentId,
      workflowName, jobContentType, content, options)
    summary: "A job Id will be returned for the content posted on this endpoint.\r\rOnce the content is evaluated against the Workflow provided the review will\rbe created or ignored based on the workflow expression.\r\r<h3>CallBack Schemas </h3>\r\r<p>\r<h4>Job Completion CallBack Sample</h4><br/>\r\r{<br/>\r\"JobId\": \"<Job Id>,<br/>\r\"ReviewId\": \"<Review Id, if the Job resulted in a Review to be\rcreated>\",<br/>\r\"WorkFlowId\": \"default\",<br/>\r\"Status\": \"<This will be one of Complete, InProgress, Error>\",<br/>\r\"ContentType\": \"Image\",<br/>\r\"ContentId\": \"<This is the ContentId that was specified on input>\",<br/>\r\"CallBackType\": \"Job\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>\r<p>\r<h4>Review Completion CallBack Sample</h4><br/>\r\r{\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.createJobWithHttpOperationResponse(teamName,
      contentType, contentId, workflowName, jobContentType, content, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<JobId>} - The deserialized result object.'
        value: '{HttpOperationResponse<JobId>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: contentType
          type:
            - string
          description: "Image, Text or Video. Possible values include:\r'Image', 'Text', 'Video'"
        - id: contentId
          type:
            - string
          description: Id/Name to identify the content submitted.
        - id: workflowName
          type:
            - string
          description: Workflow Name that you want to invoke.
        - id: jobContentType
          type:
            - string
          description: "The content type. Possible values include:\r'application/json', 'image/jpeg'"
        - id: content
          type:
            - object
          description: Content to evaluate.
        - id: content.contentValue
          type:
            - string
          description: Content to evaluate for a job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.callBackEndpoint
          type:
            - string
          description: "Callback endpoint for posting the\rcreate job result."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createJobWithHttpOperationResponse(teamName, contentType,
        contentId, workflowName, jobContentType, content, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#createJob'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#createJob'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      createJob(teamName, contentType, contentId, workflowName, jobContentType,
      content, options, optionalCallback)
    summary: "A job Id will be returned for the content posted on this endpoint.\r\rOnce the content is evaluated against the Workflow provided the review will\rbe created or ignored based on the workflow expression.\r\r<h3>CallBack Schemas </h3>\r\r<p>\r<h4>Job Completion CallBack Sample</h4><br/>\r\r{<br/>\r\"JobId\": \"<Job Id>,<br/>\r\"ReviewId\": \"<Review Id, if the Job resulted in a Review to be\rcreated>\",<br/>\r\"WorkFlowId\": \"default\",<br/>\r\"Status\": \"<This will be one of Complete, InProgress, Error>\",<br/>\r\"ContentType\": \"Image\",<br/>\r\"ContentId\": \"<This is the ContentId that was specified on input>\",<br/>\r\"CallBackType\": \"Job\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>\r<p>\r<h4>Review Completion CallBack Sample</h4><br/>\r\r{\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.createJob(teamName,
      contentType, contentId, workflowName, jobContentType, content, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{JobId} - The deserialized result object.'
        value: '{JobId} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link JobId} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link JobId} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: contentType
          type:
            - string
          description: "Image, Text or Video. Possible values include:\r'Image', 'Text', 'Video'"
        - id: contentId
          type:
            - string
          description: Id/Name to identify the content submitted.
        - id: workflowName
          type:
            - string
          description: Workflow Name that you want to invoke.
        - id: jobContentType
          type:
            - string
          description: "The content type. Possible values include:\r'application/json', 'image/jpeg'"
        - id: content
          type:
            - object
          description: Content to evaluate.
        - id: content.contentValue
          type:
            - string
          description: Content to evaluate for a job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.callBackEndpoint
          type:
            - string
          description: "Callback endpoint for posting the\rcreate job result."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createJob(teamName, contentType, contentId, workflowName,
        jobContentType, content, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'addVideoFrameWithHttpOperationResponse(teamName, reviewId, options)'
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameWithHttpOperationResponse(teamName,
      reviewId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timescale
          type:
            - number
          description: "Timescale of the video you are adding\rframes to."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function addVideoFrameWithHttpOperationResponse(teamName, reviewId,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrame'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrame'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'addVideoFrame(teamName, reviewId, options, optionalCallback)'
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame(teamName,
      reviewId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timescale
          type:
            - number
          description: "Timescale of the video you are adding\rframes to."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function addVideoFrame(teamName, reviewId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#getVideoFramesWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#getVideoFramesWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'getVideoFramesWithHttpOperationResponse(teamName, reviewId, options)'
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.getVideoFramesWithHttpOperationResponse(teamName,
      reviewId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Frames>} - The deserialized result object.'
        value: '{HttpOperationResponse<Frames>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.startSeed
          type:
            - number
          description: "Time stamp of the frame from where you\rwant to start fetching the frames."
          optional: true
        - id: options.noOfRecords
          type:
            - number
          description: Number of frames to fetch.
          optional: true
        - id: options.filter
          type:
            - string
          description: Get frames filtered by tags.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getVideoFramesWithHttpOperationResponse(teamName, reviewId,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#getVideoFrames'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#getVideoFrames'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'getVideoFrames(teamName, reviewId, options, optionalCallback)'
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames(teamName,
      reviewId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Frames} - The deserialized result object.'
        value: '{Frames} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Frames} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Frames} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.startSeed
          type:
            - number
          description: "Time stamp of the frame from where you\rwant to start fetching the frames."
          optional: true
        - id: options.noOfRecords
          type:
            - number
          description: Number of frames to fetch.
          optional: true
        - id: options.filter
          type:
            - string
          description: Get frames filtered by tags.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getVideoFrames(teamName, reviewId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#publishVideoReviewWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#publishVideoReviewWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'publishVideoReviewWithHttpOperationResponse(teamName, reviewId, options)'
    summary: Publish video review to make it available for review.
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.publishVideoReviewWithHttpOperationResponse(teamName,
      reviewId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function publishVideoReviewWithHttpOperationResponse(teamName, reviewId,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#publishVideoReview'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#publishVideoReview'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'publishVideoReview(teamName, reviewId, options, optionalCallback)'
    summary: Publish video review to make it available for review.
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview(teamName,
      reviewId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function publishVideoReview(teamName, reviewId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptModerationResultWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptModerationResultWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      addVideoTranscriptModerationResultWithHttpOperationResponse(contentType,
      teamName, reviewId, transcriptModerationBody, options)
    summary: "This API adds a transcript screen text result file for a video review.\rTranscript screen text result file is a result of Screen Text API . In order\rto generate transcript screen text result file , a transcript file has to be\rscreened for profanity using Screen Text API."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResultWithHttpOperationResponse(contentType,
      teamName, reviewId, transcriptModerationBody, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: transcriptModerationBody
          type:
            - array
          description: "Body for add video transcript\rmoderation result API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        addVideoTranscriptModerationResultWithHttpOperationResponse(contentType,
        teamName, reviewId, transcriptModerationBody, options)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptModerationResult
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptModerationResult
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      addVideoTranscriptModerationResult(contentType, teamName, reviewId,
      transcriptModerationBody, options, optionalCallback)
    summary: "This API adds a transcript screen text result file for a video review.\rTranscript screen text result file is a result of Screen Text API . In order\rto generate transcript screen text result file , a transcript file has to be\rscreened for profanity using Screen Text API."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult(contentType,
      teamName, reviewId, transcriptModerationBody, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: transcriptModerationBody
          type:
            - array
          description: "Body for add video transcript\rmoderation result API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function addVideoTranscriptModerationResult(contentType, teamName,
        reviewId, transcriptModerationBody, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscriptWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      addVideoTranscriptWithHttpOperationResponse(teamName, reviewId, vTTfile,
      options)
    summary: "This API adds a transcript file (text version of all the words spoken in a\rvideo) to a video review. The file should be a valid WebVTT format."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptWithHttpOperationResponse(teamName,
      reviewId, vTTfile, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: vTTfile
          type:
            - object
          description: Transcript file of the video.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function addVideoTranscriptWithHttpOperationResponse(teamName, reviewId,
        vTTfile, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscript'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoTranscript'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: 'addVideoTranscript(teamName, reviewId, vTTfile, options, optionalCallback)'
    summary: "This API adds a transcript file (text version of all the words spoken in a\rvideo) to a video review. The file should be a valid WebVTT format."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript(teamName,
      reviewId, vTTfile, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: vTTfile
          type:
            - object
          description: Transcript file of the video.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function addVideoTranscript(teamName, reviewId, vTTfile, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#createVideoReviewsWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#createVideoReviewsWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      createVideoReviewsWithHttpOperationResponse(contentType, teamName,
      createVideoReviewsBody, options)
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.createVideoReviewsWithHttpOperationResponse(contentType,
      teamName, createVideoReviewsBody, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createVideoReviewsBody
          type:
            - array
          description: Body for create reviews API
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.subTeam
          type:
            - string
          description: "SubTeam of your team, you want to assign\rthe created review to."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createVideoReviewsWithHttpOperationResponse(contentType,
        teamName, createVideoReviewsBody, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#createVideoReviews'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#createVideoReviews'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      createVideoReviews(contentType, teamName, createVideoReviewsBody, options,
      optionalCallback)
    summary: "The reviews created would show up for Reviewers on your team. As Reviewers\rcomplete reviewing, results of the Review would be POSTED (i.e. HTTP POST)\ron the specified CallBackEndpoint.\r\r<h3>CallBack Schemas </h3>\r<h4>Review Completion CallBack Sample</h4>\r<p>\r{<br/>\r\"ReviewId\": \"<Review Id>\",<br/>\r\"ModifiedOn\": \"2016-10-11T22:36:32.9934851Z\",<br/>\r\"ModifiedBy\": \"<Name of the Reviewer>\",<br/>\r\"CallBackType\": \"Review\",<br/>\r\"ContentId\": \"<The ContentId that was specified input>\",<br/>\r\"Metadata\": {<br/>\r\"adultscore\": \"0.xxx\",<br/>\r\"a\": \"False\",<br/>\r\"racyscore\": \"0.xxx\",<br/>\r\"r\": \"True\"<br/>\r},<br/>\r\"ReviewerResultTags\": {<br/>\r\"a\": \"False\",<br/>\r\"r\": \"True\"<br/>\r}<br/>\r}<br/>\r\r</p>."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews(contentType,
      teamName, createVideoReviewsBody, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: createVideoReviewsBody
          type:
            - array
          description: Body for create reviews API
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.subTeam
          type:
            - string
          description: "SubTeam of your team, you want to assign\rthe created review to."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createVideoReviews(contentType, teamName,
        createVideoReviewsBody, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameUrlWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameUrlWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      addVideoFrameUrlWithHttpOperationResponse(contentType, teamName, reviewId,
      videoFrameBody, options)
    summary: "Use this method to add frames for a video review.Timescale: This parameter\ris a factor which is used to convert the timestamp on a frame into\rmilliseconds. Timescale is provided in the output of the Content Moderator\rvideo media processor on the Azure Media Services platform.Timescale in the\rVideo Moderation output is Ticks/Second."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrlWithHttpOperationResponse(contentType,
      teamName, reviewId, videoFrameBody, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: videoFrameBody
          type:
            - array
          description: Body for add video frames API
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timescale
          type:
            - number
          description: Timescale of the video.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function addVideoFrameUrlWithHttpOperationResponse(contentType,
        teamName, reviewId, videoFrameBody, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameUrl'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameUrl'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      addVideoFrameUrl(contentType, teamName, reviewId, videoFrameBody, options,
      optionalCallback)
    summary: "Use this method to add frames for a video review.Timescale: This parameter\ris a factor which is used to convert the timestamp on a frame into\rmilliseconds. Timescale is provided in the output of the Content Moderator\rvideo media processor on the Azure Media Services platform.Timescale in the\rVideo Moderation output is Ticks/Second."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl(contentType,
      teamName, reviewId, videoFrameBody, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: videoFrameBody
          type:
            - array
          description: Body for add video frames API
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timescale
          type:
            - number
          description: Timescale of the video.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function addVideoFrameUrl(contentType, teamName, reviewId,
        videoFrameBody, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameStreamWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameStreamWithHttpOperationResponse
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      addVideoFrameStreamWithHttpOperationResponse(contentType, teamName,
      reviewId, frameImageZip, frameMetadata, options)
    summary: "Use this method to add frames for a video review.Timescale: This parameter\ris a factor which is used to convert the timestamp on a frame into\rmilliseconds. Timescale is provided in the output of the Content Moderator\rvideo media processor on the Azure Media Services platform.Timescale in the\rVideo Moderation output is Ticks/Second."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStreamWithHttpOperationResponse(contentType,
      teamName, reviewId, frameImageZip, frameMetadata, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: frameImageZip
          type:
            - object
          description: Zip file containing frame images.
        - id: frameMetadata
          type:
            - string
          description: Metadata of the frame.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timescale
          type:
            - number
          description: Timescale of the video .
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function addVideoFrameStreamWithHttpOperationResponse(contentType,
        teamName, reviewId, frameImageZip, frameMetadata, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameStream'
    id: 'azure-cognitiveservices-contentmoderator.Reviews#addVideoFrameStream'
    parent: azure-cognitiveservices-contentmoderator.Reviews
    name: >-
      addVideoFrameStream(contentType, teamName, reviewId, frameImageZip,
      frameMetadata, options, optionalCallback)
    summary: "Use this method to add frames for a video review.Timescale: This parameter\ris a factor which is used to convert the timestamp on a frame into\rmilliseconds. Timescale is provided in the output of the Content Moderator\rvideo media processor on the Azure Media Services platform.Timescale in the\rVideo Moderation output is Ticks/Second."
    fullName: >-
      azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream(contentType,
      teamName, reviewId, frameImageZip, frameMetadata, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentType
          type:
            - string
          description: The content type.
        - id: teamName
          type:
            - string
          description: Your team name.
        - id: reviewId
          type:
            - string
          description: Id of the review.
        - id: frameImageZip
          type:
            - object
          description: Zip file containing frame images.
        - id: frameMetadata
          type:
            - string
          description: Metadata of the frame.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timescale
          type:
            - number
          description: Timescale of the video .
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function addVideoFrameStream(contentType, teamName, reviewId,
        frameImageZip, frameMetadata, options, optionalCallback)
    langs:
      - js
