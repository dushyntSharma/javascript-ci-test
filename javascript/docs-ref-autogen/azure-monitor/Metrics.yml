### YamlMime:UniversalReference
items:
  - uid: azure-monitor.Metrics
    id: azure-monitor.Metrics
    name: Metrics
    summary: Class representing a Metrics.
    fullName: azure-monitor.Metrics
    source:
      id: azure-monitor.Metrics
      path: lib\services\monitor\lib\operations\metrics.js
      startLine: 247
      remote:
        branch: master
        path: lib\services\monitor\lib\operations\metrics.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-monitor.Metrics.#ctor'
      - 'azure-monitor.Metrics#listWithHttpOperationResponse'
      - 'azure-monitor.Metrics#list'
    langs:
      - js
  - id: 'azure-monitor.Metrics.#ctor'
    uid: 'azure-monitor.Metrics.#ctor'
    parent: azure-monitor.Metrics
    name: Metrics(client)
    fullName: azure-monitor.Metrics.Metrics(client)
    summary: Create a Metrics.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-monitor.MonitorClient
          description: Reference to the service client.
      content: new Metrics(client)
    langs:
      - js
  - uid: 'azure-monitor.Metrics#listWithHttpOperationResponse'
    id: 'azure-monitor.Metrics#listWithHttpOperationResponse'
    parent: azure-monitor.Metrics
    name: 'listWithHttpOperationResponse(resourceUri, options)'
    summary: '**Lists the metric values for a resource**.'
    fullName: 'azure-monitor.Metrics.listWithHttpOperationResponse(resourceUri, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Response>} - The deserialized result object.'
        value: '{HttpOperationResponse<Response>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceUri
          type:
            - string
          description: The identifier of the resource.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timespan
          type:
            - string
          description: "The timespan of the query. It is a string\rwith the following format 'startDateTime_ISO/endDateTime_ISO'."
          optional: true
        - id: options.interval
          type:
            - azure-monitor.moment.duration
          description: "The interval (i.e. timegrain) of\rthe query."
          optional: true
        - id: options.metric
          type:
            - string
          description: The name of the metric to retrieve.
          optional: true
        - id: options.aggregation
          type:
            - string
          description: "The list of aggregation types (comma\rseparated) to retrieve."
          optional: true
        - id: options.top
          type:
            - number
          description: "The maximum number of records to retrieve.\rValid only if $filter is specified.\rDefaults to 10."
          optional: true
        - id: options.orderby
          type:
            - string
          description: "The aggregation to use for sorting results\rand the direction of the sort.\rOnly one order can be specified.\rExamples: sum asc."
          optional: true
        - id: options.filter
          type:
            - string
          description: "The **$filter** is used to reduce the set\rof metric data returned.<br>Example:<br>Metric contains metadata A, B and\rC.<br>- Return all time series of C where A = a1 and B = b1 or\rb2<br>**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**<br>-\rInvalid variant:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B =\r‘b2’**<br>This is invalid because the logical or operator cannot separate\rtwo different metadata names.<br>- Return all time series where A = a1, B =\rb1 and C = c1:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**<br>-\rReturn all time series where A = a1<br>**$filter=A eq ‘a1’ and B eq ‘*’ and\rC eq ‘*’**."
          optional: true
        - id: options.resultType
          type:
            - string
          description: "Reduces the set of data collected. The\rsyntax allowed depends on the operation. See the operation's description for\rdetails. Possible values include: 'Data', 'Metadata'"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listWithHttpOperationResponse(resourceUri, options)'
    langs:
      - js
  - uid: 'azure-monitor.Metrics#list'
    id: 'azure-monitor.Metrics#list'
    parent: azure-monitor.Metrics
    name: 'list(resourceUri, options, optionalCallback)'
    summary: '**Lists the metric values for a resource**.'
    fullName: 'azure-monitor.Metrics.list(resourceUri, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Response} - The deserialized result object.'
        value: '{Response} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Response} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Response} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceUri
          type:
            - string
          description: The identifier of the resource.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timespan
          type:
            - string
          description: "The timespan of the query. It is a string\rwith the following format 'startDateTime_ISO/endDateTime_ISO'."
          optional: true
        - id: options.interval
          type:
            - azure-monitor.moment.duration
          description: "The interval (i.e. timegrain) of\rthe query."
          optional: true
        - id: options.metric
          type:
            - string
          description: The name of the metric to retrieve.
          optional: true
        - id: options.aggregation
          type:
            - string
          description: "The list of aggregation types (comma\rseparated) to retrieve."
          optional: true
        - id: options.top
          type:
            - number
          description: "The maximum number of records to retrieve.\rValid only if $filter is specified.\rDefaults to 10."
          optional: true
        - id: options.orderby
          type:
            - string
          description: "The aggregation to use for sorting results\rand the direction of the sort.\rOnly one order can be specified.\rExamples: sum asc."
          optional: true
        - id: options.filter
          type:
            - string
          description: "The **$filter** is used to reduce the set\rof metric data returned.<br>Example:<br>Metric contains metadata A, B and\rC.<br>- Return all time series of C where A = a1 and B = b1 or\rb2<br>**$filter=A eq ‘a1’ and B eq ‘b1’ or B eq ‘b2’ and C eq ‘*’**<br>-\rInvalid variant:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘*’ or B =\r‘b2’**<br>This is invalid because the logical or operator cannot separate\rtwo different metadata names.<br>- Return all time series where A = a1, B =\rb1 and C = c1:<br>**$filter=A eq ‘a1’ and B eq ‘b1’ and C eq ‘c1’**<br>-\rReturn all time series where A = a1<br>**$filter=A eq ‘a1’ and B eq ‘*’ and\rC eq ‘*’**."
          optional: true
        - id: options.resultType
          type:
            - string
          description: "Reduces the set of data collected. The\rsyntax allowed depends on the operation. See the operation's description for\rdetails. Possible values include: 'Data', 'Metadata'"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(resourceUri, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-monitor.MonitorClient
    name: MonitorClient
    fullName: azure-monitor.MonitorClient
    isExternal: false
