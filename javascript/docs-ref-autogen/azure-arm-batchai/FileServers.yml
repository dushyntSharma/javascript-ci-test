### YamlMime:UniversalReference
items:
  - uid: azure-arm-batchai.FileServers
    id: azure-arm-batchai.FileServers
    name: FileServers
    summary: Class representing a FileServers.
    fullName: azure-arm-batchai.FileServers
    source:
      id: azure-arm-batchai.FileServers
      path: lib\services\batchaiManagement\lib\operations\fileServers.js
      startLine: 1428
      remote:
        branch: master
        path: lib\services\batchaiManagement\lib\operations\fileServers.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-batchai.FileServers.#ctor'
      - 'azure-arm-batchai.FileServers#createWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#create'
      - 'azure-arm-batchai.FileServers#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#deleteMethod'
      - 'azure-arm-batchai.FileServers#getWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#get'
      - 'azure-arm-batchai.FileServers#listWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#list'
      - >-
        azure-arm-batchai.FileServers#listByResourceGroupWithHttpOperationResponse
      - 'azure-arm-batchai.FileServers#listByResourceGroup'
      - 'azure-arm-batchai.FileServers#beginCreateWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#beginCreate'
      - 'azure-arm-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#beginDeleteMethod'
      - 'azure-arm-batchai.FileServers#listNextWithHttpOperationResponse'
      - 'azure-arm-batchai.FileServers#listNext'
      - >-
        azure-arm-batchai.FileServers#listByResourceGroupNextWithHttpOperationResponse
      - 'azure-arm-batchai.FileServers#listByResourceGroupNext'
    langs:
      - js
  - id: 'azure-arm-batchai.FileServers.#ctor'
    uid: 'azure-arm-batchai.FileServers.#ctor'
    parent: azure-arm-batchai.FileServers
    name: FileServers(client)
    fullName: azure-arm-batchai.FileServers.FileServers(client)
    summary: Create a FileServers.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-batchai.BatchAIManagementClient
          description: Reference to the service client.
      content: new FileServers(client)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#createWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#createWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      createWithHttpOperationResponse(resourceGroupName, fileServerName,
      parameters, options)
    summary: Creates a file server.
    fullName: >-
      azure-arm-batchai.FileServers.createWithHttpOperationResponse(resourceGroupName,
      fileServerName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: parameters
          type:
            - object
          description: "The parameters to provide for file server\rcreation."
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the File\rServer."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe File Server."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machine of the\rfile server. For information about available VM sizes for fileservers from\rthe Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux)."
        - id: parameters.sshConfiguration
          type:
            - object
          description: "SSH settings for the file\rserver."
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: "List of source\rIP ranges to allow SSH connection to VM. Default value is '*' can be used to\rmatch all source IPs. Maximum number of publicIPs that can be specified are\r400."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: "Settings for\ruser account of VMs."
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: "Settings for the data disk which would\rbe created for the file server."
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: "Initial disk size in GB\rfor blank data disks, and the new desired size for resizing existing data\rdisks."
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: "Number of data disks to be\rattached to the VM. RAID level 0 will be applied in the case of multiple\rdisks."
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: "Specifies the type\rof storage account to be used on the disk. Possible values are: Standard_LRS\ror Premium_LRS. Possible values include: 'Standard_LRS', 'Premium_LRS'"
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        fileServerName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#create'
    id: 'azure-arm-batchai.FileServers#create'
    parent: azure-arm-batchai.FileServers
    name: >-
      create(resourceGroupName, fileServerName, parameters, options,
      optionalCallback)
    summary: Creates a file server.
    fullName: >-
      azure-arm-batchai.FileServers.create(resourceGroupName, fileServerName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: parameters
          type:
            - object
          description: "The parameters to provide for file server\rcreation."
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the File\rServer."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe File Server."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machine of the\rfile server. For information about available VM sizes for fileservers from\rthe Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux)."
        - id: parameters.sshConfiguration
          type:
            - object
          description: "SSH settings for the file\rserver."
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: "List of source\rIP ranges to allow SSH connection to VM. Default value is '*' can be used to\rmatch all source IPs. Maximum number of publicIPs that can be specified are\r400."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: "Settings for\ruser account of VMs."
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: "Settings for the data disk which would\rbe created for the file server."
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: "Initial disk size in GB\rfor blank data disks, and the new desired size for resizing existing data\rdisks."
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: "Number of data disks to be\rattached to the VM. RAID level 0 will be applied in the case of multiple\rdisks."
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: "Specifies the type\rof storage account to be used on the disk. Possible values are: Standard_LRS\ror Premium_LRS. Possible values include: 'Standard_LRS', 'Premium_LRS'"
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function create(resourceGroupName, fileServerName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, fileServerName,
      options)
    summary: Delete a file Server.
    fullName: >-
      azure-arm-batchai.FileServers.deleteMethodWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        fileServerName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#deleteMethod'
    id: 'azure-arm-batchai.FileServers#deleteMethod'
    parent: azure-arm-batchai.FileServers
    name: 'deleteMethod(resourceGroupName, fileServerName, options, optionalCallback)'
    summary: Delete a file Server.
    fullName: >-
      azure-arm-batchai.FileServers.deleteMethod(resourceGroupName,
      fileServerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, fileServerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#getWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#getWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: 'getWithHttpOperationResponse(resourceGroupName, fileServerName, options)'
    summary: Gets information about the specified Cluster.
    fullName: >-
      azure-arm-batchai.FileServers.getWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, fileServerName,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#get'
    id: 'azure-arm-batchai.FileServers#get'
    parent: azure-arm-batchai.FileServers
    name: 'get(resourceGroupName, fileServerName, options, optionalCallback)'
    summary: Gets information about the specified Cluster.
    fullName: >-
      azure-arm-batchai.FileServers.get(resourceGroupName, fileServerName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, fileServerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#listWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: listWithHttpOperationResponse(options)
    summary: "To list all the file servers available under the given subscription (and\racross all resource groups within that subscription)"
    fullName: azure-arm-batchai.FileServers.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.fileServersListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause.. Used to filter results that are returned in the GET respnose."
          optional: true
        - id: options.fileServersListOptions.select
          type:
            - string
          description: "An OData $select\rclause. Used to select the properties to be returned in the GET respnose."
          optional: true
        - id: options.fileServersListOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 files can be\rreturned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#list'
    id: 'azure-arm-batchai.FileServers#list'
    parent: azure-arm-batchai.FileServers
    name: 'list(options, optionalCallback)'
    summary: "To list all the file servers available under the given subscription (and\racross all resource groups within that subscription)"
    fullName: 'azure-arm-batchai.FileServers.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.fileServersListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause.. Used to filter results that are returned in the GET respnose."
          optional: true
        - id: options.fileServersListOptions.select
          type:
            - string
          description: "An OData $select\rclause. Used to select the properties to be returned in the GET respnose."
          optional: true
        - id: options.fileServersListOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 files can be\rreturned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listByResourceGroupWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#listByResourceGroupWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: "Gets a formatted list of file servers and their properties associated within\rthe specified resource group."
    fullName: >-
      azure-arm-batchai.FileServers.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListByResourceGroupOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileServersListByResourceGroupOptions.filter
          type:
            - string
          description: "An\rOData $filter clause.. Used to filter results that are returned in the GET\rrespnose."
          optional: true
        - id: options.fileServersListByResourceGroupOptions.select
          type:
            - string
          description: "An\rOData $select clause. Used to select the properties to be returned in the\rGET respnose."
          optional: true
        - id: options.fileServersListByResourceGroupOptions.maxResults
          type:
            - number
          description: "The maximum number of items to return in the response. A maximum of 1000\rfiles can be returned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listByResourceGroup'
    id: 'azure-arm-batchai.FileServers#listByResourceGroup'
    parent: azure-arm-batchai.FileServers
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: "Gets a formatted list of file servers and their properties associated within\rthe specified resource group."
    fullName: >-
      azure-arm-batchai.FileServers.listByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileServersListByResourceGroupOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileServersListByResourceGroupOptions.filter
          type:
            - string
          description: "An\rOData $filter clause.. Used to filter results that are returned in the GET\rrespnose."
          optional: true
        - id: options.fileServersListByResourceGroupOptions.select
          type:
            - string
          description: "An\rOData $select clause. Used to select the properties to be returned in the\rGET respnose."
          optional: true
        - id: options.fileServersListByResourceGroupOptions.maxResults
          type:
            - number
          description: "The maximum number of items to return in the response. A maximum of 1000\rfiles can be returned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#beginCreateWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, fileServerName,
      parameters, options)
    summary: Creates a file server.
    fullName: >-
      azure-arm-batchai.FileServers.beginCreateWithHttpOperationResponse(resourceGroupName,
      fileServerName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
        value: '{HttpOperationResponse<FileServer>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: parameters
          type:
            - object
          description: "The parameters to provide for file server\rcreation."
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the File\rServer."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe File Server."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machine of the\rfile server. For information about available VM sizes for fileservers from\rthe Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux)."
        - id: parameters.sshConfiguration
          type:
            - object
          description: "SSH settings for the file\rserver."
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: "List of source\rIP ranges to allow SSH connection to VM. Default value is '*' can be used to\rmatch all source IPs. Maximum number of publicIPs that can be specified are\r400."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: "Settings for\ruser account of VMs."
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: "Settings for the data disk which would\rbe created for the file server."
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: "Initial disk size in GB\rfor blank data disks, and the new desired size for resizing existing data\rdisks."
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: "Number of data disks to be\rattached to the VM. RAID level 0 will be applied in the case of multiple\rdisks."
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: "Specifies the type\rof storage account to be used on the disk. Possible values are: Standard_LRS\ror Premium_LRS. Possible values include: 'Standard_LRS', 'Premium_LRS'"
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        fileServerName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginCreate'
    id: 'azure-arm-batchai.FileServers#beginCreate'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginCreate(resourceGroupName, fileServerName, parameters, options,
      optionalCallback)
    summary: Creates a file server.
    fullName: >-
      azure-arm-batchai.FileServers.beginCreate(resourceGroupName,
      fileServerName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServer} - The deserialized result object.'
        value: '{FileServer} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServer} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: parameters
          type:
            - object
          description: "The parameters to provide for file server\rcreation."
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the File\rServer."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe File Server."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machine of the\rfile server. For information about available VM sizes for fileservers from\rthe Virtual Machines Marketplace, see Sizes for Virtual Machines (Linux)."
        - id: parameters.sshConfiguration
          type:
            - object
          description: "SSH settings for the file\rserver."
        - id: parameters.sshConfiguration.publicIPsToAllow
          type:
            - array
          description: "List of source\rIP ranges to allow SSH connection to VM. Default value is '*' can be used to\rmatch all source IPs. Maximum number of publicIPs that can be specified are\r400."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings
          type:
            - object
          description: "Settings for\ruser account of VMs."
        - id: parameters.sshConfiguration.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: >-
            parameters.sshConfiguration.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.sshConfiguration.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.dataDisks
          type:
            - object
          description: "Settings for the data disk which would\rbe created for the file server."
        - id: parameters.dataDisks.diskSizeInGB
          type:
            - number
          description: "Initial disk size in GB\rfor blank data disks, and the new desired size for resizing existing data\rdisks."
        - id: parameters.dataDisks.diskCount
          type:
            - number
          description: "Number of data disks to be\rattached to the VM. RAID level 0 will be applied in the case of multiple\rdisks."
        - id: parameters.dataDisks.storageAccountType
          type:
            - string
          description: "Specifies the type\rof storage account to be used on the disk. Possible values are: Standard_LRS\ror Premium_LRS. Possible values include: 'Standard_LRS', 'Premium_LRS'"
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreate(resourceGroupName, fileServerName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    summary: Delete a file Server.
    fullName: >-
      azure-arm-batchai.FileServers.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      fileServerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        fileServerName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#beginDeleteMethod'
    id: 'azure-arm-batchai.FileServers#beginDeleteMethod'
    parent: azure-arm-batchai.FileServers
    name: >-
      beginDeleteMethod(resourceGroupName, fileServerName, options,
      optionalCallback)
    summary: Delete a file Server.
    fullName: >-
      azure-arm-batchai.FileServers.beginDeleteMethod(resourceGroupName,
      fileServerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: fileServerName
          type:
            - string
          description: "The name of the file server within the\rspecified resource group. File server names can only contain a combination\rof alphanumeric characters along with dash (-) and underscore (_). The name\rmust be from 1 through 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, fileServerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.FileServers#listNextWithHttpOperationResponse'
    parent: azure-arm-batchai.FileServers
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "To list all the file servers available under the given subscription (and\racross all resource groups within that subscription)"
    fullName: >-
      azure-arm-batchai.FileServers.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listNext'
    id: 'azure-arm-batchai.FileServers#listNext'
    parent: azure-arm-batchai.FileServers
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: "To list all the file servers available under the given subscription (and\racross all resource groups within that subscription)"
    fullName: >-
      azure-arm-batchai.FileServers.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-batchai.FileServers#listByResourceGroupNextWithHttpOperationResponse
    id: >-
      azure-arm-batchai.FileServers#listByResourceGroupNextWithHttpOperationResponse
    parent: azure-arm-batchai.FileServers
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Gets a formatted list of file servers and their properties associated within\rthe specified resource group."
    fullName: >-
      azure-arm-batchai.FileServers.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<FileServerListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.FileServers#listByResourceGroupNext'
    id: 'azure-arm-batchai.FileServers#listByResourceGroupNext'
    parent: azure-arm-batchai.FileServers
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: "Gets a formatted list of file servers and their properties associated within\rthe specified resource group."
    fullName: >-
      azure-arm-batchai.FileServers.listByResourceGroupNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileServerListResult} - The deserialized result object.'
        value: '{FileServerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileServerListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-batchai.BatchAIManagementClient
    name: BatchAIManagementClient
    fullName: azure-arm-batchai.BatchAIManagementClient
    isExternal: false
