### YamlMime:UniversalReference
items:
  - uid: azure-arm-batchai.Clusters
    id: azure-arm-batchai.Clusters
    name: Clusters
    summary: Class representing a Clusters.
    fullName: azure-arm-batchai.Clusters
    source:
      id: azure-arm-batchai.Clusters
      path: lib\services\batchaiManagement\lib\operations\clusters.js
      startLine: 2077
      remote:
        branch: master
        path: lib\services\batchaiManagement\lib\operations\clusters.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-batchai.Clusters.#ctor'
      - 'azure-arm-batchai.Clusters#createWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#create'
      - 'azure-arm-batchai.Clusters#updateWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#update'
      - 'azure-arm-batchai.Clusters#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#deleteMethod'
      - 'azure-arm-batchai.Clusters#getWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#get'
      - >-
        azure-arm-batchai.Clusters#listRemoteLoginInformationWithHttpOperationResponse
      - 'azure-arm-batchai.Clusters#listRemoteLoginInformation'
      - 'azure-arm-batchai.Clusters#listWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#list'
      - 'azure-arm-batchai.Clusters#listByResourceGroupWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#listByResourceGroup'
      - 'azure-arm-batchai.Clusters#beginCreateWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#beginCreate'
      - 'azure-arm-batchai.Clusters#beginDeleteMethodWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#beginDeleteMethod'
      - >-
        azure-arm-batchai.Clusters#listRemoteLoginInformationNextWithHttpOperationResponse
      - 'azure-arm-batchai.Clusters#listRemoteLoginInformationNext'
      - 'azure-arm-batchai.Clusters#listNextWithHttpOperationResponse'
      - 'azure-arm-batchai.Clusters#listNext'
      - >-
        azure-arm-batchai.Clusters#listByResourceGroupNextWithHttpOperationResponse
      - 'azure-arm-batchai.Clusters#listByResourceGroupNext'
    langs:
      - js
  - id: 'azure-arm-batchai.Clusters.#ctor'
    uid: 'azure-arm-batchai.Clusters.#ctor'
    parent: azure-arm-batchai.Clusters
    name: Clusters(client)
    fullName: azure-arm-batchai.Clusters.Clusters(client)
    summary: Create a Clusters.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-batchai.BatchAIManagementClient
          description: Reference to the service client.
      content: new Clusters(client)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#createWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#createWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      createWithHttpOperationResponse(resourceGroupName, clusterName,
      parameters, options)
    summary: "Adds a cluster. A cluster is a collection of compute nodes. Multiple jobs\rcan be run on the same cluster."
    fullName: >-
      azure-arm-batchai.Clusters.createWithHttpOperationResponse(resourceGroupName,
      clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: parameters
          type:
            - object
          description: The parameters to provide for cluster creation.
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the\rcluster."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe Cluster."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machines in the\rcluster. All virtual machines in a cluster are the same size. For\rinformation about available VM sizes for clusters using images from the\rVirtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or\rSizes for Virtual Machines (Windows). Batch AI service supports all Azure VM\rsizes except STANDARD_A0 and those with premium storage (STANDARD_GS,\rSTANDARD_DS, and STANDARD_DSV2 series)."
        - id: parameters.vmPriority
          type:
            - string
          description: "dedicated or lowpriority. Default is\rdedicated. Possible values include: 'dedicated', 'lowpriority'"
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: Desired scale for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: "The scale for the cluster\rby manual settings"
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: "The desired\rnumber of compute nodes in the Cluster. Default is 0. If autoScaleSettings\rare not specified, then the Cluster starts with this target."
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: "Determines what to do with the job(s) running on compute node if the Cluster\rsize is decreasing. The default value is requeue. Possible values include:\r'requeue', 'terminate', 'waitforjobcompletion', 'unknown'"
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: "The scale for the\rcluster by autoscale settings"
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: Specifies the minimum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: Specifies the maximum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: "Specifies the number of compute nodes to allocate on cluster creation. Note\rthat this value is used only during cluster creation."
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: "Settings for OS\rimage and mounted data volumes."
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Reference to OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "Publisher of\rthe image."
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "Version of\rthe image"
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: "Setup to be done on all compute nodes\rin the cluster."
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: "Specifies a setup task\rwhich can be used to customize the compute nodes of the cluster. The\rNodeSetup task runs everytime a VM is rebooted. For that reason the task\rcode needs to be idempotent. Generally it is used to either download static\rdata that is required for all jobs that run on the cluster VMs or to\rdownload/install software."
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: "Command Line to\rstart Setup process."
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: Collection of environment settings.
          optional: true
        - id: parameters.nodeSetup.setupTask.runElevated
          type:
            - boolean
          description: "Specifies\rwhether to run the setup task in elevated mode. The default value is false."
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: "The path\rwhere the Batch AI service will upload the stdout and stderror of setup\rtask."
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: "Information on shared\rvolumes to be used by jobs."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: "Azure\rFile Share setup configuration. References to Azure File Shares that are to\rbe mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: "Azure Blob FileSystem setup configuration. References to Azure Blob FUSE\rthat are to be mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: "References to\ra list of file servers that are mounted to the cluster node."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            References to a list of file servers that are mounted to the cluster
            node.
          optional: true
        - id: parameters.userAccountSettings
          type:
            - object
          description: "Settings for user account\rthat will be created on all compute nodes of the cluster."
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName, clusterName,
        parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#create'
    id: 'azure-arm-batchai.Clusters#create'
    parent: azure-arm-batchai.Clusters
    name: >-
      create(resourceGroupName, clusterName, parameters, options,
      optionalCallback)
    summary: "Adds a cluster. A cluster is a collection of compute nodes. Multiple jobs\rcan be run on the same cluster."
    fullName: >-
      azure-arm-batchai.Clusters.create(resourceGroupName, clusterName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: parameters
          type:
            - object
          description: The parameters to provide for cluster creation.
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the\rcluster."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe Cluster."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machines in the\rcluster. All virtual machines in a cluster are the same size. For\rinformation about available VM sizes for clusters using images from the\rVirtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or\rSizes for Virtual Machines (Windows). Batch AI service supports all Azure VM\rsizes except STANDARD_A0 and those with premium storage (STANDARD_GS,\rSTANDARD_DS, and STANDARD_DSV2 series)."
        - id: parameters.vmPriority
          type:
            - string
          description: "dedicated or lowpriority. Default is\rdedicated. Possible values include: 'dedicated', 'lowpriority'"
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: Desired scale for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: "The scale for the cluster\rby manual settings"
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: "The desired\rnumber of compute nodes in the Cluster. Default is 0. If autoScaleSettings\rare not specified, then the Cluster starts with this target."
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: "Determines what to do with the job(s) running on compute node if the Cluster\rsize is decreasing. The default value is requeue. Possible values include:\r'requeue', 'terminate', 'waitforjobcompletion', 'unknown'"
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: "The scale for the\rcluster by autoscale settings"
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: Specifies the minimum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: Specifies the maximum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: "Specifies the number of compute nodes to allocate on cluster creation. Note\rthat this value is used only during cluster creation."
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: "Settings for OS\rimage and mounted data volumes."
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Reference to OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "Publisher of\rthe image."
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "Version of\rthe image"
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: "Setup to be done on all compute nodes\rin the cluster."
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: "Specifies a setup task\rwhich can be used to customize the compute nodes of the cluster. The\rNodeSetup task runs everytime a VM is rebooted. For that reason the task\rcode needs to be idempotent. Generally it is used to either download static\rdata that is required for all jobs that run on the cluster VMs or to\rdownload/install software."
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: "Command Line to\rstart Setup process."
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: Collection of environment settings.
          optional: true
        - id: parameters.nodeSetup.setupTask.runElevated
          type:
            - boolean
          description: "Specifies\rwhether to run the setup task in elevated mode. The default value is false."
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: "The path\rwhere the Batch AI service will upload the stdout and stderror of setup\rtask."
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: "Information on shared\rvolumes to be used by jobs."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: "Azure\rFile Share setup configuration. References to Azure File Shares that are to\rbe mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: "Azure Blob FileSystem setup configuration. References to Azure Blob FUSE\rthat are to be mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: "References to\ra list of file servers that are mounted to the cluster node."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            References to a list of file servers that are mounted to the cluster
            node.
          optional: true
        - id: parameters.userAccountSettings
          type:
            - object
          description: "Settings for user account\rthat will be created on all compute nodes of the cluster."
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function create(resourceGroupName, clusterName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#updateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#updateWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, clusterName,
      parameters, options)
    summary: Update the properties of a given cluster.
    fullName: >-
      azure-arm-batchai.Clusters.updateWithHttpOperationResponse(resourceGroupName,
      clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: parameters
          type:
            - object
          description: Additional parameters for cluster update.
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe Cluster."
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: Desired scale for the cluster
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: "The scale for the cluster\rby manual settings"
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: "The desired\rnumber of compute nodes in the Cluster. Default is 0. If autoScaleSettings\rare not specified, then the Cluster starts with this target."
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: "Determines what to do with the job(s) running on compute node if the Cluster\rsize is decreasing. The default value is requeue. Possible values include:\r'requeue', 'terminate', 'waitforjobcompletion', 'unknown'"
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: "The scale for the\rcluster by autoscale settings"
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: Specifies the minimum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: Specifies the maximum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: "Specifies the number of compute nodes to allocate on cluster creation. Note\rthat this value is used only during cluster creation."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName, clusterName,
        parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#update'
    id: 'azure-arm-batchai.Clusters#update'
    parent: azure-arm-batchai.Clusters
    name: >-
      update(resourceGroupName, clusterName, parameters, options,
      optionalCallback)
    summary: Update the properties of a given cluster.
    fullName: >-
      azure-arm-batchai.Clusters.update(resourceGroupName, clusterName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: parameters
          type:
            - object
          description: Additional parameters for cluster update.
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe Cluster."
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: Desired scale for the cluster
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: "The scale for the cluster\rby manual settings"
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: "The desired\rnumber of compute nodes in the Cluster. Default is 0. If autoScaleSettings\rare not specified, then the Cluster starts with this target."
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: "Determines what to do with the job(s) running on compute node if the Cluster\rsize is decreasing. The default value is requeue. Possible values include:\r'requeue', 'terminate', 'waitforjobcompletion', 'unknown'"
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: "The scale for the\rcluster by autoscale settings"
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: Specifies the minimum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: Specifies the maximum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: "Specifies the number of compute nodes to allocate on cluster creation. Note\rthat this value is used only during cluster creation."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function update(resourceGroupName, clusterName, parameters, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, clusterName,
      options)
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.deleteMethodWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#deleteMethod'
    id: 'azure-arm-batchai.Clusters#deleteMethod'
    parent: azure-arm-batchai.Clusters
    name: 'deleteMethod(resourceGroupName, clusterName, options, optionalCallback)'
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.deleteMethod(resourceGroupName, clusterName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, clusterName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#getWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#getWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: 'getWithHttpOperationResponse(resourceGroupName, clusterName, options)'
    summary: Gets information about the specified Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.getWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, clusterName,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#get'
    id: 'azure-arm-batchai.Clusters#get'
    parent: azure-arm-batchai.Clusters
    name: 'get(resourceGroupName, clusterName, options, optionalCallback)'
    summary: Gets information about the specified Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.get(resourceGroupName, clusterName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(resourceGroupName, clusterName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationWithHttpOperationResponse
    id: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationWithHttpOperationResponse
    parent: azure-arm-batchai.Clusters
    name: >-
      listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    summary: 'Get the IP address, port of all the compute nodes in the cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationWithHttpOperationResponse(resourceGroupName,
        clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listRemoteLoginInformation'
    id: 'azure-arm-batchai.Clusters#listRemoteLoginInformation'
    parent: azure-arm-batchai.Clusters
    name: >-
      listRemoteLoginInformation(resourceGroupName, clusterName, options,
      optionalCallback)
    summary: 'Get the IP address, port of all the compute nodes in the cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformation(resourceGroupName,
      clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RemoteLoginInformationListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RemoteLoginInformationListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listRemoteLoginInformation(resourceGroupName, clusterName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#listWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: listWithHttpOperationResponse(options)
    summary: Gets information about the Clusters associated with the subscription.
    fullName: azure-arm-batchai.Clusters.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clustersListOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.clustersListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause.. Used to filter results that are returned in the GET respnose."
          optional: true
        - id: options.clustersListOptions.select
          type:
            - string
          description: "An OData $select\rclause. Used to select the properties to be returned in the GET respnose."
          optional: true
        - id: options.clustersListOptions.maxResults
          type:
            - number
          description: "The maximum number\rof items to return in the response. A maximum of 1000 files can be returned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#list'
    id: 'azure-arm-batchai.Clusters#list'
    parent: azure-arm-batchai.Clusters
    name: 'list(options, optionalCallback)'
    summary: Gets information about the Clusters associated with the subscription.
    fullName: 'azure-arm-batchai.Clusters.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clustersListOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.clustersListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause.. Used to filter results that are returned in the GET respnose."
          optional: true
        - id: options.clustersListOptions.select
          type:
            - string
          description: "An OData $select\rclause. Used to select the properties to be returned in the GET respnose."
          optional: true
        - id: options.clustersListOptions.maxResults
          type:
            - number
          description: "The maximum number\rof items to return in the response. A maximum of 1000 files can be returned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listByResourceGroupWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#listByResourceGroupWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: "Gets information about the Clusters associated within the specified resource\rgroup."
    fullName: >-
      azure-arm-batchai.Clusters.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clustersListByResourceGroupOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.clustersListByResourceGroupOptions.filter
          type:
            - string
          description: "An OData\r$filter clause.. Used to filter results that are returned in the GET\rrespnose."
          optional: true
        - id: options.clustersListByResourceGroupOptions.select
          type:
            - string
          description: "An OData\r$select clause. Used to select the properties to be returned in the GET\rrespnose."
          optional: true
        - id: options.clustersListByResourceGroupOptions.maxResults
          type:
            - number
          description: "The\rmaximum number of items to return in the response. A maximum of 1000 files\rcan be returned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listByResourceGroup'
    id: 'azure-arm-batchai.Clusters#listByResourceGroup'
    parent: azure-arm-batchai.Clusters
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: "Gets information about the Clusters associated within the specified resource\rgroup."
    fullName: >-
      azure-arm-batchai.Clusters.listByResourceGroup(resourceGroupName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clustersListByResourceGroupOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.clustersListByResourceGroupOptions.filter
          type:
            - string
          description: "An OData\r$filter clause.. Used to filter results that are returned in the GET\rrespnose."
          optional: true
        - id: options.clustersListByResourceGroupOptions.select
          type:
            - string
          description: "An OData\r$select clause. Used to select the properties to be returned in the GET\rrespnose."
          optional: true
        - id: options.clustersListByResourceGroupOptions.maxResults
          type:
            - number
          description: "The\rmaximum number of items to return in the response. A maximum of 1000 files\rcan be returned."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#beginCreateWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName, clusterName,
      parameters, options)
    summary: "Adds a cluster. A cluster is a collection of compute nodes. Multiple jobs\rcan be run on the same cluster."
    fullName: >-
      azure-arm-batchai.Clusters.beginCreateWithHttpOperationResponse(resourceGroupName,
      clusterName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
        value: '{HttpOperationResponse<Cluster>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: parameters
          type:
            - object
          description: The parameters to provide for cluster creation.
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the\rcluster."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe Cluster."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machines in the\rcluster. All virtual machines in a cluster are the same size. For\rinformation about available VM sizes for clusters using images from the\rVirtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or\rSizes for Virtual Machines (Windows). Batch AI service supports all Azure VM\rsizes except STANDARD_A0 and those with premium storage (STANDARD_GS,\rSTANDARD_DS, and STANDARD_DSV2 series)."
        - id: parameters.vmPriority
          type:
            - string
          description: "dedicated or lowpriority. Default is\rdedicated. Possible values include: 'dedicated', 'lowpriority'"
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: Desired scale for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: "The scale for the cluster\rby manual settings"
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: "The desired\rnumber of compute nodes in the Cluster. Default is 0. If autoScaleSettings\rare not specified, then the Cluster starts with this target."
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: "Determines what to do with the job(s) running on compute node if the Cluster\rsize is decreasing. The default value is requeue. Possible values include:\r'requeue', 'terminate', 'waitforjobcompletion', 'unknown'"
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: "The scale for the\rcluster by autoscale settings"
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: Specifies the minimum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: Specifies the maximum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: "Specifies the number of compute nodes to allocate on cluster creation. Note\rthat this value is used only during cluster creation."
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: "Settings for OS\rimage and mounted data volumes."
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Reference to OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "Publisher of\rthe image."
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "Version of\rthe image"
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: "Setup to be done on all compute nodes\rin the cluster."
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: "Specifies a setup task\rwhich can be used to customize the compute nodes of the cluster. The\rNodeSetup task runs everytime a VM is rebooted. For that reason the task\rcode needs to be idempotent. Generally it is used to either download static\rdata that is required for all jobs that run on the cluster VMs or to\rdownload/install software."
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: "Command Line to\rstart Setup process."
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: Collection of environment settings.
          optional: true
        - id: parameters.nodeSetup.setupTask.runElevated
          type:
            - boolean
          description: "Specifies\rwhether to run the setup task in elevated mode. The default value is false."
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: "The path\rwhere the Batch AI service will upload the stdout and stderror of setup\rtask."
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: "Information on shared\rvolumes to be used by jobs."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: "Azure\rFile Share setup configuration. References to Azure File Shares that are to\rbe mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: "Azure Blob FileSystem setup configuration. References to Azure Blob FUSE\rthat are to be mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: "References to\ra list of file servers that are mounted to the cluster node."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            References to a list of file servers that are mounted to the cluster
            node.
          optional: true
        - id: parameters.userAccountSettings
          type:
            - object
          description: "Settings for user account\rthat will be created on all compute nodes of the cluster."
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        clusterName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginCreate'
    id: 'azure-arm-batchai.Clusters#beginCreate'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginCreate(resourceGroupName, clusterName, parameters, options,
      optionalCallback)
    summary: "Adds a cluster. A cluster is a collection of compute nodes. Multiple jobs\rcan be run on the same cluster."
    fullName: >-
      azure-arm-batchai.Clusters.beginCreate(resourceGroupName, clusterName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Cluster} - The deserialized result object.'
        value: '{Cluster} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Cluster} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: parameters
          type:
            - object
          description: The parameters to provide for cluster creation.
        - id: parameters.location
          type:
            - string
          description: "The region in which to create the\rcluster."
        - id: parameters.tags
          type:
            - object
          description: "The user specified tags associated with\rthe Cluster."
          optional: true
        - id: parameters.vmSize
          type:
            - string
          description: "The size of the virtual machines in the\rcluster. All virtual machines in a cluster are the same size. For\rinformation about available VM sizes for clusters using images from the\rVirtual Machines Marketplace (see Sizes for Virtual Machines (Linux) or\rSizes for Virtual Machines (Windows). Batch AI service supports all Azure VM\rsizes except STANDARD_A0 and those with premium storage (STANDARD_GS,\rSTANDARD_DS, and STANDARD_DSV2 series)."
        - id: parameters.vmPriority
          type:
            - string
          description: "dedicated or lowpriority. Default is\rdedicated. Possible values include: 'dedicated', 'lowpriority'"
          optional: true
        - id: parameters.scaleSettings
          type:
            - object
          description: Desired scale for the cluster.
          optional: true
        - id: parameters.scaleSettings.manual
          type:
            - object
          description: "The scale for the cluster\rby manual settings"
          optional: true
        - id: parameters.scaleSettings.manual.targetNodeCount
          type:
            - number
          description: "The desired\rnumber of compute nodes in the Cluster. Default is 0. If autoScaleSettings\rare not specified, then the Cluster starts with this target."
        - id: parameters.scaleSettings.manual.nodeDeallocationOption
          type:
            - string
          description: "Determines what to do with the job(s) running on compute node if the Cluster\rsize is decreasing. The default value is requeue. Possible values include:\r'requeue', 'terminate', 'waitforjobcompletion', 'unknown'"
          optional: true
        - id: parameters.scaleSettings.autoScale
          type:
            - object
          description: "The scale for the\rcluster by autoscale settings"
          optional: true
        - id: parameters.scaleSettings.autoScale.minimumNodeCount
          type:
            - number
          description: Specifies the minimum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.maximumNodeCount
          type:
            - number
          description: Specifies the maximum number of compute nodes the cluster can have.
        - id: parameters.scaleSettings.autoScale.initialNodeCount
          type:
            - number
          description: "Specifies the number of compute nodes to allocate on cluster creation. Note\rthat this value is used only during cluster creation."
          optional: true
        - id: parameters.virtualMachineConfiguration
          type:
            - object
          description: "Settings for OS\rimage and mounted data volumes."
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference
          type:
            - object
          description: Reference to OS image.
          optional: true
        - id: parameters.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "Publisher of\rthe image."
        - id: parameters.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: Offer of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: SKU of the image.
        - id: parameters.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "Version of\rthe image"
          optional: true
        - id: parameters.nodeSetup
          type:
            - object
          description: "Setup to be done on all compute nodes\rin the cluster."
          optional: true
        - id: parameters.nodeSetup.setupTask
          type:
            - object
          description: "Specifies a setup task\rwhich can be used to customize the compute nodes of the cluster. The\rNodeSetup task runs everytime a VM is rebooted. For that reason the task\rcode needs to be idempotent. Generally it is used to either download static\rdata that is required for all jobs that run on the cluster VMs or to\rdownload/install software."
          optional: true
        - id: parameters.nodeSetup.setupTask.commandLine
          type:
            - string
          description: "Command Line to\rstart Setup process."
        - id: parameters.nodeSetup.setupTask.environmentVariables
          type:
            - array
          description: Collection of environment settings.
          optional: true
        - id: parameters.nodeSetup.setupTask.runElevated
          type:
            - boolean
          description: "Specifies\rwhether to run the setup task in elevated mode. The default value is false."
          optional: true
        - id: parameters.nodeSetup.setupTask.stdOutErrPathPrefix
          type:
            - string
          description: "The path\rwhere the Batch AI service will upload the stdout and stderror of setup\rtask."
        - id: parameters.nodeSetup.mountVolumes
          type:
            - object
          description: "Information on shared\rvolumes to be used by jobs."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureFileShares
          type:
            - array
          description: "Azure\rFile Share setup configuration. References to Azure File Shares that are to\rbe mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.azureBlobFileSystems
          type:
            - array
          description: "Azure Blob FileSystem setup configuration. References to Azure Blob FUSE\rthat are to be mounted to the cluster nodes."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.fileServers
          type:
            - array
          description: "References to\ra list of file servers that are mounted to the cluster node."
          optional: true
        - id: parameters.nodeSetup.mountVolumes.unmanagedFileSystems
          type:
            - array
          description: >-
            References to a list of file servers that are mounted to the cluster
            node.
          optional: true
        - id: parameters.userAccountSettings
          type:
            - object
          description: "Settings for user account\rthat will be created on all compute nodes of the cluster."
        - id: parameters.userAccountSettings.adminUserName
          type:
            - string
          description: "Specifies the\rname of the administrator account."
        - id: parameters.userAccountSettings.adminUserSshPublicKey
          type:
            - string
          description: "SSH\rpublic keys used to authenticate with linux based VMs. This does not get\rreturned in a GET response body."
          optional: true
        - id: parameters.userAccountSettings.adminUserPassword
          type:
            - string
          description: "Admin\ruser Password (linux only). This does not get returned in a GET response\rbody."
          optional: true
        - id: parameters.subnet
          type:
            - object
          description: Specifies the identifier of the subnet.
          optional: true
        - id: parameters.subnet.id
          type:
            - string
          description: The ID of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreate(resourceGroupName, clusterName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginDeleteMethodWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#beginDeleteMethodWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName, clusterName,
      options)
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      clusterName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        clusterName, options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#beginDeleteMethod'
    id: 'azure-arm-batchai.Clusters#beginDeleteMethod'
    parent: azure-arm-batchai.Clusters
    name: >-
      beginDeleteMethod(resourceGroupName, clusterName, options,
      optionalCallback)
    summary: Deletes a Cluster.
    fullName: >-
      azure-arm-batchai.Clusters.beginDeleteMethod(resourceGroupName,
      clusterName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "Name of the resource group to which the\rresource belongs."
        - id: clusterName
          type:
            - string
          description: "The name of the cluster within the specified\rresource group. Cluster names can only contain a combination of alphanumeric\rcharacters along with dash (-) and underscore (_). The name must be from 1\rthrough 64 characters long."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, clusterName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationNextWithHttpOperationResponse
    id: >-
      azure-arm-batchai.Clusters#listRemoteLoginInformationNextWithHttpOperationResponse
    parent: azure-arm-batchai.Clusters
    name: >-
      listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    summary: 'Get the IP address, port of all the compute nodes in the cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<RemoteLoginInformationListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRemoteLoginInformationNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listRemoteLoginInformationNext'
    id: 'azure-arm-batchai.Clusters#listRemoteLoginInformationNext'
    parent: azure-arm-batchai.Clusters
    name: 'listRemoteLoginInformationNext(nextPageLink, options, optionalCallback)'
    summary: 'Get the IP address, port of all the compute nodes in the cluster.'
    fullName: >-
      azure-arm-batchai.Clusters.listRemoteLoginInformationNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RemoteLoginInformationListResult} - The deserialized result object.'
        value: '{RemoteLoginInformationListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RemoteLoginInformationListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RemoteLoginInformationListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listRemoteLoginInformationNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listNextWithHttpOperationResponse'
    id: 'azure-arm-batchai.Clusters#listNextWithHttpOperationResponse'
    parent: azure-arm-batchai.Clusters
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Gets information about the Clusters associated with the subscription.
    fullName: >-
      azure-arm-batchai.Clusters.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listNext'
    id: 'azure-arm-batchai.Clusters#listNext'
    parent: azure-arm-batchai.Clusters
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Gets information about the Clusters associated with the subscription.
    fullName: >-
      azure-arm-batchai.Clusters.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-batchai.Clusters#listByResourceGroupNextWithHttpOperationResponse
    id: >-
      azure-arm-batchai.Clusters#listByResourceGroupNextWithHttpOperationResponse
    parent: azure-arm-batchai.Clusters
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Gets information about the Clusters associated within the specified resource\rgroup."
    fullName: >-
      azure-arm-batchai.Clusters.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-batchai.Clusters#listByResourceGroupNext'
    id: 'azure-arm-batchai.Clusters#listByResourceGroupNext'
    parent: azure-arm-batchai.Clusters
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: "Gets information about the Clusters associated within the specified resource\rgroup."
    fullName: >-
      azure-arm-batchai.Clusters.listByResourceGroupNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterListResult} - The deserialized result object.'
        value: '{ClusterListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-batchai.BatchAIManagementClient
    name: BatchAIManagementClient
    fullName: azure-arm-batchai.BatchAIManagementClient
    isExternal: false
