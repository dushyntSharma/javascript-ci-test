### YamlMime:UniversalReference
items:
  - uid: azure-storage.TableBatch
    id: azure-storage.TableBatch
    name: TableBatch
    summary: Creates a new TableBatch.
    fullName: azure-storage.TableBatch
    source:
      id: azure-storage.TableBatch
      path: lib\services\table\tablebatch.js
      startLine: 31
      remote:
        branch: master
        path: lib\services\table\tablebatch.js
        repo: 'https://github.com/Azure/azure-storage-node.git'
    type: Class
    children:
      - 'azure-storage.TableBatch.#ctor'
      - 'azure-storage.TableBatch#clear'
      - 'azure-storage.TableBatch#hasOperations'
      - 'azure-storage.TableBatch#size'
      - 'azure-storage.TableBatch#retrieveEntity'
      - 'azure-storage.TableBatch#insertEntity'
      - 'azure-storage.TableBatch#deleteEntity'
      - 'azure-storage.TableBatch#mergeEntity'
      - 'azure-storage.TableBatch#replaceEntity'
      - 'azure-storage.TableBatch#insertOrReplaceEntity'
      - 'azure-storage.TableBatch#insertOrMergeEntity'
      - 'azure-storage.TableBatch#addOperation'
      - 'azure-storage.TableBatch#getOperation'
      - 'azure-storage.TableBatch#removeOperation'
    langs:
      - js
  - id: 'azure-storage.TableBatch.#ctor'
    uid: 'azure-storage.TableBatch.#ctor'
    parent: azure-storage.TableBatch
    name: TableBatch()
    fullName: azure-storage.TableBatch.TableBatch()
    summary: Creates a new TableBatch.
    type: Constructor
    syntax:
      content: new TableBatch()
    langs:
      - js
  - uid: 'azure-storage.TableBatch#clear'
    id: 'azure-storage.TableBatch#clear'
    parent: azure-storage.TableBatch
    name: clear()
    summary: Removes all of the operations from the batch.
    fullName: azure-storage.TableBatch.clear()
    type: Function
    syntax:
      content: function clear()
    langs:
      - js
  - uid: 'azure-storage.TableBatch#hasOperations'
    id: 'azure-storage.TableBatch#hasOperations'
    parent: azure-storage.TableBatch
    name: hasOperations()
    summary: >-
      Returns a boolean value indicating weather there are operations in the
      batch.
    fullName: azure-storage.TableBatch.hasOperations()
    type: Function
    syntax:
      return:
        type:
          - Boolean
        description: True if there are operations queued up; false otherwise.
      content: function hasOperations()
    langs:
      - js
  - uid: 'azure-storage.TableBatch#size'
    id: 'azure-storage.TableBatch#size'
    parent: azure-storage.TableBatch
    name: size()
    summary: Returns the number of operations in the batch.
    fullName: azure-storage.TableBatch.size()
    type: Function
    syntax:
      return:
        type:
          - number
        description: The number of operations in the batch.
      content: function size()
    langs:
      - js
  - uid: 'azure-storage.TableBatch#retrieveEntity'
    id: 'azure-storage.TableBatch#retrieveEntity'
    parent: azure-storage.TableBatch
    name: 'retrieveEntity(partitionKey, rowKey, options)'
    summary: >-
      Adds a retrieve operation to the batch. Note that this must be the only
      operation in the batch.
    fullName: 'azure-storage.TableBatch.retrieveEntity(partitionKey, rowKey, options)'
    type: Function
    syntax:
      parameters:
        - id: partitionKey
          type:
            - string
          description: The partition key.
        - id: rowKey
          type:
            - string
          description: The row key.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.payloadFormat
          type:
            - string
          description: The payload format to use for the request.
          optional: true
        - id: options.propertyResolver
          type:
            - azure-storage.TableService~propertyResolver
          description: "The property resolver. Given the partition key, row key, property name, property value,\r                                                                            and the property Edm type if given by the service, returns the Edm type of the property."
          optional: true
        - id: options.entityResolver
          type:
            - function
          description: >-
            The entity resolver. Given the single entity returned by the query,
            returns a modified object.
          optional: true
      content: 'function retrieveEntity(partitionKey, rowKey, options)'
    langs:
      - js
  - uid: 'azure-storage.TableBatch#insertEntity'
    id: 'azure-storage.TableBatch#insertEntity'
    parent: azure-storage.TableBatch
    name: 'insertEntity(entity, options)'
    summary: Adds an insert operation to the batch.
    fullName: 'azure-storage.TableBatch.insertEntity(entity, options)'
    type: Function
    syntax:
      parameters:
        - id: entity
          type:
            - object
          description: The entity.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.echoContent
          type:
            - string
          description: >-
            Whether or not to return the entity upon a successful insert.
            Inserts only, default to false.
          optional: true
        - id: options.payloadFormat
          type:
            - string
          description: The payload format to use for the request.
          optional: true
        - id: options.propertyResolver
          type:
            - azure-storage.TableService~propertyResolver
          description: "The property resolver. Only applied if echoContent is true. Given the partition key, row key, property name, \r                                                                            property value, and the property Edm type if given by the service, returns the Edm type of the property."
          optional: true
        - id: options.entityResolver
          type:
            - function
          description: "The entity resolver. Only applied if echoContent is true. Given the single entity returned by the insert, returns \r                                                                            a modified object."
          optional: true
      content: 'function insertEntity(entity, options)'
    langs:
      - js
  - uid: 'azure-storage.TableBatch#deleteEntity'
    id: 'azure-storage.TableBatch#deleteEntity'
    parent: azure-storage.TableBatch
    name: deleteEntity(entity)
    summary: Adds a delete operation to the batch.
    fullName: azure-storage.TableBatch.deleteEntity(entity)
    type: Function
    syntax:
      parameters:
        - id: entity
          type:
            - object
          description: The entity.
      content: function deleteEntity(entity)
    langs:
      - js
  - uid: 'azure-storage.TableBatch#mergeEntity'
    id: 'azure-storage.TableBatch#mergeEntity'
    parent: azure-storage.TableBatch
    name: mergeEntity(entity)
    summary: Adds a merge operation to the batch.
    fullName: azure-storage.TableBatch.mergeEntity(entity)
    type: Function
    syntax:
      parameters:
        - id: entity
          type:
            - object
          description: The entity.
      content: function mergeEntity(entity)
    langs:
      - js
  - uid: 'azure-storage.TableBatch#replaceEntity'
    id: 'azure-storage.TableBatch#replaceEntity'
    parent: azure-storage.TableBatch
    name: replaceEntity(entity)
    summary: Adds an replace operation to the batch.
    fullName: azure-storage.TableBatch.replaceEntity(entity)
    type: Function
    syntax:
      parameters:
        - id: entity
          type:
            - object
          description: The entity.
      content: function replaceEntity(entity)
    langs:
      - js
  - uid: 'azure-storage.TableBatch#insertOrReplaceEntity'
    id: 'azure-storage.TableBatch#insertOrReplaceEntity'
    parent: azure-storage.TableBatch
    name: insertOrReplaceEntity(entity)
    summary: Adds an insert or replace operation to the batch.
    fullName: azure-storage.TableBatch.insertOrReplaceEntity(entity)
    type: Function
    syntax:
      parameters:
        - id: entity
          type:
            - object
          description: The entity.
      content: function insertOrReplaceEntity(entity)
    langs:
      - js
  - uid: 'azure-storage.TableBatch#insertOrMergeEntity'
    id: 'azure-storage.TableBatch#insertOrMergeEntity'
    parent: azure-storage.TableBatch
    name: insertOrMergeEntity(entity)
    summary: Adds an insert or merge operation to the batch.
    fullName: azure-storage.TableBatch.insertOrMergeEntity(entity)
    type: Function
    syntax:
      parameters:
        - id: entity
          type:
            - object
          description: The entity.
      content: function insertOrMergeEntity(entity)
    langs:
      - js
  - uid: 'azure-storage.TableBatch#addOperation'
    id: 'azure-storage.TableBatch#addOperation'
    parent: azure-storage.TableBatch
    name: 'addOperation(operationType, entity, options)'
    summary: Adds an operation to the batch after performing checks.
    fullName: 'azure-storage.TableBatch.addOperation(operationType, entity, options)'
    type: Function
    syntax:
      parameters:
        - id: operationType
          type:
            - string
          description: >-
            The type of operation to perform. See
            Constants.TableConstants.Operations
        - id: entity
          type:
            - object
          description: The entity.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
      content: 'function addOperation(operationType, entity, options)'
    langs:
      - js
  - uid: 'azure-storage.TableBatch#getOperation'
    id: 'azure-storage.TableBatch#getOperation'
    parent: azure-storage.TableBatch
    name: getOperation(index)
    summary: >-
      Gets an operation from the batch. Returns null if the index does not
      exist.
    fullName: azure-storage.TableBatch.getOperation(index)
    type: Function
    syntax:
      parameters:
        - id: index
          type:
            - number
          description: The index in the operations array at which to remove an element.
      return:
        type:
          - object
        description: The removed operation.
      content: function getOperation(index)
    langs:
      - js
  - uid: 'azure-storage.TableBatch#removeOperation'
    id: 'azure-storage.TableBatch#removeOperation'
    parent: azure-storage.TableBatch
    name: removeOperation(index)
    summary: >-
      Removes an operation from the batch. Returns null if the index does not
      exist.
    fullName: azure-storage.TableBatch.removeOperation(index)
    type: Function
    syntax:
      parameters:
        - id: index
          type:
            - number
          description: The index in the operations array at which to remove an element.
      return:
        type:
          - object
        description: The removed operation.
      content: function removeOperation(index)
    langs:
      - js
