### YamlMime:UniversalReference
items:
  - uid: azure-servicefabric.ServiceFabricClient
    id: azure-servicefabric.ServiceFabricClient
    name: ServiceFabricClient
    summary: Class representing a ServiceFabricClient.
    fullName: azure-servicefabric.ServiceFabricClient
    source:
      id: azure-servicefabric.ServiceFabricClient
      path: lib\services\serviceFabric\lib\serviceFabricClient.js
      startLine: 24998
      remote:
        branch: master
        path: lib\services\serviceFabric\lib\serviceFabricClient.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-servicefabric.ServiceFabricClient.#ctor'
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterManifestWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getClusterManifest'
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getClusterHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterHealthUsingPolicyWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getClusterHealthUsingPolicy'
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterHealthChunkWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getClusterHealthChunk'
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterHealthChunkUsingPolicyAndAdvancedFilters
      - >-
        azure-servicefabric.ServiceFabricClient#reportClusterHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#reportClusterHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getProvisionedFabricCodeVersionInfoList
      - >-
        azure-servicefabric.ServiceFabricClient#getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getProvisionedFabricConfigVersionInfoList
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterUpgradeProgressWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getClusterUpgradeProgress'
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterConfigurationWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getClusterConfiguration'
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterConfigurationUpgradeStatusWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getClusterConfigurationUpgradeStatus
      - >-
        azure-servicefabric.ServiceFabricClient#provisionClusterWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#provisionCluster'
      - >-
        azure-servicefabric.ServiceFabricClient#unprovisionClusterWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#unprovisionCluster'
      - >-
        azure-servicefabric.ServiceFabricClient#rollbackClusterUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#rollbackClusterUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#resumeClusterUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#resumeClusterUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#startClusterUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startClusterUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#startClusterConfigurationUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startClusterConfigurationUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#updateClusterUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#updateClusterUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#getAadMetadataWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getAadMetadata'
      - >-
        azure-servicefabric.ServiceFabricClient#getNodeInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getNodeInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getNodeInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getNodeInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getNodeHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getNodeHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getNodeHealthUsingPolicyWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getNodeHealthUsingPolicy'
      - >-
        azure-servicefabric.ServiceFabricClient#reportNodeHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#reportNodeHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getNodeLoadInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getNodeLoadInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#disableNodeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#disableNode'
      - >-
        azure-servicefabric.ServiceFabricClient#enableNodeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#enableNode'
      - >-
        azure-servicefabric.ServiceFabricClient#removeNodeStateWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#removeNodeState'
      - >-
        azure-servicefabric.ServiceFabricClient#restartNodeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#restartNode'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListByNameWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListByName'
      - >-
        azure-servicefabric.ServiceFabricClient#provisionApplicationTypeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#provisionApplicationType'
      - >-
        azure-servicefabric.ServiceFabricClient#unprovisionApplicationTypeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#unprovisionApplicationType'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceTypeInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceTypeInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceManifestWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceManifest'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoByNameWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoByName'
      - >-
        azure-servicefabric.ServiceFabricClient#createApplicationWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#createApplication'
      - >-
        azure-servicefabric.ServiceFabricClient#deleteApplicationWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#deleteApplication'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationLoadInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationLoadInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationHealthUsingPolicyWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationHealthUsingPolicy'
      - >-
        azure-servicefabric.ServiceFabricClient#reportApplicationHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#reportApplicationHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#startApplicationUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startApplicationUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#updateApplicationUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#updateApplicationUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#resumeApplicationUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#resumeApplicationUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#rollbackApplicationUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#rollbackApplicationUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthUsingPolicy
      - >-
        azure-servicefabric.ServiceFabricClient#reportDeployedApplicationHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#reportDeployedApplicationHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationManifestWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationManifest'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getApplicationNameInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getApplicationNameInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#createServiceWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#createService'
      - >-
        azure-servicefabric.ServiceFabricClient#createServiceFromTemplateWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#createServiceFromTemplate'
      - >-
        azure-servicefabric.ServiceFabricClient#deleteServiceWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#deleteService'
      - >-
        azure-servicefabric.ServiceFabricClient#updateServiceWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#updateService'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceDescriptionWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceDescription'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceHealthUsingPolicyWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceHealthUsingPolicy'
      - >-
        azure-servicefabric.ServiceFabricClient#reportServiceHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#reportServiceHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#resolveServiceWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#resolveService'
      - >-
        azure-servicefabric.ServiceFabricClient#getPartitionInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getPartitionInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getPartitionInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getPartitionInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getServiceNameInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getServiceNameInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getPartitionHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getPartitionHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getPartitionHealthUsingPolicyWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getPartitionHealthUsingPolicy'
      - >-
        azure-servicefabric.ServiceFabricClient#reportPartitionHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#reportPartitionHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getPartitionLoadInformationWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getPartitionLoadInformation'
      - >-
        azure-servicefabric.ServiceFabricClient#resetPartitionLoadWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#resetPartitionLoad'
      - >-
        azure-servicefabric.ServiceFabricClient#recoverPartitionWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#recoverPartition'
      - >-
        azure-servicefabric.ServiceFabricClient#recoverServicePartitionsWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#recoverServicePartitions'
      - >-
        azure-servicefabric.ServiceFabricClient#recoverSystemPartitionsWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#recoverSystemPartitions'
      - >-
        azure-servicefabric.ServiceFabricClient#recoverAllPartitionsWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#recoverAllPartitions'
      - >-
        azure-servicefabric.ServiceFabricClient#createRepairTaskWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#createRepairTask'
      - >-
        azure-servicefabric.ServiceFabricClient#cancelRepairTaskWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#cancelRepairTask'
      - >-
        azure-servicefabric.ServiceFabricClient#deleteRepairTaskWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#deleteRepairTask'
      - >-
        azure-servicefabric.ServiceFabricClient#getRepairTaskListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getRepairTaskList'
      - >-
        azure-servicefabric.ServiceFabricClient#forceApproveRepairTaskWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#forceApproveRepairTask'
      - >-
        azure-servicefabric.ServiceFabricClient#updateRepairTaskHealthPolicyWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#updateRepairTaskHealthPolicy'
      - >-
        azure-servicefabric.ServiceFabricClient#updateRepairExecutionStateWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#updateRepairExecutionState'
      - >-
        azure-servicefabric.ServiceFabricClient#getReplicaInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getReplicaInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#getReplicaInfoWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getReplicaInfo'
      - >-
        azure-servicefabric.ServiceFabricClient#getReplicaHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getReplicaHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getReplicaHealthUsingPolicyWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getReplicaHealthUsingPolicy'
      - >-
        azure-servicefabric.ServiceFabricClient#reportReplicaHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#reportReplicaHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaInfoListWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaInfoList
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfo
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoByPartitionId
      - >-
        azure-servicefabric.ServiceFabricClient#restartReplicaWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#restartReplica'
      - >-
        azure-servicefabric.ServiceFabricClient#removeReplicaWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#removeReplica'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoList
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListByNameWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListByName
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealth'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthUsingPolicy
      - >-
        azure-servicefabric.ServiceFabricClient#reportDeployedServicePackageHealthWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#reportDeployedServicePackageHealth
      - >-
        azure-servicefabric.ServiceFabricClient#deployedServicePackageToNodeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#deployedServicePackageToNode'
      - >-
        azure-servicefabric.ServiceFabricClient#getDeployedCodePackageInfoListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDeployedCodePackageInfoList'
      - >-
        azure-servicefabric.ServiceFabricClient#restartDeployedCodePackageWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#restartDeployedCodePackage'
      - >-
        azure-servicefabric.ServiceFabricClient#createComposeDeploymentWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#createComposeDeployment'
      - >-
        azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatus'
      - >-
        azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusList'
      - >-
        azure-servicefabric.ServiceFabricClient#getComposeDeploymentUpgradeProgressWithHttpOperationResponse
      - >-
        azure-servicefabric.ServiceFabricClient#getComposeDeploymentUpgradeProgress
      - >-
        azure-servicefabric.ServiceFabricClient#removeComposeDeploymentWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#removeComposeDeployment'
      - >-
        azure-servicefabric.ServiceFabricClient#startComposeDeploymentUpgradeWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startComposeDeploymentUpgrade'
      - >-
        azure-servicefabric.ServiceFabricClient#startChaosWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startChaos'
      - >-
        azure-servicefabric.ServiceFabricClient#stopChaosWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#stopChaos'
      - >-
        azure-servicefabric.ServiceFabricClient#getChaosReportWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getChaosReport'
      - >-
        azure-servicefabric.ServiceFabricClient#uploadFileWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#uploadFile'
      - >-
        azure-servicefabric.ServiceFabricClient#getImageStoreContentWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getImageStoreContent'
      - >-
        azure-servicefabric.ServiceFabricClient#deleteImageStoreContentWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#deleteImageStoreContent'
      - >-
        azure-servicefabric.ServiceFabricClient#getImageStoreRootContentWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getImageStoreRootContent'
      - >-
        azure-servicefabric.ServiceFabricClient#copyImageStoreContentWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#copyImageStoreContent'
      - >-
        azure-servicefabric.ServiceFabricClient#invokeInfrastructureCommandWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#invokeInfrastructureCommand'
      - >-
        azure-servicefabric.ServiceFabricClient#invokeInfrastructureQueryWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#invokeInfrastructureQuery'
      - >-
        azure-servicefabric.ServiceFabricClient#startDataLossWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startDataLoss'
      - >-
        azure-servicefabric.ServiceFabricClient#getDataLossProgressWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getDataLossProgress'
      - >-
        azure-servicefabric.ServiceFabricClient#startQuorumLossWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startQuorumLoss'
      - >-
        azure-servicefabric.ServiceFabricClient#getQuorumLossProgressWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getQuorumLossProgress'
      - >-
        azure-servicefabric.ServiceFabricClient#startPartitionRestartWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startPartitionRestart'
      - >-
        azure-servicefabric.ServiceFabricClient#getPartitionRestartProgressWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getPartitionRestartProgress'
      - >-
        azure-servicefabric.ServiceFabricClient#startNodeTransitionWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#startNodeTransition'
      - >-
        azure-servicefabric.ServiceFabricClient#getNodeTransitionProgressWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getNodeTransitionProgress'
      - >-
        azure-servicefabric.ServiceFabricClient#getFaultOperationListWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#getFaultOperationList'
      - >-
        azure-servicefabric.ServiceFabricClient#cancelOperationWithHttpOperationResponse
      - 'azure-servicefabric.ServiceFabricClient#cancelOperation'
    langs:
      - js
  - id: 'azure-servicefabric.ServiceFabricClient.#ctor'
    uid: 'azure-servicefabric.ServiceFabricClient.#ctor'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'ServiceFabricClient(baseUri, options)'
    fullName: >-
      azure-servicefabric.ServiceFabricClient.ServiceFabricClient(baseUri,
      options)
    summary: Create a ServiceFabricClient.
    type: Constructor
    syntax:
      parameters:
        - id: baseUri
          type:
            - string
          description: The base URI of the service.
          optional: true
        - id: options
          type:
            - object
          description: The parameter options
          optional: true
        - id: options.filters
          type:
            - Array
          description: Filters to be added to the request pipeline
          optional: true
        - id: options.requestOptions
          type:
            - object
          description: "Options for the underlying request object\r[Options doc](https://github.com/request/request#requestoptions-callback)"
          optional: true
        - id: options.noRetryPolicy
          type:
            - boolean
          description: 'If set to true, turn off default retry policy'
          optional: true
      content: 'new ServiceFabricClient(baseUri, options)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterManifestWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterManifestWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getClusterManifestWithHttpOperationResponse(options)
    summary: "Get the Service Fabric cluster manifest.\r\rGet the Service Fabric cluster manifest. The cluster manifest contains\rproperties of the cluster that include different node types on the cluster,\rsecurity configurations, fault and upgrade domain topologies etc.\r\rThese properties are specified as part of the ClusterConfig.JSON file while\rdeploying a stand alone cluster. However, most of the information in the\rcluster manifest\ris generated internally by service fabric during cluster deployment in other\rdeployment scenarios (for e.g when using azuer portal).\r\rThe contents of the cluster manifest are for informational purposes only and\rusers are not expected to take a dependency on the format of the file\rcontents or its interpretation."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterManifestWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterManifest>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterManifest>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getClusterManifestWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getClusterManifest'
    id: 'azure-servicefabric.ServiceFabricClient#getClusterManifest'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getClusterManifest(options, optionalCallback)'
    summary: "Get the Service Fabric cluster manifest.\r\rGet the Service Fabric cluster manifest. The cluster manifest contains\rproperties of the cluster that include different node types on the cluster,\rsecurity configurations, fault and upgrade domain topologies etc.\r\rThese properties are specified as part of the ClusterConfig.JSON file while\rdeploying a stand alone cluster. However, most of the information in the\rcluster manifest\ris generated internally by service fabric during cluster deployment in other\rdeployment scenarios (for e.g when using azuer portal).\r\rThe contents of the cluster manifest are for informational purposes only and\rusers are not expected to take a dependency on the format of the file\rcontents or its interpretation."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterManifest(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterManifest} - The deserialized result object.'
        value: '{ClusterManifest} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterManifest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterManifest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getClusterManifest(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getClusterHealthWithHttpOperationResponse(options)
    summary: "Gets the health of a Service Fabric cluster.\r\rGets the health of a Service Fabric cluster.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the cluster based on the health state.\rSimilarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to\rfilter the collection of nodes and applications returned based on their\raggregated health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealthWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rnode health state objects returned in the result of cluster health query\rbased on their health state. The possible values for this parameter include\rinteger value of one of the\rfollowing health states. Only nodes that match the filter are returned. All\rnodes are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of nodes with\rHealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe application health state objects returned in the result of cluster\rhealth\rquery based on their health state.\rThe possible values for this parameter include integer value obtained from\rmembers or bitwise operations\ron members of HealthStateFilter enumeration. Only applications that match\rthe filter are returned.\rAll applications are used to evaluate the aggregated health state. If not\rspecified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of applications\rwith HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.includeSystemApplicationHealthStatistics
          type:
            - boolean
          description: "Indicates whether the health statistics should include the fabric:/System\rapplication health statistics. False by default.\rIf IncludeSystemApplicationHealthStatistics is set to true, the health\rstatistics include the entities that belong to the fabric:/System\rapplication.\rOtherwise, the query result includes health statistics only for user\rapplications.\rThe health statistics must be included in the query result for this\rparameter to be applied."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getClusterHealthWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getClusterHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getClusterHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getClusterHealth(options, optionalCallback)'
    summary: "Gets the health of a Service Fabric cluster.\r\rGets the health of a Service Fabric cluster.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the cluster based on the health state.\rSimilarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to\rfilter the collection of nodes and applications returned based on their\raggregated health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealth(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterHealth} - The deserialized result object.'
        value: '{ClusterHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rnode health state objects returned in the result of cluster health query\rbased on their health state. The possible values for this parameter include\rinteger value of one of the\rfollowing health states. Only nodes that match the filter are returned. All\rnodes are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of nodes with\rHealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe application health state objects returned in the result of cluster\rhealth\rquery based on their health state.\rThe possible values for this parameter include integer value obtained from\rmembers or bitwise operations\ron members of HealthStateFilter enumeration. Only applications that match\rthe filter are returned.\rAll applications are used to evaluate the aggregated health state. If not\rspecified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of applications\rwith HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.includeSystemApplicationHealthStatistics
          type:
            - boolean
          description: "Indicates whether the health statistics should include the fabric:/System\rapplication health statistics. False by default.\rIf IncludeSystemApplicationHealthStatistics is set to true, the health\rstatistics include the entities that belong to the fabric:/System\rapplication.\rOtherwise, the query result includes health statistics only for user\rapplications.\rThe health statistics must be included in the query result for this\rparameter to be applied."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getClusterHealth(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getClusterHealthUsingPolicyWithHttpOperationResponse(options)
    summary: "Gets the health of a Service Fabric cluster using the specified\rpolicy.\r\rGets the health of a Service Fabric cluster.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the cluster based on the health state.\rSimilarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to\rfilter the collection of nodes and applications returned based on their\raggregated health state.\rUse ClusterHealthPolicies to override the health policies used to evaluate\rthe health."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicyWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rnode health state objects returned in the result of cluster health query\rbased on their health state. The possible values for this parameter include\rinteger value of one of the\rfollowing health states. Only nodes that match the filter are returned. All\rnodes are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of nodes with\rHealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe application health state objects returned in the result of cluster\rhealth\rquery based on their health state.\rThe possible values for this parameter include integer value obtained from\rmembers or bitwise operations\ron members of HealthStateFilter enumeration. Only applications that match\rthe filter are returned.\rAll applications are used to evaluate the aggregated health state. If not\rspecified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of applications\rwith HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.includeSystemApplicationHealthStatistics
          type:
            - boolean
          description: "Indicates whether the health statistics should include the fabric:/System\rapplication health statistics. False by default.\rIf IncludeSystemApplicationHealthStatistics is set to true, the health\rstatistics include the entities that belong to the fabric:/System\rapplication.\rOtherwise, the query result includes health statistics only for user\rapplications.\rThe health statistics must be included in the query result for this\rparameter to be applied."
          optional: true
        - id: options.clusterHealthPolicies
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the cluster health.\rIf not present, the health evaluation uses the cluster health policy defined\rin the cluster manifest or the default cluster health policy.\rBy default, each application is evaluated using its specific application\rhealth policy, defined in the application manifest, or the default health\rpolicy, if no policy is defined in manifest.\rIf the application health policy map is specified, and it has an entry for\ran application, the specified application health policy\ris used to evaluate the application health."
          optional: true
        - id: options.clusterHealthPolicies.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.clusterHealthPolicies.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getClusterHealthUsingPolicyWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getClusterHealthUsingPolicy'
    id: 'azure-servicefabric.ServiceFabricClient#getClusterHealthUsingPolicy'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getClusterHealthUsingPolicy(options, optionalCallback)'
    summary: "Gets the health of a Service Fabric cluster using the specified\rpolicy.\r\rGets the health of a Service Fabric cluster.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the cluster based on the health state.\rSimilarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to\rfilter the collection of nodes and applications returned based on their\raggregated health state.\rUse ClusterHealthPolicies to override the health policies used to evaluate\rthe health."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealthUsingPolicy(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterHealth} - The deserialized result object.'
        value: '{ClusterHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rnode health state objects returned in the result of cluster health query\rbased on their health state. The possible values for this parameter include\rinteger value of one of the\rfollowing health states. Only nodes that match the filter are returned. All\rnodes are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of nodes with\rHealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe application health state objects returned in the result of cluster\rhealth\rquery based on their health state.\rThe possible values for this parameter include integer value obtained from\rmembers or bitwise operations\ron members of HealthStateFilter enumeration. Only applications that match\rthe filter are returned.\rAll applications are used to evaluate the aggregated health state. If not\rspecified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these values obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of applications\rwith HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.includeSystemApplicationHealthStatistics
          type:
            - boolean
          description: "Indicates whether the health statistics should include the fabric:/System\rapplication health statistics. False by default.\rIf IncludeSystemApplicationHealthStatistics is set to true, the health\rstatistics include the entities that belong to the fabric:/System\rapplication.\rOtherwise, the query result includes health statistics only for user\rapplications.\rThe health statistics must be included in the query result for this\rparameter to be applied."
          optional: true
        - id: options.clusterHealthPolicies
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the cluster health.\rIf not present, the health evaluation uses the cluster health policy defined\rin the cluster manifest or the default cluster health policy.\rBy default, each application is evaluated using its specific application\rhealth policy, defined in the application manifest, or the default health\rpolicy, if no policy is defined in manifest.\rIf the application health policy map is specified, and it has an entry for\ran application, the specified application health policy\ris used to evaluate the application health."
          optional: true
        - id: options.clusterHealthPolicies.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.clusterHealthPolicies.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            options.clusterHealthPolicies.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getClusterHealthUsingPolicy(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthChunkWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthChunkWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getClusterHealthChunkWithHttpOperationResponse(options)
    summary: "Gets the health of a Service Fabric cluster using health chunks.\r\rGets the health of a Service Fabric cluster using health chunks. Includes\rthe aggregated health state of the cluster, but none of the cluster\rentities.\rTo expand the cluster health and get the health state of all or some of the\rentities, use the POST URI and specify the cluster health chunk query\rdescription."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealthChunkWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterHealthChunk>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterHealthChunk>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getClusterHealthChunkWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getClusterHealthChunk'
    id: 'azure-servicefabric.ServiceFabricClient#getClusterHealthChunk'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getClusterHealthChunk(options, optionalCallback)'
    summary: "Gets the health of a Service Fabric cluster using health chunks.\r\rGets the health of a Service Fabric cluster using health chunks. Includes\rthe aggregated health state of the cluster, but none of the cluster\rentities.\rTo expand the cluster health and get the health state of all or some of the\rentities, use the POST URI and specify the cluster health chunk query\rdescription."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealthChunk(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterHealthChunk} - The deserialized result object.'
        value: '{ClusterHealthChunk} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealthChunk} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealthChunk} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getClusterHealthChunk(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse(options)
    summary: "Gets the health of a Service Fabric cluster using health chunks.\r\rGets the health of a Service Fabric cluster using health chunks. The health\revaluation is done based on the input cluster health chunk query\rdescription.\rThe query description allows users to specify health policies for evaluating\rthe cluster and its children.\rUsers can specify very flexible filters to select which cluster entities to\rreturn. The selection can be done based on the entities health state and\rbased on the hierarchy.\rThe query can return multi-level children of the entities based on the\rspecified filters. For example, it can return one application with a\rspecified name, and for this application, return\ronly services that are in Error or Warning, and all partitions and replicas\rfor one of these services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterHealthChunk>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ClusterHealthChunk>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clusterHealthChunkQueryDescription
          type:
            - object
          description: "Describes the\rcluster and application health policies used to evaluate the cluster health\rand the filters to select which cluster entities to be returned.\rIf the cluster health policy is present, it is used to evaluate the cluster\revents and the cluster nodes. If not present, the health evaluation uses the\rcluster health policy defined in the cluster manifest or the default cluster\rhealth policy.\rBy default, each application is evaluated using its specific application\rhealth policy, defined in the application manifest, or the default health\rpolicy, if no policy is defined in manifest.\rIf the application health policy map is specified, and it has an entry for\ran application, the specified application health policy\ris used to evaluate the application health.\rUsers can specify very flexible filters to select which cluster entities to\rinclude in response. The selection can be done based on the entities health\rstate and based on the hierarchy.\rThe query can return multi-level children of the entities based on the\rspecified filters. For example, it can return one application with a\rspecified name, and for this application, return\ronly services that are in Error or Warning, and all partitions and replicas\rfor one of these services."
          optional: true
        - id: options.clusterHealthChunkQueryDescription.nodeFilters
          type:
            - array
          description: "Defines a list of filters that specify which nodes to be included in the\rreturned cluster health chunk.\rIf no filters are specified, no nodes are returned. All the nodes are used\rto evaluate the cluster's aggregated health state, regardless of the input\rfilters.\rThe cluster health chunk query may specify multiple node filters.\rFor example, it can specify a filter to return all nodes with health state\rError and another filter to always include a node identified by its\rNodeName."
          optional: true
        - id: options.clusterHealthChunkQueryDescription.applicationFilters
          type:
            - array
          description: "Defines a\rlist of filters that specify which applications to be included in the\rreturned cluster health chunk.\rIf no filters are specified, no applications are returned. All the\rapplications are used to evaluate the cluster's aggregated health state,\rregardless of the input filters.\rThe cluster health chunk query may specify multiple application filters.\rFor example, it can specify a filter to return all applications with health\rstate Error and another filter to always include applications of a specified\rapplication type."
          optional: true
        - id: options.clusterHealthChunkQueryDescription.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.clusterHealthChunkQueryDescription.applicationHealthPolicies
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.applicationHealthPolicies.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getClusterHealthChunkUsingPolicyAndAdvancedFiltersWithHttpOperationResponse(options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthChunkUsingPolicyAndAdvancedFilters
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterHealthChunkUsingPolicyAndAdvancedFilters
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getClusterHealthChunkUsingPolicyAndAdvancedFilters(options,
      optionalCallback)
    summary: "Gets the health of a Service Fabric cluster using health chunks.\r\rGets the health of a Service Fabric cluster using health chunks. The health\revaluation is done based on the input cluster health chunk query\rdescription.\rThe query description allows users to specify health policies for evaluating\rthe cluster and its children.\rUsers can specify very flexible filters to select which cluster entities to\rreturn. The selection can be done based on the entities health state and\rbased on the hierarchy.\rThe query can return multi-level children of the entities based on the\rspecified filters. For example, it can return one application with a\rspecified name, and for this application, return\ronly services that are in Error or Warning, and all partitions and replicas\rfor one of these services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterHealthChunkUsingPolicyAndAdvancedFilters(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterHealthChunk} - The deserialized result object.'
        value: '{ClusterHealthChunk} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealthChunk} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterHealthChunk} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.clusterHealthChunkQueryDescription
          type:
            - object
          description: "Describes the\rcluster and application health policies used to evaluate the cluster health\rand the filters to select which cluster entities to be returned.\rIf the cluster health policy is present, it is used to evaluate the cluster\revents and the cluster nodes. If not present, the health evaluation uses the\rcluster health policy defined in the cluster manifest or the default cluster\rhealth policy.\rBy default, each application is evaluated using its specific application\rhealth policy, defined in the application manifest, or the default health\rpolicy, if no policy is defined in manifest.\rIf the application health policy map is specified, and it has an entry for\ran application, the specified application health policy\ris used to evaluate the application health.\rUsers can specify very flexible filters to select which cluster entities to\rinclude in response. The selection can be done based on the entities health\rstate and based on the hierarchy.\rThe query can return multi-level children of the entities based on the\rspecified filters. For example, it can return one application with a\rspecified name, and for this application, return\ronly services that are in Error or Warning, and all partitions and replicas\rfor one of these services."
          optional: true
        - id: options.clusterHealthChunkQueryDescription.nodeFilters
          type:
            - array
          description: "Defines a list of filters that specify which nodes to be included in the\rreturned cluster health chunk.\rIf no filters are specified, no nodes are returned. All the nodes are used\rto evaluate the cluster's aggregated health state, regardless of the input\rfilters.\rThe cluster health chunk query may specify multiple node filters.\rFor example, it can specify a filter to return all nodes with health state\rError and another filter to always include a node identified by its\rNodeName."
          optional: true
        - id: options.clusterHealthChunkQueryDescription.applicationFilters
          type:
            - array
          description: "Defines a\rlist of filters that specify which applications to be included in the\rreturned cluster health chunk.\rIf no filters are specified, no applications are returned. All the\rapplications are used to evaluate the cluster's aggregated health state,\rregardless of the input filters.\rThe cluster health chunk query may specify multiple application filters.\rFor example, it can specify a filter to return all applications with health\rstate Error and another filter to always include applications of a specified\rapplication type."
          optional: true
        - id: options.clusterHealthChunkQueryDescription.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.clusterHealthChunkQueryDescription.applicationHealthPolicies
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.clusterHealthChunkQueryDescription.applicationHealthPolicies.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getClusterHealthChunkUsingPolicyAndAdvancedFilters(options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportClusterHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportClusterHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'reportClusterHealthWithHttpOperationResponse(healthInformation, options)'
    summary: "Sends a health report on the Service Fabric cluster.\r\rSends a health report on a Service Fabric cluster. The report must contain\rthe information about the source of the health report and property on which\rit is reported.\rThe report is sent to a Service Fabric gateway node, which forwards to the\rhealth store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetClusterHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportClusterHealthWithHttpOperationResponse(healthInformation,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reportClusterHealthWithHttpOperationResponse(healthInformation,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportClusterHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportClusterHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'reportClusterHealth(healthInformation, options, optionalCallback)'
    summary: "Sends a health report on the Service Fabric cluster.\r\rSends a health report on a Service Fabric cluster. The report must contain\rthe information about the source of the health report and property on which\rit is reported.\rThe report is sent to a Service Fabric gateway node, which forwards to the\rhealth store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetClusterHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportClusterHealth(healthInformation,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportClusterHealth(healthInformation, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse(options)
    summary: "Gets a list of fabric code versions that are provisioned in a\rService Fabric cluster.\r\rGets a list of information about fabric code versions that are provisioned\rin the cluster. The parameter CodeVersion can be used to optionally filter\rthe output to only that particular version."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.codeVersion
          type:
            - string
          description: The product version of Service Fabric.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getProvisionedFabricCodeVersionInfoListWithHttpOperationResponse(options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricCodeVersionInfoList
    id: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricCodeVersionInfoList
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getProvisionedFabricCodeVersionInfoList(options, optionalCallback)'
    summary: "Gets a list of fabric code versions that are provisioned in a\rService Fabric cluster.\r\rGets a list of information about fabric code versions that are provisioned\rin the cluster. The parameter CodeVersion can be used to optionally filter\rthe output to only that particular version."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getProvisionedFabricCodeVersionInfoList(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.codeVersion
          type:
            - string
          description: The product version of Service Fabric.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getProvisionedFabricCodeVersionInfoList(options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse(options)
    summary: "Gets a list of fabric config versions that are provisioned in a\rService Fabric cluster.\r\rGets a list of information about fabric config versions that are provisioned\rin the cluster. The parameter ConfigVersion can be used to optionally filter\rthe output to only that particular version."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.configVersion
          type:
            - string
          description: "The config version of Service\rFabric."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getProvisionedFabricConfigVersionInfoListWithHttpOperationResponse(options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricConfigVersionInfoList
    id: >-
      azure-servicefabric.ServiceFabricClient#getProvisionedFabricConfigVersionInfoList
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getProvisionedFabricConfigVersionInfoList(options, optionalCallback)'
    summary: "Gets a list of fabric config versions that are provisioned in a\rService Fabric cluster.\r\rGets a list of information about fabric config versions that are provisioned\rin the cluster. The parameter ConfigVersion can be used to optionally filter\rthe output to only that particular version."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getProvisionedFabricConfigVersionInfoList(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.configVersion
          type:
            - string
          description: "The config version of Service\rFabric."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getProvisionedFabricConfigVersionInfoList(options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterUpgradeProgressWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterUpgradeProgressWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getClusterUpgradeProgressWithHttpOperationResponse(options)
    summary: "Gets the progress of the current cluster upgrade.\r\rGets the current progress of the ongoing cluster upgrade. If no upgrade is\rcurrently in progress, gets the last state of the previous cluster upgrade."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgressWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterUpgradeProgressObject>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ClusterUpgradeProgressObject>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getClusterUpgradeProgressWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getClusterUpgradeProgress'
    id: 'azure-servicefabric.ServiceFabricClient#getClusterUpgradeProgress'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getClusterUpgradeProgress(options, optionalCallback)'
    summary: "Gets the progress of the current cluster upgrade.\r\rGets the current progress of the ongoing cluster upgrade. If no upgrade is\rcurrently in progress, gets the last state of the previous cluster upgrade."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterUpgradeProgress(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterUpgradeProgressObject} - The deserialized result object.'
        value: '{ClusterUpgradeProgressObject} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterUpgradeProgressObject} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterUpgradeProgressObject} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getClusterUpgradeProgress(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterConfigurationWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterConfigurationWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getClusterConfigurationWithHttpOperationResponse(configurationApiVersion,
      options)
    summary: "Get the Service Fabric standalone cluster configuration.\r\rGet the Service Fabric standalone cluster configuration. The cluster\rconfiguration contains properties of the cluster that include different node\rtypes on the cluster,\rsecurity configurations, fault and upgrade domain topologies etc."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterConfigurationWithHttpOperationResponse(configurationApiVersion,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterConfiguration>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ClusterConfiguration>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: "The API version of the Standalone\rcluster json configuration."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getClusterConfigurationWithHttpOperationResponse(configurationApiVersion,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getClusterConfiguration'
    id: 'azure-servicefabric.ServiceFabricClient#getClusterConfiguration'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getClusterConfiguration(configurationApiVersion, options,
      optionalCallback)
    summary: "Get the Service Fabric standalone cluster configuration.\r\rGet the Service Fabric standalone cluster configuration. The cluster\rconfiguration contains properties of the cluster that include different node\rtypes on the cluster,\rsecurity configurations, fault and upgrade domain topologies etc."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterConfiguration(configurationApiVersion,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ClusterConfiguration} - The deserialized result object.'
        value: '{ClusterConfiguration} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterConfiguration} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterConfiguration} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: configurationApiVersion
          type:
            - string
          description: "The API version of the Standalone\rcluster json configuration."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getClusterConfiguration(configurationApiVersion, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterConfigurationUpgradeStatusWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterConfigurationUpgradeStatusWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getClusterConfigurationUpgradeStatusWithHttpOperationResponse(options)
    summary: "Get the cluster configuration upgrade status of a Service Fabric\rstandalone cluster.\r\rGet the cluster configuration upgrade status of a Service Fabric standalone\rcluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatusWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ClusterConfigurationUpgradeStatusInfo>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ClusterConfigurationUpgradeStatusInfo>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getClusterConfigurationUpgradeStatusWithHttpOperationResponse(options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getClusterConfigurationUpgradeStatus
    id: >-
      azure-servicefabric.ServiceFabricClient#getClusterConfigurationUpgradeStatus
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getClusterConfigurationUpgradeStatus(options, optionalCallback)'
    summary: "Get the cluster configuration upgrade status of a Service Fabric\rstandalone cluster.\r\rGet the cluster configuration upgrade status of a Service Fabric standalone\rcluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getClusterConfigurationUpgradeStatus(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {ClusterConfigurationUpgradeStatusInfo} - The deserialized result
          object.
        value: >-
          {ClusterConfigurationUpgradeStatusInfo} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterConfigurationUpgradeStatusInfo} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ClusterConfigurationUpgradeStatusInfo} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getClusterConfigurationUpgradeStatus(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#provisionClusterWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#provisionClusterWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      provisionClusterWithHttpOperationResponse(provisionFabricDescription,
      options)
    summary: "Provision the code or configuration packages of a Service Fabric\rcluster.\r\rValidate and provision the code or configuration packages of a Service\rFabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.provisionClusterWithHttpOperationResponse(provisionFabricDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: provisionFabricDescription
          type:
            - object
          description: "Describes the parameters for\rprovisioning a cluster."
        - id: provisionFabricDescription.codeFilePath
          type:
            - string
          description: "The cluster code\rpackage file path."
          optional: true
        - id: provisionFabricDescription.clusterManifestFilePath
          type:
            - string
          description: "The\rcluster manifest file path."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        provisionClusterWithHttpOperationResponse(provisionFabricDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#provisionCluster'
    id: 'azure-servicefabric.ServiceFabricClient#provisionCluster'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'provisionCluster(provisionFabricDescription, options, optionalCallback)'
    summary: "Provision the code or configuration packages of a Service Fabric\rcluster.\r\rValidate and provision the code or configuration packages of a Service\rFabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.provisionCluster(provisionFabricDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: provisionFabricDescription
          type:
            - object
          description: "Describes the parameters for\rprovisioning a cluster."
        - id: provisionFabricDescription.codeFilePath
          type:
            - string
          description: "The cluster code\rpackage file path."
          optional: true
        - id: provisionFabricDescription.clusterManifestFilePath
          type:
            - string
          description: "The\rcluster manifest file path."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function provisionCluster(provisionFabricDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#unprovisionClusterWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#unprovisionClusterWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      unprovisionClusterWithHttpOperationResponse(unprovisionFabricDescription,
      options)
    summary: "Unprovision the code or configuration packages of a Service Fabric\rcluster.\r\rUnprovision the code or configuration packages of a Service Fabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.unprovisionClusterWithHttpOperationResponse(unprovisionFabricDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: unprovisionFabricDescription
          type:
            - object
          description: "Describes the parameters for\runprovisioning a cluster."
        - id: unprovisionFabricDescription.codeVersion
          type:
            - string
          description: "The cluster code\rpackage version."
          optional: true
        - id: unprovisionFabricDescription.configVersion
          type:
            - string
          description: "The cluster\rmanifest version."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        unprovisionClusterWithHttpOperationResponse(unprovisionFabricDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#unprovisionCluster'
    id: 'azure-servicefabric.ServiceFabricClient#unprovisionCluster'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      unprovisionCluster(unprovisionFabricDescription, options,
      optionalCallback)
    summary: "Unprovision the code or configuration packages of a Service Fabric\rcluster.\r\rUnprovision the code or configuration packages of a Service Fabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.unprovisionCluster(unprovisionFabricDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: unprovisionFabricDescription
          type:
            - object
          description: "Describes the parameters for\runprovisioning a cluster."
        - id: unprovisionFabricDescription.codeVersion
          type:
            - string
          description: "The cluster code\rpackage version."
          optional: true
        - id: unprovisionFabricDescription.configVersion
          type:
            - string
          description: "The cluster\rmanifest version."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function unprovisionCluster(unprovisionFabricDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#rollbackClusterUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#rollbackClusterUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: rollbackClusterUpgradeWithHttpOperationResponse(options)
    summary: "Rollback the upgrade of a Service Fabric cluster.\r\rRollback the upgrade of a Service Fabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.rollbackClusterUpgradeWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function rollbackClusterUpgradeWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#rollbackClusterUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#rollbackClusterUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'rollbackClusterUpgrade(options, optionalCallback)'
    summary: "Rollback the upgrade of a Service Fabric cluster.\r\rRollback the upgrade of a Service Fabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.rollbackClusterUpgrade(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function rollbackClusterUpgrade(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#resumeClusterUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#resumeClusterUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      resumeClusterUpgradeWithHttpOperationResponse(resumeClusterUpgradeDescription,
      options)
    summary: "Make the cluster upgrade move on to the next upgrade domain.\r\rMake the cluster upgrade move on to the next upgrade domain."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resumeClusterUpgradeWithHttpOperationResponse(resumeClusterUpgradeDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - object
          description: "Describes the parameters for\rresuming a cluster upgrade."
        - id: resumeClusterUpgradeDescription.upgradeDomain
          type:
            - string
          description: "The next\rupgrade domain for this cluster upgrade."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        resumeClusterUpgradeWithHttpOperationResponse(resumeClusterUpgradeDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#resumeClusterUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#resumeClusterUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      resumeClusterUpgrade(resumeClusterUpgradeDescription, options,
      optionalCallback)
    summary: "Make the cluster upgrade move on to the next upgrade domain.\r\rMake the cluster upgrade move on to the next upgrade domain."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resumeClusterUpgrade(resumeClusterUpgradeDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resumeClusterUpgradeDescription
          type:
            - object
          description: "Describes the parameters for\rresuming a cluster upgrade."
        - id: resumeClusterUpgradeDescription.upgradeDomain
          type:
            - string
          description: "The next\rupgrade domain for this cluster upgrade."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function resumeClusterUpgrade(resumeClusterUpgradeDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startClusterUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startClusterUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startClusterUpgradeWithHttpOperationResponse(startClusterUpgradeDescription,
      options)
    summary: "Start upgrading the code or configuration version of a Service\rFabric cluster.\r\rValidate the supplied upgrade parameters and start upgrading the code or\rconfiguration version of a Service Fabric cluster if the parameters are\rvalid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startClusterUpgradeWithHttpOperationResponse(startClusterUpgradeDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - object
          description: "Describes the parameters for\rstarting a cluster upgrade."
        - id: startClusterUpgradeDescription.codeVersion
          type:
            - string
          description: "The cluster\rcode version."
          optional: true
        - id: startClusterUpgradeDescription.configVersion
          type:
            - string
          description: "The cluster\rconfiguration version."
          optional: true
        - id: startClusterUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible values\rinclude: 'Invalid', 'Rolling'"
          optional: true
        - id: startClusterUpgradeDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
          optional: true
        - id: >-
            startClusterUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type:
            - number
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.monitoringPolicy
          type:
            - object
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.monitoringPolicy.failureAction
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rollback', 'Manual'"
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.enableDeltaHealthEvaluation
          type:
            - boolean
          description: "When true,\renables delta health evaluation rather than absolute health evaluation after\rcompletion of each upgrade domain."
          optional: true
        - id: startClusterUpgradeDescription.clusterUpgradeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of nodes health degradation allowed during\rcluster upgrades. The delta is measured between the state of the nodes at\rthe beginning of upgrade and the state of the nodes at the time of the\rhealth evaluation. The check is performed after every upgrade domain upgrade\rcompletion to make sure the global state of the cluster is within tolerated\rlimits. The default value is 10%."
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of upgrade domain nodes health degradation\rallowed during cluster upgrades. The delta is measured between the state of\rthe upgrade domain nodes at the beginning of upgrade and the state of the\rupgrade domain nodes at the time of the health evaluation. The check is\rperformed after every upgrade domain upgrade completion for all completed\rupgrade domains to make sure the state of the upgrade domains is within\rtolerated limits. The default value is 15%."
          optional: true
        - id: startClusterUpgradeDescription.applicationHealthPolicyMap
          type:
            - object
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.applicationHealthPolicyMap.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        startClusterUpgradeWithHttpOperationResponse(startClusterUpgradeDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startClusterUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#startClusterUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startClusterUpgrade(startClusterUpgradeDescription, options,
      optionalCallback)
    summary: "Start upgrading the code or configuration version of a Service\rFabric cluster.\r\rValidate the supplied upgrade parameters and start upgrading the code or\rconfiguration version of a Service Fabric cluster if the parameters are\rvalid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startClusterUpgrade(startClusterUpgradeDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: startClusterUpgradeDescription
          type:
            - object
          description: "Describes the parameters for\rstarting a cluster upgrade."
        - id: startClusterUpgradeDescription.codeVersion
          type:
            - string
          description: "The cluster\rcode version."
          optional: true
        - id: startClusterUpgradeDescription.configVersion
          type:
            - string
          description: "The cluster\rconfiguration version."
          optional: true
        - id: startClusterUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible values\rinclude: 'Invalid', 'Rolling'"
          optional: true
        - id: startClusterUpgradeDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
          optional: true
        - id: >-
            startClusterUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type:
            - number
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.monitoringPolicy
          type:
            - object
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.monitoringPolicy.failureAction
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rollback', 'Manual'"
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.monitoringPolicy.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: startClusterUpgradeDescription.enableDeltaHealthEvaluation
          type:
            - boolean
          description: "When true,\renables delta health evaluation rather than absolute health evaluation after\rcompletion of each upgrade domain."
          optional: true
        - id: startClusterUpgradeDescription.clusterUpgradeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of nodes health degradation allowed during\rcluster upgrades. The delta is measured between the state of the nodes at\rthe beginning of upgrade and the state of the nodes at the time of the\rhealth evaluation. The check is performed after every upgrade domain upgrade\rcompletion to make sure the global state of the cluster is within tolerated\rlimits. The default value is 10%."
          optional: true
        - id: >-
            startClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of upgrade domain nodes health degradation\rallowed during cluster upgrades. The delta is measured between the state of\rthe upgrade domain nodes at the beginning of upgrade and the state of the\rupgrade domain nodes at the time of the health evaluation. The check is\rperformed after every upgrade domain upgrade completion for all completed\rupgrade domains to make sure the state of the upgrade domains is within\rtolerated limits. The default value is 15%."
          optional: true
        - id: startClusterUpgradeDescription.applicationHealthPolicyMap
          type:
            - object
          description: ''
          optional: true
        - id: >-
            startClusterUpgradeDescription.applicationHealthPolicyMap.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function startClusterUpgrade(startClusterUpgradeDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startClusterConfigurationUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startClusterConfigurationUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startClusterConfigurationUpgradeWithHttpOperationResponse(clusterConfigurationUpgradeDescription,
      options)
    summary: "Start upgrading the configuration of a Service Fabric standalone\rcluster.\r\rValidate the supplied configuration upgrade parameters and start upgrading\rthe cluster configuration if the parameters are valid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgradeWithHttpOperationResponse(clusterConfigurationUpgradeDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - object
          description: "Parameters for a\rstandalone cluster configuration upgrade."
        - id: clusterConfigurationUpgradeDescription.clusterConfig
          type:
            - string
          description: "The\rcluster configuration."
        - id: clusterConfigurationUpgradeDescription.healthCheckRetryTimeout
          type:
            - azure-servicefabric.moment.duration
          description: "The length\rof time between attempts to perform a health checks if the application or\rcluster is not healthy."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.healthCheckWaitDurationInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The length of time to wait after completing an upgrade domain before\rstarting the health checks process."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.healthCheckStableDurationInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: >-
            The length of time that the application or cluster must remain
            healthy.
          optional: true
        - id: clusterConfigurationUpgradeDescription.upgradeDomainTimeoutInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rtimeout for the upgrade domain."
          optional: true
        - id: clusterConfigurationUpgradeDescription.upgradeTimeoutInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The upgrade\rtimeout."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.maxPercentUnhealthyApplications
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy applications during the upgrade.\rAllowed values are integer values from zero to 100."
          optional: true
        - id: clusterConfigurationUpgradeDescription.maxPercentUnhealthyNodes
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy nodes during the upgrade. Allowed\rvalues are integer values from zero to 100."
          optional: true
        - id: clusterConfigurationUpgradeDescription.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: "The\rmaximum allowed percentage of delta health degradation during the upgrade.\rAllowed values are integer values from zero to 100."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of upgrade domain delta health degradation\rduring the upgrade. Allowed values are integer values from zero to 100."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        startClusterConfigurationUpgradeWithHttpOperationResponse(clusterConfigurationUpgradeDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startClusterConfigurationUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#startClusterConfigurationUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription,
      options, optionalCallback)
    summary: "Start upgrading the configuration of a Service Fabric standalone\rcluster.\r\rValidate the supplied configuration upgrade parameters and start upgrading\rthe cluster configuration if the parameters are valid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: clusterConfigurationUpgradeDescription
          type:
            - object
          description: "Parameters for a\rstandalone cluster configuration upgrade."
        - id: clusterConfigurationUpgradeDescription.clusterConfig
          type:
            - string
          description: "The\rcluster configuration."
        - id: clusterConfigurationUpgradeDescription.healthCheckRetryTimeout
          type:
            - azure-servicefabric.moment.duration
          description: "The length\rof time between attempts to perform a health checks if the application or\rcluster is not healthy."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.healthCheckWaitDurationInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The length of time to wait after completing an upgrade domain before\rstarting the health checks process."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.healthCheckStableDurationInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: >-
            The length of time that the application or cluster must remain
            healthy.
          optional: true
        - id: clusterConfigurationUpgradeDescription.upgradeDomainTimeoutInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rtimeout for the upgrade domain."
          optional: true
        - id: clusterConfigurationUpgradeDescription.upgradeTimeoutInSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The upgrade\rtimeout."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.maxPercentUnhealthyApplications
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy applications during the upgrade.\rAllowed values are integer values from zero to 100."
          optional: true
        - id: clusterConfigurationUpgradeDescription.maxPercentUnhealthyNodes
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy nodes during the upgrade. Allowed\rvalues are integer values from zero to 100."
          optional: true
        - id: clusterConfigurationUpgradeDescription.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: "The\rmaximum allowed percentage of delta health degradation during the upgrade.\rAllowed values are integer values from zero to 100."
          optional: true
        - id: >-
            clusterConfigurationUpgradeDescription.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of upgrade domain delta health degradation\rduring the upgrade. Allowed values are integer values from zero to 100."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function
        startClusterConfigurationUpgrade(clusterConfigurationUpgradeDescription,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#updateClusterUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#updateClusterUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateClusterUpgradeWithHttpOperationResponse(updateClusterUpgradeDescription,
      options)
    summary: "Update the upgrade parameters of a Service Fabric cluster upgrade.\r\rUpdate the upgrade parameters of a Service Fabric cluster upgrade."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateClusterUpgradeWithHttpOperationResponse(updateClusterUpgradeDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - object
          description: "Parameters for updating a\rcluster upgrade."
        - id: updateClusterUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rolling', 'Rolling_ForceRestart'"
          optional: true
        - id: updateClusterUpgradeDescription.updateDescription
          type:
            - object
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.updateDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
        - id: updateClusterUpgradeDescription.updateDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.replicaSetCheckTimeoutInMilliseconds
          type:
            - number
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.updateDescription.failureAction
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rollback', 'Manual'"
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.enableDeltaHealthEvaluation
          type:
            - boolean
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.clusterUpgradeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of nodes health degradation allowed during\rcluster upgrades. The delta is measured between the state of the nodes at\rthe beginning of upgrade and the state of the nodes at the time of the\rhealth evaluation. The check is performed after every upgrade domain upgrade\rcompletion to make sure the global state of the cluster is within tolerated\rlimits. The default value is 10%."
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of upgrade domain nodes health degradation\rallowed during cluster upgrades. The delta is measured between the state of\rthe upgrade domain nodes at the beginning of upgrade and the state of the\rupgrade domain nodes at the time of the health evaluation. The check is\rperformed after every upgrade domain upgrade completion for all completed\rupgrade domains to make sure the state of the upgrade domains is within\rtolerated limits. The default value is 15%."
          optional: true
        - id: updateClusterUpgradeDescription.applicationHealthPolicyMap
          type:
            - object
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.applicationHealthPolicyMap.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateClusterUpgradeWithHttpOperationResponse(updateClusterUpgradeDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#updateClusterUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#updateClusterUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateClusterUpgrade(updateClusterUpgradeDescription, options,
      optionalCallback)
    summary: "Update the upgrade parameters of a Service Fabric cluster upgrade.\r\rUpdate the upgrade parameters of a Service Fabric cluster upgrade."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateClusterUpgrade(updateClusterUpgradeDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: updateClusterUpgradeDescription
          type:
            - object
          description: "Parameters for updating a\rcluster upgrade."
        - id: updateClusterUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rolling', 'Rolling_ForceRestart'"
          optional: true
        - id: updateClusterUpgradeDescription.updateDescription
          type:
            - object
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.updateDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
        - id: updateClusterUpgradeDescription.updateDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.replicaSetCheckTimeoutInMilliseconds
          type:
            - number
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.updateDescription.failureAction
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rollback', 'Manual'"
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.updateDescription.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of unhealthy nodes before reporting an error.\rFor example, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.enableDeltaHealthEvaluation
          type:
            - boolean
          description: ''
          optional: true
        - id: updateClusterUpgradeDescription.clusterUpgradeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of nodes health degradation allowed during\rcluster upgrades. The delta is measured between the state of the nodes at\rthe beginning of upgrade and the state of the nodes at the time of the\rhealth evaluation. The check is performed after every upgrade domain upgrade\rcompletion to make sure the global state of the cluster is within tolerated\rlimits. The default value is 10%."
          optional: true
        - id: >-
            updateClusterUpgradeDescription.clusterUpgradeHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes
          type:
            - number
          description: "The maximum allowed percentage of upgrade domain nodes health degradation\rallowed during cluster upgrades. The delta is measured between the state of\rthe upgrade domain nodes at the beginning of upgrade and the state of the\rupgrade domain nodes at the time of the health evaluation. The check is\rperformed after every upgrade domain upgrade completion for all completed\rupgrade domains to make sure the state of the upgrade domains is within\rtolerated limits. The default value is 15%."
          optional: true
        - id: updateClusterUpgradeDescription.applicationHealthPolicyMap
          type:
            - object
          description: ''
          optional: true
        - id: >-
            updateClusterUpgradeDescription.applicationHealthPolicyMap.applicationHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateClusterUpgrade(updateClusterUpgradeDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getAadMetadataWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getAadMetadataWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getAadMetadataWithHttpOperationResponse(options)
    summary: "Gets the Azure Active Directory metadata used for secured\rconnection to cluster.\r\rGets the Azure Active Directory metadata used for secured connection to\rcluster.\rThis API is not supposed to be called separately. It provides information\rneeded to set up an Azure Active Directory secured connection with a Service\rFabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getAadMetadataWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<AadMetadataObject>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<AadMetadataObject>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getAadMetadataWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getAadMetadata'
    id: 'azure-servicefabric.ServiceFabricClient#getAadMetadata'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getAadMetadata(options, optionalCallback)'
    summary: "Gets the Azure Active Directory metadata used for secured\rconnection to cluster.\r\rGets the Azure Active Directory metadata used for secured connection to\rcluster.\rThis API is not supposed to be called separately. It provides information\rneeded to set up an Azure Active Directory secured connection with a Service\rFabric cluster."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getAadMetadata(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{AadMetadataObject} - The deserialized result object.'
        value: '{AadMetadataObject} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AadMetadataObject} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AadMetadataObject} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getAadMetadata(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getNodeInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getNodeInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getNodeInfoListWithHttpOperationResponse(options)
    summary: "Gets the list of nodes in the Service Fabric cluster.\r\rThe Nodes endpoint returns information about the nodes in the Service Fabric\rCluster. The respons include the name, status, id, health, uptime and other\rdetails about the node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeInfoListWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedNodeInfoList>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<PagedNodeInfoList>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.nodeStatusFilter
          type:
            - string
          description: "Allows filtering the nodes based\ron the NodeStatus. Only the nodes that are matching the specified filter\rvalue will be returned. The filter value can be one of the following.\r\r- default - This filter value will match all of the nodes excepts the ones\rwith with status as Unknown or Removed.\r- all - This filter value will match all of the nodes.\r- up - This filter value will match nodes that are Up.\r- down - This filter value will match nodes that are Down.\r- enabling - This filter value will match nodes that are in the process of\rbeing enabled with status as Enabling.\r- disabling - This filter value will match nodes that are in the process of\rbeing disabled with status as Disabling.\r- disabled - This filter value will match nodes that are Disabled.\r- unknown - This filter value will match nodes whose status is Unknown. A\rnode would be in Unknown state if Service Fabric does not have authoritative\rinformation about that node. This can happen if the system learns about a\rnode at runtime.\r- removed - This filter value will match nodes whose status is Removed.\rThese are the nodes that are removed from the cluster using the\rRemoveNodeState API.\r. Possible values include: 'default', 'all', 'up', 'down', 'enabling',\r'disabling', 'disabled', 'unknown', 'removed'"
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getNodeInfoListWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getNodeInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getNodeInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeInfoList(options, optionalCallback)'
    summary: "Gets the list of nodes in the Service Fabric cluster.\r\rThe Nodes endpoint returns information about the nodes in the Service Fabric\rCluster. The respons include the name, status, id, health, uptime and other\rdetails about the node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeInfoList(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PagedNodeInfoList} - The deserialized result object.'
        value: '{PagedNodeInfoList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedNodeInfoList} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedNodeInfoList} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.nodeStatusFilter
          type:
            - string
          description: "Allows filtering the nodes based\ron the NodeStatus. Only the nodes that are matching the specified filter\rvalue will be returned. The filter value can be one of the following.\r\r- default - This filter value will match all of the nodes excepts the ones\rwith with status as Unknown or Removed.\r- all - This filter value will match all of the nodes.\r- up - This filter value will match nodes that are Up.\r- down - This filter value will match nodes that are Down.\r- enabling - This filter value will match nodes that are in the process of\rbeing enabled with status as Enabling.\r- disabling - This filter value will match nodes that are in the process of\rbeing disabled with status as Disabling.\r- disabled - This filter value will match nodes that are Disabled.\r- unknown - This filter value will match nodes whose status is Unknown. A\rnode would be in Unknown state if Service Fabric does not have authoritative\rinformation about that node. This can happen if the system learns about a\rnode at runtime.\r- removed - This filter value will match nodes whose status is Removed.\rThese are the nodes that are removed from the cluster using the\rRemoveNodeState API.\r. Possible values include: 'default', 'all', 'up', 'down', 'enabling',\r'disabling', 'disabled', 'unknown', 'removed'"
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getNodeInfoList(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getNodeInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getNodeInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeInfoWithHttpOperationResponse(nodeName, options)'
    summary: "Gets the list of nodes in the Service Fabric cluster.\r\rGets the information about a specific node in the Service Fabric Cluster.The\rrespons include the name, status, id, health, uptime and other details about\rthe node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeInfoWithHttpOperationResponse(nodeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<NodeInfo>} - The deserialized result object.'
        value: '{HttpOperationResponse<NodeInfo>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getNodeInfoWithHttpOperationResponse(nodeName, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getNodeInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getNodeInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeInfo(nodeName, options, optionalCallback)'
    summary: "Gets the list of nodes in the Service Fabric cluster.\r\rGets the information about a specific node in the Service Fabric Cluster.The\rrespons include the name, status, id, health, uptime and other details about\rthe node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeInfo(nodeName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeInfo} - The deserialized result object.'
        value: '{NodeInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getNodeInfo(nodeName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getNodeHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getNodeHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeHealthWithHttpOperationResponse(nodeName, options)'
    summary: "Gets the health of a Service Fabric node.\r\rGets the health of a Service Fabric node. Use EventsHealthStateFilter to\rfilter the collection of health events reported on the node based on the\rhealth state. If the node that you specify by name does not exist in the\rhealth store, this returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeHealthWithHttpOperationResponse(nodeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<NodeHealth>} - The deserialized result object.'
        value: '{HttpOperationResponse<NodeHealth>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getNodeHealthWithHttpOperationResponse(nodeName, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getNodeHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getNodeHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeHealth(nodeName, options, optionalCallback)'
    summary: "Gets the health of a Service Fabric node.\r\rGets the health of a Service Fabric node. Use EventsHealthStateFilter to\rfilter the collection of health events reported on the node based on the\rhealth state. If the node that you specify by name does not exist in the\rhealth store, this returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeHealth(nodeName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeHealth} - The deserialized result object.'
        value: '{NodeHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getNodeHealth(nodeName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getNodeHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getNodeHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeHealthUsingPolicyWithHttpOperationResponse(nodeName, options)'
    summary: "Gets the health of a Service Fabric node, by using the specified\rhealth policy.\r\rGets the health of a Service Fabric node. Use EventsHealthStateFilter to\rfilter the collection of health events reported on the node based on the\rhealth state. Use ClusterHealthPolicy in the POST body to override the\rhealth policies used to evaluate the health. If the node that you specify by\rname does not exist in the health store, this returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicyWithHttpOperationResponse(nodeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<NodeHealth>} - The deserialized result object.'
        value: '{HttpOperationResponse<NodeHealth>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.clusterHealthPolicy
          type:
            - object
          description: "Describes the health policies\rused to evaluate the health of a cluster or node. If not present, the health\revaluation uses the health policy from cluster manifest or the default\rhealth policy."
          optional: true
        - id: options.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: options.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy nodes before reporting an error. For\rexample, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: options.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum\rallowed percentage of unhealthy applications before reporting an error. For\rexample, to allow 10% of applications to be unhealthy, this value would be\r10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: options.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getNodeHealthUsingPolicyWithHttpOperationResponse(nodeName,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getNodeHealthUsingPolicy'
    id: 'azure-servicefabric.ServiceFabricClient#getNodeHealthUsingPolicy'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeHealthUsingPolicy(nodeName, options, optionalCallback)'
    summary: "Gets the health of a Service Fabric node, by using the specified\rhealth policy.\r\rGets the health of a Service Fabric node. Use EventsHealthStateFilter to\rfilter the collection of health events reported on the node based on the\rhealth state. Use ClusterHealthPolicy in the POST body to override the\rhealth policies used to evaluate the health. If the node that you specify by\rname does not exist in the health store, this returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeHealthUsingPolicy(nodeName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeHealth} - The deserialized result object.'
        value: '{NodeHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.clusterHealthPolicy
          type:
            - object
          description: "Describes the health policies\rused to evaluate the health of a cluster or node. If not present, the health\revaluation uses the health policy from cluster manifest or the default\rhealth policy."
          optional: true
        - id: options.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: options.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy nodes before reporting an error. For\rexample, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: options.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The maximum\rallowed percentage of unhealthy applications before reporting an error. For\rexample, to allow 10% of applications to be unhealthy, this value would be\r10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: options.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getNodeHealthUsingPolicy(nodeName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportNodeHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportNodeHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportNodeHealthWithHttpOperationResponse(nodeName, healthInformation,
      options)
    summary: "Sends a health report on the Service Fabric node.\r\rReports health state of the specified Service Fabric node. The report must\rcontain the information about the source of the health report and property\ron which it is reported.\rThe report is sent to a Service Fabric gateway node, which forwards to the\rhealth store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run GetNodeHealth\rand check that the report appears in the HealthEvents section."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportNodeHealthWithHttpOperationResponse(nodeName,
      healthInformation, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reportNodeHealthWithHttpOperationResponse(nodeName,
        healthInformation, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportNodeHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportNodeHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'reportNodeHealth(nodeName, healthInformation, options, optionalCallback)'
    summary: "Sends a health report on the Service Fabric node.\r\rReports health state of the specified Service Fabric node. The report must\rcontain the information about the source of the health report and property\ron which it is reported.\rThe report is sent to a Service Fabric gateway node, which forwards to the\rhealth store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run GetNodeHealth\rand check that the report appears in the HealthEvents section."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportNodeHealth(nodeName,
      healthInformation, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportNodeHealth(nodeName, healthInformation, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getNodeLoadInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getNodeLoadInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeLoadInfoWithHttpOperationResponse(nodeName, options)'
    summary: "Gets the load information of a Service Fabric node.\r\rGets the load information of a Service Fabric node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeLoadInfoWithHttpOperationResponse(nodeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NodeLoadInfo>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NodeLoadInfo>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getNodeLoadInfoWithHttpOperationResponse(nodeName, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getNodeLoadInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getNodeLoadInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getNodeLoadInfo(nodeName, options, optionalCallback)'
    summary: "Gets the load information of a Service Fabric node.\r\rGets the load information of a Service Fabric node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeLoadInfo(nodeName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeLoadInfo} - The deserialized result object.'
        value: '{NodeLoadInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeLoadInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeLoadInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getNodeLoadInfo(nodeName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#disableNodeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#disableNodeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      disableNodeWithHttpOperationResponse(nodeName,
      deactivationIntentDescription, options)
    summary: "Deactivate a Service Fabric cluster node with the specified\rdeactivation intent.\r\rDeactivate a Service Fabric cluster node with the specified deactivation\rintent. Once the deactivation is in progress, the deactivation intent can be\rincreased, but not decreased (for example, a node which is was deactivated\rwith the Pause intent can be deactivated further with Restart, but not the\rother way around. Nodes may be reactivated using the Activate a node\roperation any time after they are deactivated. If the deactivation is not\rcomplete this will cancel the deactivation. A node which goes down and comes\rback up while deactivated will still need to be reactivated before services\rwill be placed on that node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.disableNodeWithHttpOperationResponse(nodeName,
      deactivationIntentDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: deactivationIntentDescription
          type:
            - object
          description: "Describes the intent or reason\rfor deactivating the node."
        - id: deactivationIntentDescription.deactivationIntent
          type:
            - string
          description: "Describes\rthe intent or reason for deactivating the node. The possible values are\rfollowing.\r- Pause - Indicates that the node should be paused. The value is 1.\r- Restart - Indicates that the intent is for the node to be restarted after\ra short period of time. The value is 2.\r- RemoveData - Indicates the intent is for the node to remove data. The\rvalue is 3.\r. Possible values include: 'Pause', 'Restart', 'RemoveData'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function disableNodeWithHttpOperationResponse(nodeName,
        deactivationIntentDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#disableNode'
    id: 'azure-servicefabric.ServiceFabricClient#disableNode'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      disableNode(nodeName, deactivationIntentDescription, options,
      optionalCallback)
    summary: "Deactivate a Service Fabric cluster node with the specified\rdeactivation intent.\r\rDeactivate a Service Fabric cluster node with the specified deactivation\rintent. Once the deactivation is in progress, the deactivation intent can be\rincreased, but not decreased (for example, a node which is was deactivated\rwith the Pause intent can be deactivated further with Restart, but not the\rother way around. Nodes may be reactivated using the Activate a node\roperation any time after they are deactivated. If the deactivation is not\rcomplete this will cancel the deactivation. A node which goes down and comes\rback up while deactivated will still need to be reactivated before services\rwill be placed on that node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.disableNode(nodeName,
      deactivationIntentDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: deactivationIntentDescription
          type:
            - object
          description: "Describes the intent or reason\rfor deactivating the node."
        - id: deactivationIntentDescription.deactivationIntent
          type:
            - string
          description: "Describes\rthe intent or reason for deactivating the node. The possible values are\rfollowing.\r- Pause - Indicates that the node should be paused. The value is 1.\r- Restart - Indicates that the intent is for the node to be restarted after\ra short period of time. The value is 2.\r- RemoveData - Indicates the intent is for the node to remove data. The\rvalue is 3.\r. Possible values include: 'Pause', 'Restart', 'RemoveData'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function disableNode(nodeName, deactivationIntentDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#enableNodeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#enableNodeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'enableNodeWithHttpOperationResponse(nodeName, options)'
    summary: "Activate a Service Fabric cluster node which is currently\rdeactivated.\r\rActivates a Service Fabric cluster node which is currently deactivated. Once\ractivated, the node will again become a viable target for placing new\rreplicas, and any deactivated replicas remaining on the node will be\rreactivated."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.enableNodeWithHttpOperationResponse(nodeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function enableNodeWithHttpOperationResponse(nodeName, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#enableNode'
    id: 'azure-servicefabric.ServiceFabricClient#enableNode'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'enableNode(nodeName, options, optionalCallback)'
    summary: "Activate a Service Fabric cluster node which is currently\rdeactivated.\r\rActivates a Service Fabric cluster node which is currently deactivated. Once\ractivated, the node will again become a viable target for placing new\rreplicas, and any deactivated replicas remaining on the node will be\rreactivated."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.enableNode(nodeName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function enableNode(nodeName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#removeNodeStateWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#removeNodeStateWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'removeNodeStateWithHttpOperationResponse(nodeName, options)'
    summary: "Notifies Service Fabric that the persisted state on a node has been\rpermanently removed or lost.\r\rNotifies Service Fabric that the persisted state on a node has been\rpermanently removed or lost.  This implies that it is not possible to\rrecover the persisted state of that node. This generally happens if a hard\rdisk has been wiped clean, or if a hard disk crashes. The node has to be\rdown for this operation to be successful. This operation lets Service Fabric\rknow that the replicas on that node no longer exist, and that Service Fabric\rshould stop waiting for those replicas to come back up. Do not run this\rcmdlet if the state on the node has not been removed and the node can comes\rback up with its state intact."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.removeNodeStateWithHttpOperationResponse(nodeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function removeNodeStateWithHttpOperationResponse(nodeName, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#removeNodeState'
    id: 'azure-servicefabric.ServiceFabricClient#removeNodeState'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'removeNodeState(nodeName, options, optionalCallback)'
    summary: "Notifies Service Fabric that the persisted state on a node has been\rpermanently removed or lost.\r\rNotifies Service Fabric that the persisted state on a node has been\rpermanently removed or lost.  This implies that it is not possible to\rrecover the persisted state of that node. This generally happens if a hard\rdisk has been wiped clean, or if a hard disk crashes. The node has to be\rdown for this operation to be successful. This operation lets Service Fabric\rknow that the replicas on that node no longer exist, and that Service Fabric\rshould stop waiting for those replicas to come back up. Do not run this\rcmdlet if the state on the node has not been removed and the node can comes\rback up with its state intact."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.removeNodeState(nodeName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function removeNodeState(nodeName, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#restartNodeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#restartNodeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      restartNodeWithHttpOperationResponse(nodeName, restartNodeDescription,
      options)
    summary: "Restarts a Service Fabric cluster node.\r\rRestarts a Service Fabric cluster node that is already started."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.restartNodeWithHttpOperationResponse(nodeName,
      restartNodeDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: restartNodeDescription
          type:
            - object
          description: "The instance of the node to be\rrestarted and a flag indicating the need to take dump of the fabric process."
        - id: restartNodeDescription.nodeInstanceId
          type:
            - string
          description: "The instance id of the\rtarget node. If instance id is specified the node is restarted only if it\rmatches with the current instance of the node. A default value of \"0\" would\rmatch any instance id. The instance id can be obtained using get node query."
        - id: restartNodeDescription.createFabricDump
          type:
            - string
          description: "Specify True to\rcreate a dump of the fabric node process. This is case sensitive. Possible\rvalues include: 'False', 'True'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restartNodeWithHttpOperationResponse(nodeName,
        restartNodeDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#restartNode'
    id: 'azure-servicefabric.ServiceFabricClient#restartNode'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'restartNode(nodeName, restartNodeDescription, options, optionalCallback)'
    summary: "Restarts a Service Fabric cluster node.\r\rRestarts a Service Fabric cluster node that is already started."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.restartNode(nodeName,
      restartNodeDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: restartNodeDescription
          type:
            - object
          description: "The instance of the node to be\rrestarted and a flag indicating the need to take dump of the fabric process."
        - id: restartNodeDescription.nodeInstanceId
          type:
            - string
          description: "The instance id of the\rtarget node. If instance id is specified the node is restarted only if it\rmatches with the current instance of the node. A default value of \"0\" would\rmatch any instance id. The instance id can be obtained using get node query."
        - id: restartNodeDescription.createFabricDump
          type:
            - string
          description: "Specify True to\rcreate a dump of the fabric node process. This is case sensitive. Possible\rvalues include: 'False', 'True'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function restartNode(nodeName, restartNodeDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getApplicationTypeInfoListWithHttpOperationResponse(options)
    summary: "Gets the list of application types in the Service Fabric cluster.\r\rReturns the information about the application types that are provisioned or\rin the process of being provisioned in the Service Fabric cluster. Each\rversion of an application type is returned as one application type. The\rresponse includes the name, version, status and other details about the\rapplication type. This is a paged query, meaning that if not all of the\rapplication types fit in a page, one page of results is returned as well as\ra continuation token which can be used to get the next page. For example, if\rthere are 10 application types but a page only fits the first 3 application\rtypes, or if max results is set to 3, then 3 is returned. To access the rest\rof the results, retrieve subsequent pages by using the returned continuation\rtoken in the next query. An empty continuation token is returned if there\rare no subsequent pages."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedApplicationTypeInfoList>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<PagedApplicationTypeInfoList>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.applicationTypeDefinitionKindFilter
          type:
            - number
          description: "Used to filter\ron ApplicationTypeDefinitionKind for application type query operations.\r- Default - Default value. Filter that matches input with any\rApplicationTypeDefinitionKind value. The value is 0.\r- All - Filter that matches input with any ApplicationTypeDefinitionKind\rvalue. The value is 65535.\r- ServiceFabricApplicationPackage - Filter that matches input with\rApplicationTypeDefinitionKind value ServiceFabricApplicationPackage. The\rvalue is 1.\r- Compose - Filter that matches input with ApplicationTypeDefinitionKind\rvalue Compose. The value is 2."
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.maxResults
          type:
            - number
          description: "The maximum number of results to be\rreturned as part of the paged queries. This parameter defines the upper\rbound on the number of results returned. The results returned can be less\rthan the specified maximum results if they do not fit in the message as per\rthe max message size restrictions defined in the configuration. If this\rparameter is zero or not specified, the paged queries includes as much\rresults as possible that fit in the return message."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getApplicationTypeInfoListWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationTypeInfoList(options, optionalCallback)'
    summary: "Gets the list of application types in the Service Fabric cluster.\r\rReturns the information about the application types that are provisioned or\rin the process of being provisioned in the Service Fabric cluster. Each\rversion of an application type is returned as one application type. The\rresponse includes the name, version, status and other details about the\rapplication type. This is a paged query, meaning that if not all of the\rapplication types fit in a page, one page of results is returned as well as\ra continuation token which can be used to get the next page. For example, if\rthere are 10 application types but a page only fits the first 3 application\rtypes, or if max results is set to 3, then 3 is returned. To access the rest\rof the results, retrieve subsequent pages by using the returned continuation\rtoken in the next query. An empty continuation token is returned if there\rare no subsequent pages."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoList(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PagedApplicationTypeInfoList} - The deserialized result object.'
        value: '{PagedApplicationTypeInfoList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedApplicationTypeInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedApplicationTypeInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.applicationTypeDefinitionKindFilter
          type:
            - number
          description: "Used to filter\ron ApplicationTypeDefinitionKind for application type query operations.\r- Default - Default value. Filter that matches input with any\rApplicationTypeDefinitionKind value. The value is 0.\r- All - Filter that matches input with any ApplicationTypeDefinitionKind\rvalue. The value is 65535.\r- ServiceFabricApplicationPackage - Filter that matches input with\rApplicationTypeDefinitionKind value ServiceFabricApplicationPackage. The\rvalue is 1.\r- Compose - Filter that matches input with ApplicationTypeDefinitionKind\rvalue Compose. The value is 2."
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.maxResults
          type:
            - number
          description: "The maximum number of results to be\rreturned as part of the paged queries. This parameter defines the upper\rbound on the number of results returned. The results returned can be less\rthan the specified maximum results if they do not fit in the message as per\rthe max message size restrictions defined in the configuration. If this\rparameter is zero or not specified, the paged queries includes as much\rresults as possible that fit in the return message."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getApplicationTypeInfoList(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListByNameWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListByNameWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getApplicationTypeInfoListByNameWithHttpOperationResponse(applicationTypeName,
      options)
    summary: "Gets the list of application types in the Service Fabric cluster\rmatching exactly the specified name.\r\rReturns the information about the application types that are provisioned or\rin the process of being provisioned in the Service Fabric cluster. These\rresults are of application types whose name match exactly the one specified\ras the parameter, and which comply with the given query parameters. All\rversions of the application type matching the application type name are\rreturned, with each version returned as one application type. The response\rincludes the name, version, status and other details about the application\rtype. This is a paged query, meaning that if not all of the application\rtypes fit in a page, one page of results is returned as well as a\rcontinuation token which can be used to get the next page. For example, if\rthere are 10 application types but a page only fits the first 3 application\rtypes, or if max results is set to 3, then 3 is returned. To access the rest\rof the results, retrieve subsequent pages by using the returned continuation\rtoken in the next query. An empty continuation token is returned if there\rare no subsequent pages."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByNameWithHttpOperationResponse(applicationTypeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedApplicationTypeInfoList>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<PagedApplicationTypeInfoList>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.maxResults
          type:
            - number
          description: "The maximum number of results to be\rreturned as part of the paged queries. This parameter defines the upper\rbound on the number of results returned. The results returned can be less\rthan the specified maximum results if they do not fit in the message as per\rthe max message size restrictions defined in the configuration. If this\rparameter is zero or not specified, the paged queries includes as much\rresults as possible that fit in the return message."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getApplicationTypeInfoListByNameWithHttpOperationResponse(applicationTypeName,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListByName'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationTypeInfoListByName'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getApplicationTypeInfoListByName(applicationTypeName, options,
      optionalCallback)
    summary: "Gets the list of application types in the Service Fabric cluster\rmatching exactly the specified name.\r\rReturns the information about the application types that are provisioned or\rin the process of being provisioned in the Service Fabric cluster. These\rresults are of application types whose name match exactly the one specified\ras the parameter, and which comply with the given query parameters. All\rversions of the application type matching the application type name are\rreturned, with each version returned as one application type. The response\rincludes the name, version, status and other details about the application\rtype. This is a paged query, meaning that if not all of the application\rtypes fit in a page, one page of results is returned as well as a\rcontinuation token which can be used to get the next page. For example, if\rthere are 10 application types but a page only fits the first 3 application\rtypes, or if max results is set to 3, then 3 is returned. To access the rest\rof the results, retrieve subsequent pages by using the returned continuation\rtoken in the next query. An empty continuation token is returned if there\rare no subsequent pages."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationTypeInfoListByName(applicationTypeName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PagedApplicationTypeInfoList} - The deserialized result object.'
        value: '{PagedApplicationTypeInfoList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedApplicationTypeInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedApplicationTypeInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.maxResults
          type:
            - number
          description: "The maximum number of results to be\rreturned as part of the paged queries. This parameter defines the upper\rbound on the number of results returned. The results returned can be less\rthan the specified maximum results if they do not fit in the message as per\rthe max message size restrictions defined in the configuration. If this\rparameter is zero or not specified, the paged queries includes as much\rresults as possible that fit in the return message."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getApplicationTypeInfoListByName(applicationTypeName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#provisionApplicationTypeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#provisionApplicationTypeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      provisionApplicationTypeWithHttpOperationResponse(applicationTypeImageStorePath,
      options)
    summary: "Provisions or registers a Service Fabric application type with the\rcluster.\r\rProvisions or registers a Service Fabric application type with the cluster.\rThis is required before any new applications can be instantiated."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.provisionApplicationTypeWithHttpOperationResponse(applicationTypeImageStorePath,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationTypeImageStorePath
          type:
            - object
          description: "The relative path for the\rapplication package in the image store specified during the prior copy\roperation."
        - id: applicationTypeImageStorePath.applicationTypeBuildPath
          type:
            - string
          description: "The\rrelative image store path to the application package."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        provisionApplicationTypeWithHttpOperationResponse(applicationTypeImageStorePath,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#provisionApplicationType'
    id: 'azure-servicefabric.ServiceFabricClient#provisionApplicationType'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      provisionApplicationType(applicationTypeImageStorePath, options,
      optionalCallback)
    summary: "Provisions or registers a Service Fabric application type with the\rcluster.\r\rProvisions or registers a Service Fabric application type with the cluster.\rThis is required before any new applications can be instantiated."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.provisionApplicationType(applicationTypeImageStorePath,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationTypeImageStorePath
          type:
            - object
          description: "The relative path for the\rapplication package in the image store specified during the prior copy\roperation."
        - id: applicationTypeImageStorePath.applicationTypeBuildPath
          type:
            - string
          description: "The\rrelative image store path to the application package."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function provisionApplicationType(applicationTypeImageStorePath,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#unprovisionApplicationTypeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#unprovisionApplicationTypeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      unprovisionApplicationTypeWithHttpOperationResponse(applicationTypeName,
      applicationTypeImageStoreVersion, options)
    summary: "Removes or unregisters a Service Fabric application type from the\rcluster.\r\rRemoves or unregisters a Service Fabric application type from the cluster.\rThis operation can only be performed if all application instance of the\rapplication type has been deleted. Once the application type is\runregistered, no new application instance can be created for this particular\rapplication type."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.unprovisionApplicationTypeWithHttpOperationResponse(applicationTypeName,
      applicationTypeImageStoreVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeImageStoreVersion
          type:
            - object
          description: "The version of the\rapplication type in the image store."
        - id: applicationTypeImageStoreVersion.applicationTypeVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        unprovisionApplicationTypeWithHttpOperationResponse(applicationTypeName,
        applicationTypeImageStoreVersion, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#unprovisionApplicationType'
    id: 'azure-servicefabric.ServiceFabricClient#unprovisionApplicationType'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      unprovisionApplicationType(applicationTypeName,
      applicationTypeImageStoreVersion, options, optionalCallback)
    summary: "Removes or unregisters a Service Fabric application type from the\rcluster.\r\rRemoves or unregisters a Service Fabric application type from the cluster.\rThis operation can only be performed if all application instance of the\rapplication type has been deleted. Once the application type is\runregistered, no new application instance can be created for this particular\rapplication type."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.unprovisionApplicationType(applicationTypeName,
      applicationTypeImageStoreVersion, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeImageStoreVersion
          type:
            - object
          description: "The version of the\rapplication type in the image store."
        - id: applicationTypeImageStoreVersion.applicationTypeVersion
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function unprovisionApplicationType(applicationTypeName,
        applicationTypeImageStoreVersion, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceTypeInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceTypeInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getServiceTypeInfoListWithHttpOperationResponse(applicationTypeName,
      applicationTypeVersion, options)
    summary: "Gets the list containing the information about service types that\rare supported by a provisioned application type in a Service Fabric cluster.\r\rGets the list containing the information about service types that are\rsupported by a provisioned application type in a Service Fabric cluster. The\rresponse includes the name of the service type, the name and version of the\rservice manifest the type is defined in, kind (stateless or stateless) of\rthe service type and other information about it."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceTypeInfoListWithHttpOperationResponse(applicationTypeName,
      applicationTypeVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeVersion
          type:
            - string
          description: The version of the application type.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getServiceTypeInfoListWithHttpOperationResponse(applicationTypeName,
        applicationTypeVersion, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceTypeInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceTypeInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getServiceTypeInfoList(applicationTypeName, applicationTypeVersion,
      options, optionalCallback)
    summary: "Gets the list containing the information about service types that\rare supported by a provisioned application type in a Service Fabric cluster.\r\rGets the list containing the information about service types that are\rsupported by a provisioned application type in a Service Fabric cluster. The\rresponse includes the name of the service type, the name and version of the\rservice manifest the type is defined in, kind (stateless or stateless) of\rthe service type and other information about it."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceTypeInfoList(applicationTypeName,
      applicationTypeVersion, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeVersion
          type:
            - string
          description: The version of the application type.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getServiceTypeInfoList(applicationTypeName,
        applicationTypeVersion, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceManifestWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceManifestWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getServiceManifestWithHttpOperationResponse(applicationTypeName,
      applicationTypeVersion, serviceManifestName, options)
    summary: "Gets the manifest describing a service type.\r\rGets the manifest describing a service type. The response contains the\rservice manifest XML as a string."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceManifestWithHttpOperationResponse(applicationTypeName,
      applicationTypeVersion, serviceManifestName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServiceTypeManifest>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ServiceTypeManifest>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeVersion
          type:
            - string
          description: The version of the application type.
        - id: serviceManifestName
          type:
            - string
          description: "The name of a service manifest\rregistered as part of an application type in a Service Fabric cluster."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getServiceManifestWithHttpOperationResponse(applicationTypeName,
        applicationTypeVersion, serviceManifestName, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceManifest'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceManifest'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getServiceManifest(applicationTypeName, applicationTypeVersion,
      serviceManifestName, options, optionalCallback)
    summary: "Gets the manifest describing a service type.\r\rGets the manifest describing a service type. The response contains the\rservice manifest XML as a string."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceManifest(applicationTypeName,
      applicationTypeVersion, serviceManifestName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServiceTypeManifest} - The deserialized result object.'
        value: '{ServiceTypeManifest} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceTypeManifest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceTypeManifest} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeVersion
          type:
            - string
          description: The version of the application type.
        - id: serviceManifestName
          type:
            - string
          description: "The name of a service manifest\rregistered as part of an application type in a Service Fabric cluster."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getServiceManifest(applicationTypeName, applicationTypeVersion,
        serviceManifestName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceTypeInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    summary: "Gets the list containing the information about service types from\rthe applications deployed on a node in a Service Fabric cluster.\r\rGets the list containing the information about service types from the\rapplications deployed on a node in a Service Fabric cluster. The response\rincludes the name of the service type, its registration status, the code\rpackage that registered it and activation id of the service package."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of the service\rmanifest to filter the list of deployed service type information. If\rspecified, the response will only contain the information about service\rtypes that are defined in this service manifest."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServiceTypeInfoListWithHttpOperationResponse(nodeName,
        applicationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceTypeInfoList(nodeName, applicationId, options,
      optionalCallback)
    summary: "Gets the list containing the information about service types from\rthe applications deployed on a node in a Service Fabric cluster.\r\rGets the list containing the information about service types from the\rapplications deployed on a node in a Service Fabric cluster. The response\rincludes the name of the service type, its registration status, the code\rpackage that registered it and activation id of the service package."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoList(nodeName,
      applicationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of the service\rmanifest to filter the list of deployed service type information. If\rspecified, the response will only contain the information about service\rtypes that are defined in this service manifest."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServiceTypeInfoList(nodeName, applicationId,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoByNameWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoByNameWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceTypeInfoByNameWithHttpOperationResponse(nodeName,
      applicationId, serviceTypeName, options)
    summary: "Gets the information about a specified service type of the\rapplication deployed on a node in a Service Fabric cluster.\r\rGets the list containing the information about a specific service type from\rthe applications deployed on a node in a Service Fabric cluster. The\rresponse includes the name of the service type, its registration status, the\rcode package that registered it and activation id of the service package.\rEach entry represents one activation of a service type, differentiated by\rthe activation id."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByNameWithHttpOperationResponse(nodeName,
      applicationId, serviceTypeName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceTypeName
          type:
            - string
          description: "Specifies the name of a Service Fabric\rservice type."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of the service\rmanifest to filter the list of deployed service type information. If\rspecified, the response will only contain the information about service\rtypes that are defined in this service manifest."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServiceTypeInfoByNameWithHttpOperationResponse(nodeName,
        applicationId, serviceTypeName, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoByName'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedServiceTypeInfoByName'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceTypeInfoByName(nodeName, applicationId, serviceTypeName,
      options, optionalCallback)
    summary: "Gets the information about a specified service type of the\rapplication deployed on a node in a Service Fabric cluster.\r\rGets the list containing the information about a specific service type from\rthe applications deployed on a node in a Service Fabric cluster. The\rresponse includes the name of the service type, its registration status, the\rcode package that registered it and activation id of the service package.\rEach entry represents one activation of a service type, differentiated by\rthe activation id."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceTypeInfoByName(nodeName,
      applicationId, serviceTypeName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceTypeName
          type:
            - string
          description: "Specifies the name of a Service Fabric\rservice type."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of the service\rmanifest to filter the list of deployed service type information. If\rspecified, the response will only contain the information about service\rtypes that are defined in this service manifest."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServiceTypeInfoByName(nodeName, applicationId,
        serviceTypeName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#createApplicationWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#createApplicationWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      createApplicationWithHttpOperationResponse(applicationDescription,
      options)
    summary: "Creates a Service Fabric application.\r\rCreates a Service Fabric application using the specified description."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createApplicationWithHttpOperationResponse(applicationDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationDescription
          type:
            - object
          description: "Description for creating an\rapplication."
        - id: applicationDescription.name
          type:
            - string
          description: ''
        - id: applicationDescription.typeName
          type:
            - string
          description: ''
        - id: applicationDescription.typeVersion
          type:
            - string
          description: ''
        - id: applicationDescription.parameterList
          type:
            - array
          description: ''
          optional: true
        - id: applicationDescription.applicationCapacity
          type:
            - object
          description: ''
          optional: true
        - id: applicationDescription.applicationCapacity.minimumNodes
          type:
            - number
          description: "The minimum number of nodes where Service Fabric will reserve capacity for\rthis application. Note that this does not mean that the services of this\rapplication will be placed on all of those nodes. If this property is set to\rzero, no capacity will be reserved. The value of this property cannot be\rmore than the value of the MaximumNodes property."
          optional: true
        - id: applicationDescription.applicationCapacity.maximumNodes
          type:
            - number
          description: "The maximum number of nodes where Service Fabric will reserve capacity for\rthis application. Note that this does not mean that the services of this\rapplication will be placed on all of those nodes. By default, the value of\rthis property is zero and it means that the services can be placed on any\rnode."
          optional: true
        - id: applicationDescription.applicationCapacity.applicationMetrics
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createApplicationWithHttpOperationResponse(applicationDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#createApplication'
    id: 'azure-servicefabric.ServiceFabricClient#createApplication'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'createApplication(applicationDescription, options, optionalCallback)'
    summary: "Creates a Service Fabric application.\r\rCreates a Service Fabric application using the specified description."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createApplication(applicationDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationDescription
          type:
            - object
          description: "Description for creating an\rapplication."
        - id: applicationDescription.name
          type:
            - string
          description: ''
        - id: applicationDescription.typeName
          type:
            - string
          description: ''
        - id: applicationDescription.typeVersion
          type:
            - string
          description: ''
        - id: applicationDescription.parameterList
          type:
            - array
          description: ''
          optional: true
        - id: applicationDescription.applicationCapacity
          type:
            - object
          description: ''
          optional: true
        - id: applicationDescription.applicationCapacity.minimumNodes
          type:
            - number
          description: "The minimum number of nodes where Service Fabric will reserve capacity for\rthis application. Note that this does not mean that the services of this\rapplication will be placed on all of those nodes. If this property is set to\rzero, no capacity will be reserved. The value of this property cannot be\rmore than the value of the MaximumNodes property."
          optional: true
        - id: applicationDescription.applicationCapacity.maximumNodes
          type:
            - number
          description: "The maximum number of nodes where Service Fabric will reserve capacity for\rthis application. Note that this does not mean that the services of this\rapplication will be placed on all of those nodes. By default, the value of\rthis property is zero and it means that the services can be placed on any\rnode."
          optional: true
        - id: applicationDescription.applicationCapacity.applicationMetrics
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createApplication(applicationDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#deleteApplicationWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#deleteApplicationWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'deleteApplicationWithHttpOperationResponse(applicationId, options)'
    summary: "Deletes an existing Service Fabric application.\r\rDeletes an existing Service Fabric application. An application must be\rcreated before it can be deleted. Deleting an application will delete all\rservices that are part of that application. By default Service Fabric will\rtry to close service replicas in a graceful manner and then delete the\rservice. However if service is having issues closing the replica gracefully,\rthe delete operation may take a long time or get stuck. Use the optional\rForceRemove flag to skip the graceful close sequence and forcefully delete\rthe application and all of the its services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteApplicationWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.forceRemove
          type:
            - boolean
          description: "Remove a Service Fabric application\ror service forcefully without going through the graceful shutdown sequence.\rThis parameter can be used to forcefully delete an application or service\rfor which delete is timing out due to issues in the service code that\rprevents graceful close of replicas."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteApplicationWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#deleteApplication'
    id: 'azure-servicefabric.ServiceFabricClient#deleteApplication'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'deleteApplication(applicationId, options, optionalCallback)'
    summary: "Deletes an existing Service Fabric application.\r\rDeletes an existing Service Fabric application. An application must be\rcreated before it can be deleted. Deleting an application will delete all\rservices that are part of that application. By default Service Fabric will\rtry to close service replicas in a graceful manner and then delete the\rservice. However if service is having issues closing the replica gracefully,\rthe delete operation may take a long time or get stuck. Use the optional\rForceRemove flag to skip the graceful close sequence and forcefully delete\rthe application and all of the its services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteApplication(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.forceRemove
          type:
            - boolean
          description: "Remove a Service Fabric application\ror service forcefully without going through the graceful shutdown sequence.\rThis parameter can be used to forcefully delete an application or service\rfor which delete is timing out due to issues in the service code that\rprevents graceful close of replicas."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteApplication(applicationId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationLoadInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationLoadInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationLoadInfoWithHttpOperationResponse(applicationId, options)'
    summary: "Gets load information about a Service Fabric application.\r\rReturns the load information about the application that was created or in\rthe process of being created in the Service Fabric cluster and whose name\rmatches the one specified as the parameter. The response includes the name,\rminimum nodes, maximum nodes, the number of nodes the app is occupying\rcurrently, and application load metric information about the application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationLoadInfoWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ApplicationLoadInfo>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ApplicationLoadInfo>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getApplicationLoadInfoWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationLoadInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationLoadInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationLoadInfo(applicationId, options, optionalCallback)'
    summary: "Gets load information about a Service Fabric application.\r\rReturns the load information about the application that was created or in\rthe process of being created in the Service Fabric cluster and whose name\rmatches the one specified as the parameter. The response includes the name,\rminimum nodes, maximum nodes, the number of nodes the app is occupying\rcurrently, and application load metric information about the application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationLoadInfo(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationLoadInfo} - The deserialized result object.'
        value: '{ApplicationLoadInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationLoadInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationLoadInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getApplicationLoadInfo(applicationId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getApplicationInfoListWithHttpOperationResponse(options)
    summary: "Gets the list of applications created in the Service Fabric cluster\rthat match filters specified as the parameter.\r\rGets the information about the applications that were created or in the\rprocess of being created in the Service Fabric cluster and match filters\rspecified as the parameter. The response includes the name, type, status,\rparameters and other details about the application. If the applications do\rnot fit in a page, one page of results is returned as well as a continuation\rtoken which can be used to get the next page."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationInfoListWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedApplicationInfoList>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PagedApplicationInfoList>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.applicationDefinitionKindFilter
          type:
            - number
          description: "Used to filter on\rApplicationDefinitionKind for application query operations.\r- Default - Default value. Filter that matches input with any\rApplicationDefinitionKind value. The value is 0.\r- All - Filter that matches input with any ApplicationDefinitionKind value.\rThe value is 65535.\r- ServiceFabricApplicationDescription - Filter that matches input with\rApplicationDefinitionKind value ServiceFabricApplicationDescription. The\rvalue is 1.\r- Compose - Filter that matches input with ApplicationDefinitionKind value\rCompose. The value is 2."
          optional: true
        - id: options.applicationTypeName
          type:
            - string
          description: "The application type name used\rto filter the applications to query for. This value should not contain the\rapplication type version."
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getApplicationInfoListWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationInfoList(options, optionalCallback)'
    summary: "Gets the list of applications created in the Service Fabric cluster\rthat match filters specified as the parameter.\r\rGets the information about the applications that were created or in the\rprocess of being created in the Service Fabric cluster and match filters\rspecified as the parameter. The response includes the name, type, status,\rparameters and other details about the application. If the applications do\rnot fit in a page, one page of results is returned as well as a continuation\rtoken which can be used to get the next page."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationInfoList(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PagedApplicationInfoList} - The deserialized result object.'
        value: '{PagedApplicationInfoList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedApplicationInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedApplicationInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.applicationDefinitionKindFilter
          type:
            - number
          description: "Used to filter on\rApplicationDefinitionKind for application query operations.\r- Default - Default value. Filter that matches input with any\rApplicationDefinitionKind value. The value is 0.\r- All - Filter that matches input with any ApplicationDefinitionKind value.\rThe value is 65535.\r- ServiceFabricApplicationDescription - Filter that matches input with\rApplicationDefinitionKind value ServiceFabricApplicationDescription. The\rvalue is 1.\r- Compose - Filter that matches input with ApplicationDefinitionKind value\rCompose. The value is 2."
          optional: true
        - id: options.applicationTypeName
          type:
            - string
          description: "The application type name used\rto filter the applications to query for. This value should not contain the\rapplication type version."
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getApplicationInfoList(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationInfoWithHttpOperationResponse(applicationId, options)'
    summary: "Gets information about a Service Fabric application.\r\rReturns the information about the application that was created or in the\rprocess of being created in the Service Fabric cluster and whose name\rmatches the one specified as the parameter. The response includes the name,\rtype, status, parameters and other details about the application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationInfoWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ApplicationInfo>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ApplicationInfo>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getApplicationInfoWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationInfo(applicationId, options, optionalCallback)'
    summary: "Gets information about a Service Fabric application.\r\rReturns the information about the application that was created or in the\rprocess of being created in the Service Fabric cluster and whose name\rmatches the one specified as the parameter. The response includes the name,\rtype, status, parameters and other details about the application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationInfo(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationInfo} - The deserialized result object.'
        value: '{ApplicationInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.excludeApplicationParameters
          type:
            - boolean
          description: "The flag that\rspecifies whether application parameters will be excluded from the result."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getApplicationInfo(applicationId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationHealthWithHttpOperationResponse(applicationId, options)'
    summary: "Gets the health of the service fabric application.\r\rReturns the heath state of the service fabric application. The response\rreports either Ok, Error or Warning health state. If the entity is not found\rin the helath store, it will return Error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationHealthWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ApplicationHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ApplicationHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedApplicationsHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed applications health state objects returned in the\rresult of application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states. Only deployed applications that match the filter\rwill be returned.\\\rAll deployed applications are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of deployed\rapplications with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.servicesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rservices health state objects returned in the result of services health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly services that match the filter are returned. All services are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of services with HealthState value of OK (2) and Warning\r(4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getApplicationHealthWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationHealth(applicationId, options, optionalCallback)'
    summary: "Gets the health of the service fabric application.\r\rReturns the heath state of the service fabric application. The response\rreports either Ok, Error or Warning health state. If the entity is not found\rin the helath store, it will return Error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationHealth(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationHealth} - The deserialized result object.'
        value: '{ApplicationHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedApplicationsHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed applications health state objects returned in the\rresult of application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states. Only deployed applications that match the filter\rwill be returned.\\\rAll deployed applications are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of deployed\rapplications with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.servicesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rservices health state objects returned in the result of services health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly services that match the filter are returned. All services are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of services with HealthState value of OK (2) and Warning\r(4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getApplicationHealth(applicationId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getApplicationHealthUsingPolicyWithHttpOperationResponse(applicationId,
      options)
    summary: "Gets the health of a Service Fabric application using the specified\rpolicy.\r\rGets the health of a Service Fabric application. Use EventsHealthStateFilter\rto filter the collection of health events reported on the node based on the\rhealth state. Use ClusterHealthPolicies to override the health policies used\rto evaluate the health."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicyWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ApplicationHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ApplicationHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedApplicationsHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed applications health state objects returned in the\rresult of application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states. Only deployed applications that match the filter\rwill be returned.\\\rAll deployed applications are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of deployed\rapplications with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.servicesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rservices health state objects returned in the result of services health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly services that match the filter are returned. All services are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of services with HealthState value of OK (2) and Warning\r(4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getApplicationHealthUsingPolicyWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationHealthUsingPolicy'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationHealthUsingPolicy'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationHealthUsingPolicy(applicationId, options, optionalCallback)'
    summary: "Gets the health of a Service Fabric application using the specified\rpolicy.\r\rGets the health of a Service Fabric application. Use EventsHealthStateFilter\rto filter the collection of health events reported on the node based on the\rhealth state. Use ClusterHealthPolicies to override the health policies used\rto evaluate the health."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationHealthUsingPolicy(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationHealth} - The deserialized result object.'
        value: '{ApplicationHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedApplicationsHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed applications health state objects returned in the\rresult of application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states. Only deployed applications that match the filter\rwill be returned.\\\rAll deployed applications are used to evaluate the aggregated health state.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value could be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of deployed\rapplications with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.servicesHealthStateFilter
          type:
            - number
          description: "Allows filtering of the\rservices health state objects returned in the result of services health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly services that match the filter are returned. All services are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of services with HealthState value of OK (2) and Warning\r(4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getApplicationHealthUsingPolicy(applicationId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportApplicationHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportApplicationHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportApplicationHealthWithHttpOperationResponse(applicationId,
      healthInformation, options)
    summary: "Sends a health report on the Service Fabric application.\r\rReports health state of the specified Service Fabric application. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Application, which forwards\rto the health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, get application\rhealth and check that the report appears in the HealthEvents section."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportApplicationHealthWithHttpOperationResponse(applicationId,
      healthInformation, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reportApplicationHealthWithHttpOperationResponse(applicationId,
        healthInformation, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportApplicationHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportApplicationHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportApplicationHealth(applicationId, healthInformation, options,
      optionalCallback)
    summary: "Sends a health report on the Service Fabric application.\r\rReports health state of the specified Service Fabric application. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Application, which forwards\rto the health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, get application\rhealth and check that the report appears in the HealthEvents section."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportApplicationHealth(applicationId,
      healthInformation, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportApplicationHealth(applicationId, healthInformation,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startApplicationUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startApplicationUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startApplicationUpgradeWithHttpOperationResponse(applicationId,
      applicationUpgradeDescription, options)
    summary: "Starts upgrading an application in the Service Fabric cluster.\r\rValidates the supplied application upgrade parameters and starts upgrading\rthe application if the parameters are valid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startApplicationUpgradeWithHttpOperationResponse(applicationId,
      applicationUpgradeDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: applicationUpgradeDescription
          type:
            - object
          description: "Parameters for an application\rupgrade."
        - id: applicationUpgradeDescription.name
          type:
            - string
          description: ''
        - id: applicationUpgradeDescription.targetApplicationTypeVersion
          type:
            - string
          description: ''
        - id: applicationUpgradeDescription.parameters
          type:
            - array
          description: ''
        - id: applicationUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible values\rinclude: 'Invalid', 'Rolling'"
        - id: applicationUpgradeDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
          optional: true
        - id: applicationUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type:
            - number
          description: ''
          optional: true
        - id: applicationUpgradeDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: applicationUpgradeDescription.monitoringPolicy
          type:
            - object
          description: ''
          optional: true
        - id: applicationUpgradeDescription.monitoringPolicy.failureAction
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rollback', 'Manual'"
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: applicationUpgradeDescription.applicationHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startApplicationUpgradeWithHttpOperationResponse(applicationId,
        applicationUpgradeDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startApplicationUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#startApplicationUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startApplicationUpgrade(applicationId, applicationUpgradeDescription,
      options, optionalCallback)
    summary: "Starts upgrading an application in the Service Fabric cluster.\r\rValidates the supplied application upgrade parameters and starts upgrading\rthe application if the parameters are valid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startApplicationUpgrade(applicationId,
      applicationUpgradeDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: applicationUpgradeDescription
          type:
            - object
          description: "Parameters for an application\rupgrade."
        - id: applicationUpgradeDescription.name
          type:
            - string
          description: ''
        - id: applicationUpgradeDescription.targetApplicationTypeVersion
          type:
            - string
          description: ''
        - id: applicationUpgradeDescription.parameters
          type:
            - array
          description: ''
        - id: applicationUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible values\rinclude: 'Invalid', 'Rolling'"
        - id: applicationUpgradeDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
          optional: true
        - id: applicationUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type:
            - number
          description: ''
          optional: true
        - id: applicationUpgradeDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: applicationUpgradeDescription.monitoringPolicy
          type:
            - object
          description: ''
          optional: true
        - id: applicationUpgradeDescription.monitoringPolicy.failureAction
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rollback', 'Manual'"
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.monitoringPolicy.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: applicationUpgradeDescription.applicationHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeDescription.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function startApplicationUpgrade(applicationId,
        applicationUpgradeDescription, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationUpgradeWithHttpOperationResponse(applicationId, options)'
    summary: "Gets details for the latest upgrade performed on this application.\r\rReturns information about the state of the latest application upgrade along\rwith details to aid debugging application health issues."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationUpgradeWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ApplicationUpgradeProgressInfo>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ApplicationUpgradeProgressInfo>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getApplicationUpgradeWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationUpgrade(applicationId, options, optionalCallback)'
    summary: "Gets details for the latest upgrade performed on this application.\r\rReturns information about the state of the latest application upgrade along\rwith details to aid debugging application health issues."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationUpgrade(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationUpgradeProgressInfo} - The deserialized result object.'
        value: '{ApplicationUpgradeProgressInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationUpgradeProgressInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationUpgradeProgressInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getApplicationUpgrade(applicationId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#updateApplicationUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#updateApplicationUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateApplicationUpgradeWithHttpOperationResponse(applicationId,
      applicationUpgradeUpdateDescription, options)
    summary: "Updates an ongoing application upgrade in the Service Fabric\rcluster.\r\rUpdates the parameters of an ongoing application upgrade from the ones\rspecified at the time of starting the application upgrade. This may be\rrequired to mitigate stuck application upgrades due to incorrect parameters\ror issues in the application to make progress."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateApplicationUpgradeWithHttpOperationResponse(applicationId,
      applicationUpgradeUpdateDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: applicationUpgradeUpdateDescription
          type:
            - object
          description: "Parameters for updating\ran existing application upgrade."
        - id: applicationUpgradeUpdateDescription.name
          type:
            - string
          description: ''
        - id: applicationUpgradeUpdateDescription.upgradeKind
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rolling'"
        - id: applicationUpgradeUpdateDescription.applicationHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: applicationUpgradeUpdateDescription.updateDescription
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
        - id: applicationUpgradeUpdateDescription.updateDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.replicaSetCheckTimeoutInMilliseconds
          type:
            - number
          description: ''
          optional: true
        - id: applicationUpgradeUpdateDescription.updateDescription.failureAction
          type:
            - string
          description: 'Possible values include: ''Invalid'', ''Rollback'', ''Manual'''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateApplicationUpgradeWithHttpOperationResponse(applicationId,
        applicationUpgradeUpdateDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#updateApplicationUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#updateApplicationUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateApplicationUpgrade(applicationId,
      applicationUpgradeUpdateDescription, options, optionalCallback)
    summary: "Updates an ongoing application upgrade in the Service Fabric\rcluster.\r\rUpdates the parameters of an ongoing application upgrade from the ones\rspecified at the time of starting the application upgrade. This may be\rrequired to mitigate stuck application upgrades due to incorrect parameters\ror issues in the application to make progress."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateApplicationUpgrade(applicationId,
      applicationUpgradeUpdateDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: applicationUpgradeUpdateDescription
          type:
            - object
          description: "Parameters for updating\ran existing application upgrade."
        - id: applicationUpgradeUpdateDescription.name
          type:
            - string
          description: ''
        - id: applicationUpgradeUpdateDescription.upgradeKind
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rolling'"
        - id: applicationUpgradeUpdateDescription.applicationHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: applicationUpgradeUpdateDescription.updateDescription
          type:
            - object
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
        - id: applicationUpgradeUpdateDescription.updateDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.replicaSetCheckTimeoutInMilliseconds
          type:
            - number
          description: ''
          optional: true
        - id: applicationUpgradeUpdateDescription.updateDescription.failureAction
          type:
            - string
          description: 'Possible values include: ''Invalid'', ''Rollback'', ''Manual'''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            applicationUpgradeUpdateDescription.updateDescription.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateApplicationUpgrade(applicationId,
        applicationUpgradeUpdateDescription, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#resumeApplicationUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#resumeApplicationUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      resumeApplicationUpgradeWithHttpOperationResponse(applicationId,
      resumeApplicationUpgradeDescription, options)
    summary: "Resumes upgrading an application in the Service Fabric cluster.\r\rResumes an unmonitored manual Service Fabric application upgrade. Service\rFabric upgrades one upgrade domain at a time. For unmonitored manual\rupgrades, after Service Fabric finishes an upgrade domain, it waits for you\rto call this API before proceeding to the next upgrade domain."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resumeApplicationUpgradeWithHttpOperationResponse(applicationId,
      resumeApplicationUpgradeDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: resumeApplicationUpgradeDescription
          type:
            - object
          description: "Describes the parameters\rfor resuming an application upgrade."
        - id: resumeApplicationUpgradeDescription.upgradeDomainName
          type:
            - string
          description: "The\rname of the upgrade domain in which to resume the upgrade."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        resumeApplicationUpgradeWithHttpOperationResponse(applicationId,
        resumeApplicationUpgradeDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#resumeApplicationUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#resumeApplicationUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      resumeApplicationUpgrade(applicationId,
      resumeApplicationUpgradeDescription, options, optionalCallback)
    summary: "Resumes upgrading an application in the Service Fabric cluster.\r\rResumes an unmonitored manual Service Fabric application upgrade. Service\rFabric upgrades one upgrade domain at a time. For unmonitored manual\rupgrades, after Service Fabric finishes an upgrade domain, it waits for you\rto call this API before proceeding to the next upgrade domain."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resumeApplicationUpgrade(applicationId,
      resumeApplicationUpgradeDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: resumeApplicationUpgradeDescription
          type:
            - object
          description: "Describes the parameters\rfor resuming an application upgrade."
        - id: resumeApplicationUpgradeDescription.upgradeDomainName
          type:
            - string
          description: "The\rname of the upgrade domain in which to resume the upgrade."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function resumeApplicationUpgrade(applicationId,
        resumeApplicationUpgradeDescription, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#rollbackApplicationUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#rollbackApplicationUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      rollbackApplicationUpgradeWithHttpOperationResponse(applicationId,
      options)
    summary: "Starts rolling back the currently on-going upgrade of an\rapplication in the Service Fabric cluster.\r\rStarts rolling back the current application upgrade to the previous version.\rThis API can only be used to rollback the current in-progress upgrade that\ris rolling forward to new version. If the application is not currently being\rupgraded use StartApplicationUpgrade API to upgrade it to desired version\rincluding rolling back to a previous version."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgradeWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        rollbackApplicationUpgradeWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#rollbackApplicationUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#rollbackApplicationUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'rollbackApplicationUpgrade(applicationId, options, optionalCallback)'
    summary: "Starts rolling back the currently on-going upgrade of an\rapplication in the Service Fabric cluster.\r\rStarts rolling back the current application upgrade to the previous version.\rThis API can only be used to rollback the current in-progress upgrade that\ris rolling forward to new version. If the application is not currently being\rupgraded use StartApplicationUpgrade API to upgrade it to desired version\rincluding rolling back to a previous version."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.rollbackApplicationUpgrade(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function rollbackApplicationUpgrade(applicationId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getDeployedApplicationInfoListWithHttpOperationResponse(nodeName, options)'
    summary: "Gets the list of applications deployed on a Service Fabric node.\r\rGets the list of applications deployed on a Service Fabric node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoListWithHttpOperationResponse(nodeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedApplicationInfoListWithHttpOperationResponse(nodeName,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getDeployedApplicationInfoList(nodeName, options, optionalCallback)'
    summary: "Gets the list of applications deployed on a Service Fabric node.\r\rGets the list of applications deployed on a Service Fabric node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoList(nodeName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedApplicationInfoList(nodeName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedApplicationInfoWithHttpOperationResponse(nodeName,
      applicationId, options)
    summary: "Gets the information about an application deployed on a Service\rFabric node.\r\rGets the information about an application deployed on a Service Fabric node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfoWithHttpOperationResponse(nodeName,
      applicationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeployedApplicationInfo>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeployedApplicationInfo>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeployedApplicationInfoWithHttpOperationResponse(nodeName,
        applicationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedApplicationInfo(nodeName, applicationId, options,
      optionalCallback)
    summary: "Gets the information about an application deployed on a Service\rFabric node.\r\rGets the information about an application deployed on a Service Fabric node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationInfo(nodeName,
      applicationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeployedApplicationInfo} - The deserialized result object.'
        value: '{DeployedApplicationInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedApplicationInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedApplicationInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedApplicationInfo(nodeName, applicationId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedApplicationHealthWithHttpOperationResponse(nodeName,
      applicationId, options)
    summary: "Gets the information about health of an application deployed on a\rService Fabric node.\r\rGets the information about health of an application deployed on a Service\rFabric node. Use EventsHealthStateFilter to optionally filter for the\rcollection of HealthEvent objects reported on the deployed application based\ron health state. Use DeployedServicePackagesHealthStateFilter to optionally\rfilter for DeployedServicePackageHealth children based on health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthWithHttpOperationResponse(nodeName,
      applicationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeployedApplicationHealth>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeployedApplicationHealth>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedServicePackagesHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed service package health state objects returned in\rthe result of deployed application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly deployed service packages that match the filter are returned. All\rdeployed service packages are used to evaluate the aggregated health state\rof the deployed application.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value can be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of service\rpackages with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeployedApplicationHealthWithHttpOperationResponse(nodeName,
        applicationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedApplicationHealth(nodeName, applicationId, options,
      optionalCallback)
    summary: "Gets the information about health of an application deployed on a\rService Fabric node.\r\rGets the information about health of an application deployed on a Service\rFabric node. Use EventsHealthStateFilter to optionally filter for the\rcollection of HealthEvent objects reported on the deployed application based\ron health state. Use DeployedServicePackagesHealthStateFilter to optionally\rfilter for DeployedServicePackageHealth children based on health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealth(nodeName,
      applicationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeployedApplicationHealth} - The deserialized result object.'
        value: '{DeployedApplicationHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedApplicationHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedApplicationHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedServicePackagesHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed service package health state objects returned in\rthe result of deployed application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly deployed service packages that match the filter are returned. All\rdeployed service packages are used to evaluate the aggregated health state\rof the deployed application.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value can be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of service\rpackages with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedApplicationHealth(nodeName, applicationId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse(nodeName,
      applicationId, options)
    summary: "Gets the information about health of an application deployed on a\rService Fabric node. using the specified policy.\r\rGets the information about health of an application deployed on a Service\rFabric node using the specified policy. Use EventsHealthStateFilter to\roptionally filter for the collection of HealthEvent objects reported on the\rdeployed application based on health state. Use\rDeployedServicePackagesHealthStateFilter to optionally filter for\rDeployedServicePackageHealth children based on health state. Use\rApplicationHealthPolicy to optionally override the health policies used to\revaluate the health. This API only uses 'ConsiderWarningAsError' field of\rthe ApplicationHealthPolicy. The rest of the fields are ignored while\revaluating the health of the deployed application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse(nodeName,
      applicationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeployedApplicationHealth>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeployedApplicationHealth>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedServicePackagesHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed service package health state objects returned in\rthe result of deployed application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly deployed service packages that match the filter are returned. All\rdeployed service packages are used to evaluate the aggregated health state\rof the deployed application.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value can be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of service\rpackages with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedApplicationHealthUsingPolicyWithHttpOperationResponse(nodeName,
        applicationId, options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthUsingPolicy
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedApplicationHealthUsingPolicy
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedApplicationHealthUsingPolicy(nodeName, applicationId, options,
      optionalCallback)
    summary: "Gets the information about health of an application deployed on a\rService Fabric node. using the specified policy.\r\rGets the information about health of an application deployed on a Service\rFabric node using the specified policy. Use EventsHealthStateFilter to\roptionally filter for the collection of HealthEvent objects reported on the\rdeployed application based on health state. Use\rDeployedServicePackagesHealthStateFilter to optionally filter for\rDeployedServicePackageHealth children based on health state. Use\rApplicationHealthPolicy to optionally override the health policies used to\revaluate the health. This API only uses 'ConsiderWarningAsError' field of\rthe ApplicationHealthPolicy. The rest of the fields are ignored while\revaluating the health of the deployed application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedApplicationHealthUsingPolicy(nodeName,
      applicationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeployedApplicationHealth} - The deserialized result object.'
        value: '{DeployedApplicationHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedApplicationHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedApplicationHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.deployedServicePackagesHealthStateFilter
          type:
            - number
          description: "Allows\rfiltering of the deployed service package health state objects returned in\rthe result of deployed application health query based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly deployed service packages that match the filter are returned. All\rdeployed service packages are used to evaluate the aggregated health state\rof the deployed application.\rIf not specified, all entries are returned.\rThe state values are flag based enumeration, so the value can be a\rcombination of these value obtained using bitwise 'OR' operator.\rFor example, if the provided value is 6 then health state of service\rpackages with HealthState value of OK (2) and Warning (4) are returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedApplicationHealthUsingPolicy(nodeName,
        applicationId, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportDeployedApplicationHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportDeployedApplicationHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportDeployedApplicationHealthWithHttpOperationResponse(nodeName,
      applicationId, healthInformation, options)
    summary: "Sends a health report on the Service Fabric application deployed on\ra Service Fabric node.\r\rReports health state of the application deployed on a Service Fabric node.\rThe report must contain the information about the source of the health\rreport and property on which it is reported.\rThe report is sent to a Service Fabric gateway Service, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, get deployed\rapplication health and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealthWithHttpOperationResponse(nodeName,
      applicationId, healthInformation, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        reportDeployedApplicationHealthWithHttpOperationResponse(nodeName,
        applicationId, healthInformation, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportDeployedApplicationHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportDeployedApplicationHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportDeployedApplicationHealth(nodeName, applicationId,
      healthInformation, options, optionalCallback)
    summary: "Sends a health report on the Service Fabric application deployed on\ra Service Fabric node.\r\rReports health state of the application deployed on a Service Fabric node.\rThe report must contain the information about the source of the health\rreport and property on which it is reported.\rThe report is sent to a Service Fabric gateway Service, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, get deployed\rapplication health and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportDeployedApplicationHealth(nodeName,
      applicationId, healthInformation, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportDeployedApplicationHealth(nodeName, applicationId,
        healthInformation, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationManifestWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationManifestWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getApplicationManifestWithHttpOperationResponse(applicationTypeName,
      applicationTypeVersion, options)
    summary: "Gets the manifest describing an application type.\r\rGets the manifest describing an application type. The response contains the\rapplication manifest XML as a string."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationManifestWithHttpOperationResponse(applicationTypeName,
      applicationTypeVersion, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ApplicationTypeManifest>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ApplicationTypeManifest>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeVersion
          type:
            - string
          description: The version of the application type.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getApplicationManifestWithHttpOperationResponse(applicationTypeName,
        applicationTypeVersion, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationManifest'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationManifest'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getApplicationManifest(applicationTypeName, applicationTypeVersion,
      options, optionalCallback)
    summary: "Gets the manifest describing an application type.\r\rGets the manifest describing an application type. The response contains the\rapplication manifest XML as a string."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationManifest(applicationTypeName,
      applicationTypeVersion, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationTypeManifest} - The deserialized result object.'
        value: '{ApplicationTypeManifest} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationTypeManifest} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationTypeManifest} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationTypeName
          type:
            - string
          description: The name of the application type.
        - id: applicationTypeVersion
          type:
            - string
          description: The version of the application type.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getApplicationManifest(applicationTypeName,
        applicationTypeVersion, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceInfoListWithHttpOperationResponse(applicationId, options)'
    summary: "Gets the information about all services belonging to the\rapplication specified by the application id.\r\rReturns the information about all services belonging to the application\rspecified by the application id."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceInfoListWithHttpOperationResponse(applicationId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedServiceInfoList>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PagedServiceInfoList>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceTypeName
          type:
            - string
          description: "The service type name used to\rfilter the services to query for."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getServiceInfoListWithHttpOperationResponse(applicationId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceInfoList(applicationId, options, optionalCallback)'
    summary: "Gets the information about all services belonging to the\rapplication specified by the application id.\r\rReturns the information about all services belonging to the application\rspecified by the application id."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceInfoList(applicationId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PagedServiceInfoList} - The deserialized result object.'
        value: '{PagedServiceInfoList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedServiceInfoList} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedServiceInfoList} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceTypeName
          type:
            - string
          description: "The service type name used to\rfilter the services to query for."
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getServiceInfoList(applicationId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceInfoWithHttpOperationResponse(applicationId, serviceId, options)'
    summary: "Gets the information about the specific service belonging to a\rService Fabric application.\r\rReturns the information about specified service belonging to the specified\rService Fabric application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceInfoWithHttpOperationResponse(applicationId,
      serviceId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<ServiceInfo>} - The deserialized result object.'
        value: '{HttpOperationResponse<ServiceInfo>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getServiceInfoWithHttpOperationResponse(applicationId,
        serviceId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceInfo(applicationId, serviceId, options, optionalCallback)'
    summary: "Gets the information about the specific service belonging to a\rService Fabric application.\r\rReturns the information about specified service belonging to the specified\rService Fabric application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceInfo(applicationId,
      serviceId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServiceInfo} - The deserialized result object.'
        value: '{ServiceInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getServiceInfo(applicationId, serviceId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getApplicationNameInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getApplicationNameInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationNameInfoWithHttpOperationResponse(serviceId, options)'
    summary: "Gets the name of the Service Fabric application for a service.\r\rThe GetApplicationName endpoint returns the name of the application for the\rspecified service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationNameInfoWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ApplicationNameInfo>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ApplicationNameInfo>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getApplicationNameInfoWithHttpOperationResponse(serviceId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getApplicationNameInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getApplicationNameInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getApplicationNameInfo(serviceId, options, optionalCallback)'
    summary: "Gets the name of the Service Fabric application for a service.\r\rThe GetApplicationName endpoint returns the name of the application for the\rspecified service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getApplicationNameInfo(serviceId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ApplicationNameInfo} - The deserialized result object.'
        value: '{ApplicationNameInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationNameInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ApplicationNameInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getApplicationNameInfo(serviceId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#createServiceWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#createServiceWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      createServiceWithHttpOperationResponse(applicationId, serviceDescription,
      options)
    summary: "Creates the specified service.\r\rCreates the specified service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createServiceWithHttpOperationResponse(applicationId,
      serviceDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceDescription
          type:
            - object
          description: "The information necessary to create a\rservice."
        - id: serviceDescription.applicationName
          type:
            - string
          description: ''
          optional: true
        - id: serviceDescription.serviceName
          type:
            - string
          description: ''
        - id: serviceDescription.serviceTypeName
          type:
            - string
          description: ''
        - id: serviceDescription.initializationData
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.partitionDescription
          type:
            - object
          description: ''
        - id: serviceDescription.partitionDescription.partitionScheme
          type:
            - string
          description: Polymorphic Discriminator
        - id: serviceDescription.placementConstraints
          type:
            - string
          description: "The placement\rconstraints as a string. Placement constraints are boolean expressions on\rnode properties and allow for restricting a service to particular nodes\rbased on the service requirements. For example, to place a service on nodes\rwhere NodeType is blue specify the following: \"NodeColor == blue)\"."
          optional: true
        - id: serviceDescription.correlationScheme
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.serviceLoadMetrics
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.servicePlacementPolicies
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.defaultMoveCost
          type:
            - string
          description: "Possible values\rinclude: 'Zero', 'Low', 'Medium', 'High'"
          optional: true
        - id: serviceDescription.isDefaultMoveCostSpecified
          type:
            - boolean
          description: "Indicates\rif the DefaultMoveCost property is specified."
          optional: true
        - id: serviceDescription.servicePackageActivationMode
          type:
            - string
          description: "Possible\rvalues include: 'SharedProcess', 'ExclusiveProcess'"
          optional: true
        - id: serviceDescription.serviceDnsName
          type:
            - string
          description: "The DNS name of the\rservice. It requires the DNS system service to be enabled in Service Fabric\rcluster."
          optional: true
        - id: serviceDescription.serviceKind
          type:
            - string
          description: Polymorphic Discriminator
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createServiceWithHttpOperationResponse(applicationId,
        serviceDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#createService'
    id: 'azure-servicefabric.ServiceFabricClient#createService'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      createService(applicationId, serviceDescription, options,
      optionalCallback)
    summary: "Creates the specified service.\r\rCreates the specified service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createService(applicationId,
      serviceDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceDescription
          type:
            - object
          description: "The information necessary to create a\rservice."
        - id: serviceDescription.applicationName
          type:
            - string
          description: ''
          optional: true
        - id: serviceDescription.serviceName
          type:
            - string
          description: ''
        - id: serviceDescription.serviceTypeName
          type:
            - string
          description: ''
        - id: serviceDescription.initializationData
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.partitionDescription
          type:
            - object
          description: ''
        - id: serviceDescription.partitionDescription.partitionScheme
          type:
            - string
          description: Polymorphic Discriminator
        - id: serviceDescription.placementConstraints
          type:
            - string
          description: "The placement\rconstraints as a string. Placement constraints are boolean expressions on\rnode properties and allow for restricting a service to particular nodes\rbased on the service requirements. For example, to place a service on nodes\rwhere NodeType is blue specify the following: \"NodeColor == blue)\"."
          optional: true
        - id: serviceDescription.correlationScheme
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.serviceLoadMetrics
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.servicePlacementPolicies
          type:
            - array
          description: ''
          optional: true
        - id: serviceDescription.defaultMoveCost
          type:
            - string
          description: "Possible values\rinclude: 'Zero', 'Low', 'Medium', 'High'"
          optional: true
        - id: serviceDescription.isDefaultMoveCostSpecified
          type:
            - boolean
          description: "Indicates\rif the DefaultMoveCost property is specified."
          optional: true
        - id: serviceDescription.servicePackageActivationMode
          type:
            - string
          description: "Possible\rvalues include: 'SharedProcess', 'ExclusiveProcess'"
          optional: true
        - id: serviceDescription.serviceDnsName
          type:
            - string
          description: "The DNS name of the\rservice. It requires the DNS system service to be enabled in Service Fabric\rcluster."
          optional: true
        - id: serviceDescription.serviceKind
          type:
            - string
          description: Polymorphic Discriminator
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createService(applicationId, serviceDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#createServiceFromTemplateWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#createServiceFromTemplateWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      createServiceFromTemplateWithHttpOperationResponse(applicationId,
      serviceFromTemplateDescription, options)
    summary: "Creates a Service Fabric service from the service template defined\rin the application manifest.\r\rCreates a Service Fabric service from the service template defined in the\rapplication manifest."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createServiceFromTemplateWithHttpOperationResponse(applicationId,
      serviceFromTemplateDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceFromTemplateDescription
          type:
            - object
          description: "Describes the service that\rneeds to be created from the template defined in the application manifest."
        - id: serviceFromTemplateDescription.applicationName
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription.serviceName
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription.serviceTypeName
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription.initializationData
          type:
            - array
          description: ''
          optional: true
        - id: serviceFromTemplateDescription.servicePackageActivationMode
          type:
            - string
          description: "Possible\rvalues include: 'SharedProcess', 'ExclusiveProcess'"
          optional: true
        - id: serviceFromTemplateDescription.serviceDnsName
          type:
            - string
          description: "The DNS name\rof the service. It requires the DNS system service to be enabled in Service\rFabric cluster."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createServiceFromTemplateWithHttpOperationResponse(applicationId,
        serviceFromTemplateDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#createServiceFromTemplate'
    id: 'azure-servicefabric.ServiceFabricClient#createServiceFromTemplate'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      createServiceFromTemplate(applicationId, serviceFromTemplateDescription,
      options, optionalCallback)
    summary: "Creates a Service Fabric service from the service template defined\rin the application manifest.\r\rCreates a Service Fabric service from the service template defined in the\rapplication manifest."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createServiceFromTemplate(applicationId,
      serviceFromTemplateDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: serviceFromTemplateDescription
          type:
            - object
          description: "Describes the service that\rneeds to be created from the template defined in the application manifest."
        - id: serviceFromTemplateDescription.applicationName
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription.serviceName
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription.serviceTypeName
          type:
            - string
          description: ''
        - id: serviceFromTemplateDescription.initializationData
          type:
            - array
          description: ''
          optional: true
        - id: serviceFromTemplateDescription.servicePackageActivationMode
          type:
            - string
          description: "Possible\rvalues include: 'SharedProcess', 'ExclusiveProcess'"
          optional: true
        - id: serviceFromTemplateDescription.serviceDnsName
          type:
            - string
          description: "The DNS name\rof the service. It requires the DNS system service to be enabled in Service\rFabric cluster."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createServiceFromTemplate(applicationId,
        serviceFromTemplateDescription, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#deleteServiceWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#deleteServiceWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'deleteServiceWithHttpOperationResponse(serviceId, options)'
    summary: "Deletes an existing Service Fabric service.\r\rDeletes an existing Service Fabric service. A service must be created before\rit can be deleted. By default Service Fabric will try to close service\rreplicas in a graceful manner and then delete the service. However if\rservice is having issues closing the replica gracefully, the delete\roperation may take a long time or get stuck. Use the optional ForceRemove\rflag to skip the graceful close sequence and forcefully delete the service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteServiceWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.forceRemove
          type:
            - boolean
          description: "Remove a Service Fabric application\ror service forcefully without going through the graceful shutdown sequence.\rThis parameter can be used to forcefully delete an application or service\rfor which delete is timing out due to issues in the service code that\rprevents graceful close of replicas."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function deleteServiceWithHttpOperationResponse(serviceId, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#deleteService'
    id: 'azure-servicefabric.ServiceFabricClient#deleteService'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'deleteService(serviceId, options, optionalCallback)'
    summary: "Deletes an existing Service Fabric service.\r\rDeletes an existing Service Fabric service. A service must be created before\rit can be deleted. By default Service Fabric will try to close service\rreplicas in a graceful manner and then delete the service. However if\rservice is having issues closing the replica gracefully, the delete\roperation may take a long time or get stuck. Use the optional ForceRemove\rflag to skip the graceful close sequence and forcefully delete the service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteService(serviceId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.forceRemove
          type:
            - boolean
          description: "Remove a Service Fabric application\ror service forcefully without going through the graceful shutdown sequence.\rThis parameter can be used to forcefully delete an application or service\rfor which delete is timing out due to issues in the service code that\rprevents graceful close of replicas."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteService(serviceId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#updateServiceWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#updateServiceWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateServiceWithHttpOperationResponse(serviceId,
      serviceUpdateDescription, options)
    summary: "Updates the specified service using the given update description.\r\rUpdates the specified service using the given update description."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateServiceWithHttpOperationResponse(serviceId,
      serviceUpdateDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: serviceUpdateDescription
          type:
            - object
          description: "The information necessary to update\ra service."
        - id: serviceUpdateDescription.flags
          type:
            - string
          description: "Flags indicating whether\rother properties are set. Each of the associated properties corresponds to a\rflag, specified below, which, if set, indicate that the property is\rspecified.\rThis property can be a combination of those flags obtained using bitwise\r'OR' operator.\rFor example, if the provided value is 6 then the flags for\rReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.\r\r- None - Does not indicate any other properties are set. The value is zero.\r- TargetReplicaSetSize/InstanceCount - Indicates whether the\rTargetReplicaSetSize property (for Stateful services) or the InstanceCount\rproperty (for Stateless services) is set. The value is 1.\r- ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration\rproperty is set. The value is  2.\r- QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is\rset. The value is 4.\r- StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration\rproperty is set. The value is 8.\r- MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The\rvalue is 16.\r- PlacementConstraints - Indicates the PlacementConstraints property is set.\rThe value is 32.\r- PlacementPolicyList - Indicates the ServicePlacementPolicies property is\rset. The value is 64.\r- Correlation - Indicates the CorrelationScheme property is set. The value\ris 128.\r- Metrics - Indicates the ServiceLoadMetrics property is set. The value is\r256.\r- DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value\ris 512."
          optional: true
        - id: serviceUpdateDescription.placementConstraints
          type:
            - string
          description: "The\rplacement constraints as a string. Placement constraints are boolean\rexpressions on node properties and allow for restricting a service to\rparticular nodes based on the service requirements. For example, to place a\rservice on nodes where NodeType is blue specify the following: \"NodeColor ==\rblue)\"."
          optional: true
        - id: serviceUpdateDescription.correlationScheme
          type:
            - array
          description: ''
          optional: true
        - id: serviceUpdateDescription.loadMetrics
          type:
            - array
          description: ''
          optional: true
        - id: serviceUpdateDescription.servicePlacementPolicies
          type:
            - array
          description: ''
          optional: true
        - id: serviceUpdateDescription.defaultMoveCost
          type:
            - string
          description: "Possible values\rinclude: 'Zero', 'Low', 'Medium', 'High'"
          optional: true
        - id: serviceUpdateDescription.serviceKind
          type:
            - string
          description: "Polymorphic\rDiscriminator"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateServiceWithHttpOperationResponse(serviceId,
        serviceUpdateDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#updateService'
    id: 'azure-servicefabric.ServiceFabricClient#updateService'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateService(serviceId, serviceUpdateDescription, options,
      optionalCallback)
    summary: "Updates the specified service using the given update description.\r\rUpdates the specified service using the given update description."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateService(serviceId,
      serviceUpdateDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: serviceUpdateDescription
          type:
            - object
          description: "The information necessary to update\ra service."
        - id: serviceUpdateDescription.flags
          type:
            - string
          description: "Flags indicating whether\rother properties are set. Each of the associated properties corresponds to a\rflag, specified below, which, if set, indicate that the property is\rspecified.\rThis property can be a combination of those flags obtained using bitwise\r'OR' operator.\rFor example, if the provided value is 6 then the flags for\rReplicaRestartWaitDuration (2) and QuorumLossWaitDuration (4) are set.\r\r- None - Does not indicate any other properties are set. The value is zero.\r- TargetReplicaSetSize/InstanceCount - Indicates whether the\rTargetReplicaSetSize property (for Stateful services) or the InstanceCount\rproperty (for Stateless services) is set. The value is 1.\r- ReplicaRestartWaitDuration - Indicates the ReplicaRestartWaitDuration\rproperty is set. The value is  2.\r- QuorumLossWaitDuration - Indicates the QuorumLossWaitDuration property is\rset. The value is 4.\r- StandByReplicaKeepDuration - Indicates the StandByReplicaKeepDuration\rproperty is set. The value is 8.\r- MinReplicaSetSize - Indicates the MinReplicaSetSize property is set. The\rvalue is 16.\r- PlacementConstraints - Indicates the PlacementConstraints property is set.\rThe value is 32.\r- PlacementPolicyList - Indicates the ServicePlacementPolicies property is\rset. The value is 64.\r- Correlation - Indicates the CorrelationScheme property is set. The value\ris 128.\r- Metrics - Indicates the ServiceLoadMetrics property is set. The value is\r256.\r- DefaultMoveCost - Indicates the DefaultMoveCost property is set. The value\ris 512."
          optional: true
        - id: serviceUpdateDescription.placementConstraints
          type:
            - string
          description: "The\rplacement constraints as a string. Placement constraints are boolean\rexpressions on node properties and allow for restricting a service to\rparticular nodes based on the service requirements. For example, to place a\rservice on nodes where NodeType is blue specify the following: \"NodeColor ==\rblue)\"."
          optional: true
        - id: serviceUpdateDescription.correlationScheme
          type:
            - array
          description: ''
          optional: true
        - id: serviceUpdateDescription.loadMetrics
          type:
            - array
          description: ''
          optional: true
        - id: serviceUpdateDescription.servicePlacementPolicies
          type:
            - array
          description: ''
          optional: true
        - id: serviceUpdateDescription.defaultMoveCost
          type:
            - string
          description: "Possible values\rinclude: 'Zero', 'Low', 'Medium', 'High'"
          optional: true
        - id: serviceUpdateDescription.serviceKind
          type:
            - string
          description: "Polymorphic\rDiscriminator"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateService(serviceId, serviceUpdateDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceDescriptionWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceDescriptionWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceDescriptionWithHttpOperationResponse(serviceId, options)'
    summary: "Gets the description of an existing Service Fabric service.\r\rGets the description of an existing Service Fabric service. A service must\rbe created before its description can be obtained."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceDescriptionWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServiceDescription>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ServiceDescription>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getServiceDescriptionWithHttpOperationResponse(serviceId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceDescription'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceDescription'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceDescription(serviceId, options, optionalCallback)'
    summary: "Gets the description of an existing Service Fabric service.\r\rGets the description of an existing Service Fabric service. A service must\rbe created before its description can be obtained."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceDescription(serviceId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServiceDescription} - The deserialized result object.'
        value: '{ServiceDescription} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceDescription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceDescription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getServiceDescription(serviceId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceHealthWithHttpOperationResponse(serviceId, options)'
    summary: "Gets the health of the specified Service Fabric service.\r\rGets the health information of the specified service.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the service based on the health state.\rUse PartitionsHealthStateFilter to filter the collection of partitions\rreturned.\rIf you specify a service that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceHealthWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServiceHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ServiceHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.partitionsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe partitions health state objects returned in the result of service health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly partitions that match the filter are returned. All partitions are used\rto evaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of partitions with HealthState value of OK (2) and\rWarning (4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getServiceHealthWithHttpOperationResponse(serviceId, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceHealth(serviceId, options, optionalCallback)'
    summary: "Gets the health of the specified Service Fabric service.\r\rGets the health information of the specified service.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the service based on the health state.\rUse PartitionsHealthStateFilter to filter the collection of partitions\rreturned.\rIf you specify a service that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceHealth(serviceId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServiceHealth} - The deserialized result object.'
        value: '{ServiceHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.partitionsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe partitions health state objects returned in the result of service health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly partitions that match the filter are returned. All partitions are used\rto evaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of partitions with HealthState value of OK (2) and\rWarning (4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getServiceHealth(serviceId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceHealthUsingPolicyWithHttpOperationResponse(serviceId, options)'
    summary: "Gets the health of the specified Service Fabric service, by using\rthe specified health policy.\r\rGets the health information of the specified service.\rIf the application health policy is specified, the health evaluation uses it\rto get the aggregated health state.\rIf the policy is not specified, the health evaluation uses the application\rhealth policy defined in the application manifest, or the default health\rpolicy, if no policy is defined in the manifest.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the service based on the health state.\rUse PartitionsHealthStateFilter to filter the collection of partitions\rreturned.\rIf you specify a service that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicyWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServiceHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ServiceHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.partitionsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe partitions health state objects returned in the result of service health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly partitions that match the filter are returned. All partitions are used\rto evaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of partitions with HealthState value of OK (2) and\rWarning (4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getServiceHealthUsingPolicyWithHttpOperationResponse(serviceId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceHealthUsingPolicy'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceHealthUsingPolicy'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceHealthUsingPolicy(serviceId, options, optionalCallback)'
    summary: "Gets the health of the specified Service Fabric service, by using\rthe specified health policy.\r\rGets the health information of the specified service.\rIf the application health policy is specified, the health evaluation uses it\rto get the aggregated health state.\rIf the policy is not specified, the health evaluation uses the application\rhealth policy defined in the application manifest, or the default health\rpolicy, if no policy is defined in the manifest.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the service based on the health state.\rUse PartitionsHealthStateFilter to filter the collection of partitions\rreturned.\rIf you specify a service that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceHealthUsingPolicy(serviceId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServiceHealth} - The deserialized result object.'
        value: '{ServiceHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.partitionsHealthStateFilter
          type:
            - number
          description: "Allows filtering of\rthe partitions health state objects returned in the result of service health\rquery based on their health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly partitions that match the filter are returned. All partitions are used\rto evaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value\robtained using bitwise 'OR' operator. For example, if the provided value is\r6 then health state of partitions with HealthState value of OK (2) and\rWarning (4) will be returned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getServiceHealthUsingPolicy(serviceId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportServiceHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportServiceHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportServiceHealthWithHttpOperationResponse(serviceId, healthInformation,
      options)
    summary: "Sends a health report on the Service Fabric service.\r\rReports health state of the specified Service Fabric service. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Service, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetServiceHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportServiceHealthWithHttpOperationResponse(serviceId,
      healthInformation, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reportServiceHealthWithHttpOperationResponse(serviceId,
        healthInformation, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportServiceHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportServiceHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportServiceHealth(serviceId, healthInformation, options,
      optionalCallback)
    summary: "Sends a health report on the Service Fabric service.\r\rReports health state of the specified Service Fabric service. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Service, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetServiceHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportServiceHealth(serviceId,
      healthInformation, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportServiceHealth(serviceId, healthInformation, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#resolveServiceWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#resolveServiceWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'resolveServiceWithHttpOperationResponse(serviceId, options)'
    summary: "Resolve a Service Fabric partition.\r\rResolve a Service Fabric service partition, to get the endpoints of the\rservice replicas."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resolveServiceWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ResolvedServicePartition>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ResolvedServicePartition>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.partitionKeyType
          type:
            - number
          description: "Key type for the partition. This\rparameter is required if the partition scheme for the service is Int64Range\ror Named. The possible values are following.\r- None (1) - Indicates that the the PartitionKeyValue parameter is not\rspecified. This is valid for the partitions with partitioning scheme as\rSingleton. This is the default value. The value is 1.\r- Int64Range (2) - Indicates that the the PartitionKeyValue parameter is an\rint64 partition key. This is valid for the partitions with partitioning\rscheme as Int64Range. The value is 2.\r- Named (3) - Indicates that the the PartitionKeyValue parameter is a name\rof the partition. This is valid for the partitions with partitioning scheme\ras Named. The value is 3."
          optional: true
        - id: options.partitionKeyValue
          type:
            - string
          description: "Partition key. This is required\rif the partition scheme for the service is Int64Range or Named."
          optional: true
        - id: options.previousRspVersion
          type:
            - string
          description: "The value in the Version field\rof the response that was received previously. This is required if the user\rknows that the result that was got previously is stale."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function resolveServiceWithHttpOperationResponse(serviceId, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#resolveService'
    id: 'azure-servicefabric.ServiceFabricClient#resolveService'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'resolveService(serviceId, options, optionalCallback)'
    summary: "Resolve a Service Fabric partition.\r\rResolve a Service Fabric service partition, to get the endpoints of the\rservice replicas."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resolveService(serviceId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ResolvedServicePartition} - The deserialized result object.'
        value: '{ResolvedServicePartition} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResolvedServicePartition} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ResolvedServicePartition} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.partitionKeyType
          type:
            - number
          description: "Key type for the partition. This\rparameter is required if the partition scheme for the service is Int64Range\ror Named. The possible values are following.\r- None (1) - Indicates that the the PartitionKeyValue parameter is not\rspecified. This is valid for the partitions with partitioning scheme as\rSingleton. This is the default value. The value is 1.\r- Int64Range (2) - Indicates that the the PartitionKeyValue parameter is an\rint64 partition key. This is valid for the partitions with partitioning\rscheme as Int64Range. The value is 2.\r- Named (3) - Indicates that the the PartitionKeyValue parameter is a name\rof the partition. This is valid for the partitions with partitioning scheme\ras Named. The value is 3."
          optional: true
        - id: options.partitionKeyValue
          type:
            - string
          description: "Partition key. This is required\rif the partition scheme for the service is Int64Range or Named."
          optional: true
        - id: options.previousRspVersion
          type:
            - string
          description: "The value in the Version field\rof the response that was received previously. This is required if the user\rknows that the result that was got previously is stale."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function resolveService(serviceId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getPartitionInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getPartitionInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionInfoListWithHttpOperationResponse(serviceId, options)'
    summary: "Gets the list of partitions of a Service Fabric service.\r\rGets the list of partitions of a Service Fabric service. The response\rinclude the partition id, partitioning scheme information, keys supported by\rthe partition, status, health and other details about the partition."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionInfoListWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedServicePartitionInfoList>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<PagedServicePartitionInfoList>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getPartitionInfoListWithHttpOperationResponse(serviceId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getPartitionInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getPartitionInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionInfoList(serviceId, options, optionalCallback)'
    summary: "Gets the list of partitions of a Service Fabric service.\r\rGets the list of partitions of a Service Fabric service. The response\rinclude the partition id, partitioning scheme information, keys supported by\rthe partition, status, health and other details about the partition."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionInfoList(serviceId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PagedServicePartitionInfoList} - The deserialized result object.'
        value: '{PagedServicePartitionInfoList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedServicePartitionInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedServicePartitionInfoList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getPartitionInfoList(serviceId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getPartitionInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getPartitionInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionInfoWithHttpOperationResponse(partitionId, options)'
    summary: "Gets the information about a Service Fabric partition.\r\rThe Partitions endpoint returns information about the specified partition.\rThe response include the partition id, partitioning scheme information, keys\rsupported by the partition, status, health and other details about the\rpartition."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionInfoWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServicePartitionInfo>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ServicePartitionInfo>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getPartitionInfoWithHttpOperationResponse(partitionId, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getPartitionInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getPartitionInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionInfo(partitionId, options, optionalCallback)'
    summary: "Gets the information about a Service Fabric partition.\r\rThe Partitions endpoint returns information about the specified partition.\rThe response include the partition id, partitioning scheme information, keys\rsupported by the partition, status, health and other details about the\rpartition."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionInfo(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServicePartitionInfo} - The deserialized result object.'
        value: '{ServicePartitionInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServicePartitionInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServicePartitionInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getPartitionInfo(partitionId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getServiceNameInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getServiceNameInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceNameInfoWithHttpOperationResponse(partitionId, options)'
    summary: "Gets the name of the Service Fabric service for a partition.\r\rThe GetServiceName endpoint returns the name of the service for the\rspecified partition."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceNameInfoWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ServiceNameInfo>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ServiceNameInfo>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getServiceNameInfoWithHttpOperationResponse(partitionId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getServiceNameInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getServiceNameInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getServiceNameInfo(partitionId, options, optionalCallback)'
    summary: "Gets the name of the Service Fabric service for a partition.\r\rThe GetServiceName endpoint returns the name of the service for the\rspecified partition."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getServiceNameInfo(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ServiceNameInfo} - The deserialized result object.'
        value: '{ServiceNameInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceNameInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ServiceNameInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getServiceNameInfo(partitionId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getPartitionHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getPartitionHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionHealthWithHttpOperationResponse(partitionId, options)'
    summary: "Gets the health of the specified Service Fabric partition.\r\rGets the health information of the specified partition.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the service based on the health state.\rUse ReplicasHealthStateFilter to filter the collection of ReplicaHealthState\robjects on the partition.\rIf you specify a partition that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionHealthWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PartitionHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<PartitionHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.replicasHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of ReplicaHealthState objects on the partition. The value can be\robtained from members or bitwise operations on members of HealthStateFilter.\rOnly replicas that match the filter will be returned. All replicas will be\rused to evaluate the aggregated health state. If not specified, all entries\rwill be returned.The state values are flag based enumeration, so the value\rcould be a combination of these value obtained using bitwise 'OR' operator.\rFor example, If the provided value is 6 then all of the events with\rHealthState value of OK (2) and Warning (4) will be returned. The possible\rvalues for this parameter include integer value of one of the following\rhealth states.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getPartitionHealthWithHttpOperationResponse(partitionId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getPartitionHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getPartitionHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionHealth(partitionId, options, optionalCallback)'
    summary: "Gets the health of the specified Service Fabric partition.\r\rGets the health information of the specified partition.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the service based on the health state.\rUse ReplicasHealthStateFilter to filter the collection of ReplicaHealthState\robjects on the partition.\rIf you specify a partition that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionHealth(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PartitionHealth} - The deserialized result object.'
        value: '{PartitionHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.replicasHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of ReplicaHealthState objects on the partition. The value can be\robtained from members or bitwise operations on members of HealthStateFilter.\rOnly replicas that match the filter will be returned. All replicas will be\rused to evaluate the aggregated health state. If not specified, all entries\rwill be returned.The state values are flag based enumeration, so the value\rcould be a combination of these value obtained using bitwise 'OR' operator.\rFor example, If the provided value is 6 then all of the events with\rHealthState value of OK (2) and Warning (4) will be returned. The possible\rvalues for this parameter include integer value of one of the following\rhealth states.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getPartitionHealth(partitionId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getPartitionHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getPartitionHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getPartitionHealthUsingPolicyWithHttpOperationResponse(partitionId,
      options)
    summary: "Gets the health of the specified Service Fabric partition, by using\rthe specified health policy.\r\rGets the health information of the specified partition.\rIf the application health policy is specified, the health evaluation uses it\rto get the aggregated health state.\rIf the policy is not specified, the health evaluation uses the application\rhealth policy defined in the application manifest, or the default health\rpolicy, if no policy is defined in the manifest.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the partition based on the health state.\rUse ReplicasHealthStateFilter to filter the collection of ReplicaHealthState\robjects on the partition. Use ApplicationHealthPolicy in the POST body to\roverride the health policies used to evaluate the health.\rIf you specify a partition that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicyWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PartitionHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<PartitionHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.replicasHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of ReplicaHealthState objects on the partition. The value can be\robtained from members or bitwise operations on members of HealthStateFilter.\rOnly replicas that match the filter will be returned. All replicas will be\rused to evaluate the aggregated health state. If not specified, all entries\rwill be returned.The state values are flag based enumeration, so the value\rcould be a combination of these value obtained using bitwise 'OR' operator.\rFor example, If the provided value is 6 then all of the events with\rHealthState value of OK (2) and Warning (4) will be returned. The possible\rvalues for this parameter include integer value of one of the following\rhealth states.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getPartitionHealthUsingPolicyWithHttpOperationResponse(partitionId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getPartitionHealthUsingPolicy'
    id: 'azure-servicefabric.ServiceFabricClient#getPartitionHealthUsingPolicy'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionHealthUsingPolicy(partitionId, options, optionalCallback)'
    summary: "Gets the health of the specified Service Fabric partition, by using\rthe specified health policy.\r\rGets the health information of the specified partition.\rIf the application health policy is specified, the health evaluation uses it\rto get the aggregated health state.\rIf the policy is not specified, the health evaluation uses the application\rhealth policy defined in the application manifest, or the default health\rpolicy, if no policy is defined in the manifest.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the partition based on the health state.\rUse ReplicasHealthStateFilter to filter the collection of ReplicaHealthState\robjects on the partition. Use ApplicationHealthPolicy in the POST body to\roverride the health policies used to evaluate the health.\rIf you specify a partition that does not exist in the health store, this\rcmdlet returns an error."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionHealthUsingPolicy(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PartitionHealth} - The deserialized result object.'
        value: '{PartitionHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.replicasHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of ReplicaHealthState objects on the partition. The value can be\robtained from members or bitwise operations on members of HealthStateFilter.\rOnly replicas that match the filter will be returned. All replicas will be\rused to evaluate the aggregated health state. If not specified, all entries\rwill be returned.The state values are flag based enumeration, so the value\rcould be a combination of these value obtained using bitwise 'OR' operator.\rFor example, If the provided value is 6 then all of the events with\rHealthState value of OK (2) and Warning (4) will be returned. The possible\rvalues for this parameter include integer value of one of the following\rhealth states.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.excludeHealthStatistics
          type:
            - boolean
          description: "Indicates whether the\rhealth statistics should be returned as part of the query result. False by\rdefault.\rThe statistics show the number of children entities in health state Ok,\rWarning, and Error."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getPartitionHealthUsingPolicy(partitionId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportPartitionHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportPartitionHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportPartitionHealthWithHttpOperationResponse(partitionId,
      healthInformation, options)
    summary: "Sends a health report on the Service Fabric partition.\r\rReports health state of the specified Service Fabric partition. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Partition, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetPartitionHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportPartitionHealthWithHttpOperationResponse(partitionId,
      healthInformation, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reportPartitionHealthWithHttpOperationResponse(partitionId,
        healthInformation, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportPartitionHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportPartitionHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportPartitionHealth(partitionId, healthInformation, options,
      optionalCallback)
    summary: "Sends a health report on the Service Fabric partition.\r\rReports health state of the specified Service Fabric partition. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Partition, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetPartitionHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportPartitionHealth(partitionId,
      healthInformation, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportPartitionHealth(partitionId, healthInformation, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getPartitionLoadInformationWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getPartitionLoadInformationWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionLoadInformationWithHttpOperationResponse(partitionId, options)'
    summary: "Gets the load of the specified Service Fabric partition.\r\rReturns information about the specified partition.\rThe response includes a list of load information.\rEach information includes load metric name, value and last reported time in\rUTC."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionLoadInformationWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PartitionLoadInformation>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PartitionLoadInformation>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getPartitionLoadInformationWithHttpOperationResponse(partitionId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getPartitionLoadInformation'
    id: 'azure-servicefabric.ServiceFabricClient#getPartitionLoadInformation'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getPartitionLoadInformation(partitionId, options, optionalCallback)'
    summary: "Gets the load of the specified Service Fabric partition.\r\rReturns information about the specified partition.\rThe response includes a list of load information.\rEach information includes load metric name, value and last reported time in\rUTC."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionLoadInformation(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PartitionLoadInformation} - The deserialized result object.'
        value: '{PartitionLoadInformation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionLoadInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionLoadInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getPartitionLoadInformation(partitionId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#resetPartitionLoadWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#resetPartitionLoadWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'resetPartitionLoadWithHttpOperationResponse(partitionId, options)'
    summary: "Resets the current load of a Service Fabric partition.\r\rResets the current load of a Service Fabric partition to the default load\rfor the service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resetPartitionLoadWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function resetPartitionLoadWithHttpOperationResponse(partitionId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#resetPartitionLoad'
    id: 'azure-servicefabric.ServiceFabricClient#resetPartitionLoad'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'resetPartitionLoad(partitionId, options, optionalCallback)'
    summary: "Resets the current load of a Service Fabric partition.\r\rResets the current load of a Service Fabric partition to the default load\rfor the service."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.resetPartitionLoad(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function resetPartitionLoad(partitionId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#recoverPartitionWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#recoverPartitionWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'recoverPartitionWithHttpOperationResponse(partitionId, options)'
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover a specific partition which is currently stuck in quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover a\rspecific partition which is currently stuck in quorum loss. This operation\rshould only be performed if it is known that the replicas that are down\rcannot be recovered. Incorrect use of this API can cause potential data\rloss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverPartitionWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function recoverPartitionWithHttpOperationResponse(partitionId, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#recoverPartition'
    id: 'azure-servicefabric.ServiceFabricClient#recoverPartition'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'recoverPartition(partitionId, options, optionalCallback)'
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover a specific partition which is currently stuck in quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover a\rspecific partition which is currently stuck in quorum loss. This operation\rshould only be performed if it is known that the replicas that are down\rcannot be recovered. Incorrect use of this API can cause potential data\rloss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverPartition(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function recoverPartition(partitionId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#recoverServicePartitionsWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#recoverServicePartitionsWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'recoverServicePartitionsWithHttpOperationResponse(serviceId, options)'
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover the specified service which is currently stuck in quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover\rthe specified service which is currently stuck in quorum loss. This\roperation should only be performed if it is known that the replicas that are\rdown cannot be recovered. Incorrect use of this API can cause potential data\rloss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverServicePartitionsWithHttpOperationResponse(serviceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function recoverServicePartitionsWithHttpOperationResponse(serviceId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#recoverServicePartitions'
    id: 'azure-servicefabric.ServiceFabricClient#recoverServicePartitions'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'recoverServicePartitions(serviceId, options, optionalCallback)'
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover the specified service which is currently stuck in quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover\rthe specified service which is currently stuck in quorum loss. This\roperation should only be performed if it is known that the replicas that are\rdown cannot be recovered. Incorrect use of this API can cause potential data\rloss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverServicePartitions(serviceId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function recoverServicePartitions(serviceId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#recoverSystemPartitionsWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#recoverSystemPartitionsWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: recoverSystemPartitionsWithHttpOperationResponse(options)
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover the system services which are currently stuck in quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover\rthe system services which are currently stuck in quorum loss. This operation\rshould only be performed if it is known that the replicas that are down\rcannot be recovered. Incorrect use of this API can cause potential data\rloss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverSystemPartitionsWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function recoverSystemPartitionsWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#recoverSystemPartitions'
    id: 'azure-servicefabric.ServiceFabricClient#recoverSystemPartitions'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'recoverSystemPartitions(options, optionalCallback)'
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover the system services which are currently stuck in quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover\rthe system services which are currently stuck in quorum loss. This operation\rshould only be performed if it is known that the replicas that are down\rcannot be recovered. Incorrect use of this API can cause potential data\rloss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverSystemPartitions(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function recoverSystemPartitions(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#recoverAllPartitionsWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#recoverAllPartitionsWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: recoverAllPartitionsWithHttpOperationResponse(options)
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover any services (including system services) which are currently stuck\rin quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover\rany services (including system services) which are currently stuck in quorum\rloss. This operation should only be performed if it is known that the\rreplicas that are down cannot be recovered. Incorrect use of this API can\rcause potential data loss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverAllPartitionsWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function recoverAllPartitionsWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#recoverAllPartitions'
    id: 'azure-servicefabric.ServiceFabricClient#recoverAllPartitions'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'recoverAllPartitions(options, optionalCallback)'
    summary: "Indicates to the Service Fabric cluster that it should attempt to\rrecover any services (including system services) which are currently stuck\rin quorum loss.\r\rIndicates to the Service Fabric cluster that it should attempt to recover\rany services (including system services) which are currently stuck in quorum\rloss. This operation should only be performed if it is known that the\rreplicas that are down cannot be recovered. Incorrect use of this API can\rcause potential data loss."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.recoverAllPartitions(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function recoverAllPartitions(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#createRepairTaskWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#createRepairTaskWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'createRepairTaskWithHttpOperationResponse(repairTask, options)'
    summary: "Creates a new repair task.\r\rFor clusters that have the Repair Manager Service configured,\rthis API provides a way to create repair tasks that run automatically or\rmanually.\rFor repair tasks that run automatically, an appropriate repair executor\rmust be running for each repair action to run automatically.\rThese are currently only available in specially-configured Azure Cloud\rServices.\r\rTo create a manual repair task, provide the set of impacted node names and\rthe\rexpected impact. When the state of the created repair task changes to\rapproved,\ryou can safely perform repair actions on those nodes.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createRepairTaskWithHttpOperationResponse(repairTask,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: repairTask
          type:
            - object
          description: "Describes the repair task to be created or\rupdated."
        - id: repairTask.taskId
          type:
            - string
          description: The ID of the repair task.
        - id: repairTask.version
          type:
            - string
          description: "The version of the repair task.\rWhen creating a new repair task, the version must be set to zero.  When\rupdating a repair task,\rthe version is used for optimistic concurrency checks.  If the version is\rset to zero, the update will not check for write conflicts.  If the version\ris set to a non-zero value, then the\rupdate will only succeed if the actual current version of the repair task\rmatches this value."
          optional: true
        - id: repairTask.description
          type:
            - string
          description: "A description of the purpose of the\rrepair task, or other informational details.\rMay be set when the repair task is created, and is immutable once set."
          optional: true
        - id: repairTask.state
          type:
            - string
          description: "The workflow state of the repair task.\rValid initial states are Created, Claimed, and Preparing.\r\r- Invalid - Indicates that the repair task state is invalid. All Service\rFabric enumerations have the invalid value.\r- Created - Indicates that the repair task has been created.\r- Claimed - Indicates that the repair task has been claimed by a repair\rexecutor.\r- Preparing - Indicates that the Repair Manager is preparing the system to\rhandle the impact of the repair task, usually by taking resources offline\rgracefully.\r- Approved - Indicates that the repair task has been approved by the Repair\rManager and is safe to execute.\r- Executing - Indicates that execution of the repair task is in progress.\r- Restoring - Indicates that the Repair Manager is restoring the system to\rits pre-repair state, usually by bringing resources back online.\r- Completed - Indicates that the repair task has completed, and no further\rstate changes will occur.\r. Possible values include: 'Invalid', 'Created', 'Claimed', 'Preparing',\r'Approved', 'Executing', 'Restoring', 'Completed'"
        - id: repairTask.flags
          type:
            - number
          description: "A bitwise-OR of the following values,\rwhich gives additional details about the status of the repair task.\r- 1 - Cancellation of the repair has been requested\r- 2 - Abort of the repair has been requested\r- 4 - Approval of the repair was forced via client request"
          optional: true
        - id: repairTask.action
          type:
            - string
          description: "The requested repair action. Must be\rspecified when the repair task is created, and is immutable once set."
        - id: repairTask.target
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.target.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.executor
          type:
            - string
          description: "The name of the repair executor. Must\rbe specified in Claimed and later states, and is immutable once set."
          optional: true
        - id: repairTask.executorData
          type:
            - string
          description: "A data string that the repair\rexecutor can use to store its internal state."
          optional: true
        - id: repairTask.impact
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.impact.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.resultStatus
          type:
            - string
          description: "A value describing the overall\rresult of the repair task execution.\rMust be specified in the Restoring and later states, and is immutable once\rset.\r\r- Invalid - Indicates that the repair task result is invalid. All Service\rFabric enumerations have the invalid value.\r- Succeeded - Indicates that the repair task completed execution\rsuccessfully.\r- Cancelled - Indicates that the repair task was cancelled prior to\rexecution.\r- Interrupted - Indicates that execution of the repair task was interrupted\rby a cancellation request after some work had already been performed.\r- Failed - Indicates that there was a failure during execution of the repair\rtask. Some work may have been performed.\r- Pending - Indicates that the repair task result is not yet available,\rbecause the repair task has not finished executing.\r. Possible values include: 'Invalid', 'Succeeded', 'Cancelled',\r'Interrupted', 'Failed', 'Pending'"
          optional: true
        - id: repairTask.resultCode
          type:
            - number
          description: "A numeric value providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.resultDetails
          type:
            - string
          description: "A string providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.history
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.history.createdUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Created state."
          optional: true
        - id: repairTask.history.claimedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Claimed state."
          optional: true
        - id: repairTask.history.preparingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Preparing state."
          optional: true
        - id: repairTask.history.approvedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Approved state"
          optional: true
        - id: repairTask.history.executingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Executing state"
          optional: true
        - id: repairTask.history.restoringUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Restoring state"
          optional: true
        - id: repairTask.history.completedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Completed state"
          optional: true
        - id: repairTask.history.preparingHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Preparing state."
          optional: true
        - id: repairTask.history.preparingHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Preparing state."
          optional: true
        - id: repairTask.history.restoringHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Restoring state."
          optional: true
        - id: repairTask.history.restoringHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Restoring state."
          optional: true
        - id: repairTask.preparingHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.restoringHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.performPreparingHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rPreparing state."
          optional: true
        - id: repairTask.performRestoringHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rRestoring state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function createRepairTaskWithHttpOperationResponse(repairTask, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#createRepairTask'
    id: 'azure-servicefabric.ServiceFabricClient#createRepairTask'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'createRepairTask(repairTask, options, optionalCallback)'
    summary: "Creates a new repair task.\r\rFor clusters that have the Repair Manager Service configured,\rthis API provides a way to create repair tasks that run automatically or\rmanually.\rFor repair tasks that run automatically, an appropriate repair executor\rmust be running for each repair action to run automatically.\rThese are currently only available in specially-configured Azure Cloud\rServices.\r\rTo create a manual repair task, provide the set of impacted node names and\rthe\rexpected impact. When the state of the created repair task changes to\rapproved,\ryou can safely perform repair actions on those nodes.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createRepairTask(repairTask,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RepairTaskUpdateInfo} - The deserialized result object.'
        value: '{RepairTaskUpdateInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: repairTask
          type:
            - object
          description: "Describes the repair task to be created or\rupdated."
        - id: repairTask.taskId
          type:
            - string
          description: The ID of the repair task.
        - id: repairTask.version
          type:
            - string
          description: "The version of the repair task.\rWhen creating a new repair task, the version must be set to zero.  When\rupdating a repair task,\rthe version is used for optimistic concurrency checks.  If the version is\rset to zero, the update will not check for write conflicts.  If the version\ris set to a non-zero value, then the\rupdate will only succeed if the actual current version of the repair task\rmatches this value."
          optional: true
        - id: repairTask.description
          type:
            - string
          description: "A description of the purpose of the\rrepair task, or other informational details.\rMay be set when the repair task is created, and is immutable once set."
          optional: true
        - id: repairTask.state
          type:
            - string
          description: "The workflow state of the repair task.\rValid initial states are Created, Claimed, and Preparing.\r\r- Invalid - Indicates that the repair task state is invalid. All Service\rFabric enumerations have the invalid value.\r- Created - Indicates that the repair task has been created.\r- Claimed - Indicates that the repair task has been claimed by a repair\rexecutor.\r- Preparing - Indicates that the Repair Manager is preparing the system to\rhandle the impact of the repair task, usually by taking resources offline\rgracefully.\r- Approved - Indicates that the repair task has been approved by the Repair\rManager and is safe to execute.\r- Executing - Indicates that execution of the repair task is in progress.\r- Restoring - Indicates that the Repair Manager is restoring the system to\rits pre-repair state, usually by bringing resources back online.\r- Completed - Indicates that the repair task has completed, and no further\rstate changes will occur.\r. Possible values include: 'Invalid', 'Created', 'Claimed', 'Preparing',\r'Approved', 'Executing', 'Restoring', 'Completed'"
        - id: repairTask.flags
          type:
            - number
          description: "A bitwise-OR of the following values,\rwhich gives additional details about the status of the repair task.\r- 1 - Cancellation of the repair has been requested\r- 2 - Abort of the repair has been requested\r- 4 - Approval of the repair was forced via client request"
          optional: true
        - id: repairTask.action
          type:
            - string
          description: "The requested repair action. Must be\rspecified when the repair task is created, and is immutable once set."
        - id: repairTask.target
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.target.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.executor
          type:
            - string
          description: "The name of the repair executor. Must\rbe specified in Claimed and later states, and is immutable once set."
          optional: true
        - id: repairTask.executorData
          type:
            - string
          description: "A data string that the repair\rexecutor can use to store its internal state."
          optional: true
        - id: repairTask.impact
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.impact.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.resultStatus
          type:
            - string
          description: "A value describing the overall\rresult of the repair task execution.\rMust be specified in the Restoring and later states, and is immutable once\rset.\r\r- Invalid - Indicates that the repair task result is invalid. All Service\rFabric enumerations have the invalid value.\r- Succeeded - Indicates that the repair task completed execution\rsuccessfully.\r- Cancelled - Indicates that the repair task was cancelled prior to\rexecution.\r- Interrupted - Indicates that execution of the repair task was interrupted\rby a cancellation request after some work had already been performed.\r- Failed - Indicates that there was a failure during execution of the repair\rtask. Some work may have been performed.\r- Pending - Indicates that the repair task result is not yet available,\rbecause the repair task has not finished executing.\r. Possible values include: 'Invalid', 'Succeeded', 'Cancelled',\r'Interrupted', 'Failed', 'Pending'"
          optional: true
        - id: repairTask.resultCode
          type:
            - number
          description: "A numeric value providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.resultDetails
          type:
            - string
          description: "A string providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.history
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.history.createdUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Created state."
          optional: true
        - id: repairTask.history.claimedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Claimed state."
          optional: true
        - id: repairTask.history.preparingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Preparing state."
          optional: true
        - id: repairTask.history.approvedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Approved state"
          optional: true
        - id: repairTask.history.executingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Executing state"
          optional: true
        - id: repairTask.history.restoringUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Restoring state"
          optional: true
        - id: repairTask.history.completedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Completed state"
          optional: true
        - id: repairTask.history.preparingHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Preparing state."
          optional: true
        - id: repairTask.history.preparingHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Preparing state."
          optional: true
        - id: repairTask.history.restoringHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Restoring state."
          optional: true
        - id: repairTask.history.restoringHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Restoring state."
          optional: true
        - id: repairTask.preparingHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.restoringHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.performPreparingHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rPreparing state."
          optional: true
        - id: repairTask.performRestoringHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rRestoring state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function createRepairTask(repairTask, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#cancelRepairTaskWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#cancelRepairTaskWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      cancelRepairTaskWithHttpOperationResponse(repairTaskCancelDescription,
      options)
    summary: "Requests the cancellation of the given repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.cancelRepairTaskWithHttpOperationResponse(repairTaskCancelDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: repairTaskCancelDescription
          type:
            - object
          description: "Describes the repair task to be\rcancelled."
        - id: repairTaskCancelDescription.taskId
          type:
            - string
          description: "The ID of the repair\rtask."
        - id: repairTaskCancelDescription.version
          type:
            - string
          description: "The current version\rnumber of the repair task. If non-zero, then the request will only succeed\rif this value matches the actual current version of the repair task. If\rzero, then no version check is performed.</para>"
          optional: true
        - id: repairTaskCancelDescription.requestAbort
          type:
            - boolean
          description: "_True_ if the\rrepair should be stopped as soon as possible even if it has already started\rexecuting. _False_ if the repair should be cancelled only if execution has\rnot yet started.</para>"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        cancelRepairTaskWithHttpOperationResponse(repairTaskCancelDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#cancelRepairTask'
    id: 'azure-servicefabric.ServiceFabricClient#cancelRepairTask'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'cancelRepairTask(repairTaskCancelDescription, options, optionalCallback)'
    summary: "Requests the cancellation of the given repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.cancelRepairTask(repairTaskCancelDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RepairTaskUpdateInfo} - The deserialized result object.'
        value: '{RepairTaskUpdateInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: repairTaskCancelDescription
          type:
            - object
          description: "Describes the repair task to be\rcancelled."
        - id: repairTaskCancelDescription.taskId
          type:
            - string
          description: "The ID of the repair\rtask."
        - id: repairTaskCancelDescription.version
          type:
            - string
          description: "The current version\rnumber of the repair task. If non-zero, then the request will only succeed\rif this value matches the actual current version of the repair task. If\rzero, then no version check is performed.</para>"
          optional: true
        - id: repairTaskCancelDescription.requestAbort
          type:
            - boolean
          description: "_True_ if the\rrepair should be stopped as soon as possible even if it has already started\rexecuting. _False_ if the repair should be cancelled only if execution has\rnot yet started.</para>"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function cancelRepairTask(repairTaskCancelDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#deleteRepairTaskWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#deleteRepairTaskWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      deleteRepairTaskWithHttpOperationResponse(repairTaskDeleteDescription,
      options)
    summary: "Deletes a completed repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteRepairTaskWithHttpOperationResponse(repairTaskDeleteDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - object
          description: "Describes the repair task to be\rdeleted."
        - id: repairTaskDeleteDescription.taskId
          type:
            - string
          description: "The ID of the completed\rrepair task to be deleted."
        - id: repairTaskDeleteDescription.version
          type:
            - string
          description: "The current version\rnumber of the repair task. If non-zero, then the request will only succeed\rif this value matches the actual current version of the repair task. If\rzero, then no version check is performed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteRepairTaskWithHttpOperationResponse(repairTaskDeleteDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#deleteRepairTask'
    id: 'azure-servicefabric.ServiceFabricClient#deleteRepairTask'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'deleteRepairTask(repairTaskDeleteDescription, options, optionalCallback)'
    summary: "Deletes a completed repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteRepairTask(repairTaskDeleteDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: repairTaskDeleteDescription
          type:
            - object
          description: "Describes the repair task to be\rdeleted."
        - id: repairTaskDeleteDescription.taskId
          type:
            - string
          description: "The ID of the completed\rrepair task to be deleted."
        - id: repairTaskDeleteDescription.version
          type:
            - string
          description: "The current version\rnumber of the repair task. If non-zero, then the request will only succeed\rif this value matches the actual current version of the repair task. If\rzero, then no version check is performed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteRepairTask(repairTaskDeleteDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getRepairTaskListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getRepairTaskListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getRepairTaskListWithHttpOperationResponse(options)
    summary: "Gets a list of repair tasks matching the given filters.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getRepairTaskListWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskIdFilter
          type:
            - string
          description: "The repair task ID prefix to be\rmatched."
          optional: true
        - id: options.stateFilter
          type:
            - number
          description: "A bitwise-OR of the following values,\rspecifying which task states should be included in the result list.\r- 1 - Created\r- 2 - Claimed\r- 4 - Preparing\r- 8 - Approved\r- 16 - Executing\r- 32 - Restoring\r- 64 - Completed"
          optional: true
        - id: options.executorFilter
          type:
            - string
          description: "The name of the repair executor\rwhose claimed tasks should be included in the list."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getRepairTaskListWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getRepairTaskList'
    id: 'azure-servicefabric.ServiceFabricClient#getRepairTaskList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getRepairTaskList(options, optionalCallback)'
    summary: "Gets a list of repair tasks matching the given filters.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getRepairTaskList(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskIdFilter
          type:
            - string
          description: "The repair task ID prefix to be\rmatched."
          optional: true
        - id: options.stateFilter
          type:
            - number
          description: "A bitwise-OR of the following values,\rspecifying which task states should be included in the result list.\r- 1 - Created\r- 2 - Claimed\r- 4 - Preparing\r- 8 - Approved\r- 16 - Executing\r- 32 - Restoring\r- 64 - Completed"
          optional: true
        - id: options.executorFilter
          type:
            - string
          description: "The name of the repair executor\rwhose claimed tasks should be included in the list."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getRepairTaskList(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#forceApproveRepairTaskWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#forceApproveRepairTaskWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      forceApproveRepairTaskWithHttpOperationResponse(repairTaskApproveDescription,
      options)
    summary: "Forces the approval of the given repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.forceApproveRepairTaskWithHttpOperationResponse(repairTaskApproveDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: repairTaskApproveDescription
          type:
            - object
          description: "Describes the repair task to be\rapproved."
        - id: repairTaskApproveDescription.taskId
          type:
            - string
          description: "The ID of the repair\rtask."
        - id: repairTaskApproveDescription.version
          type:
            - string
          description: "The current version\rnumber of the repair task. If non-zero, then the request will only succeed\rif this value matches the actual current version of the repair task. If\rzero, then no version check is performed.</para>"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        forceApproveRepairTaskWithHttpOperationResponse(repairTaskApproveDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#forceApproveRepairTask'
    id: 'azure-servicefabric.ServiceFabricClient#forceApproveRepairTask'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      forceApproveRepairTask(repairTaskApproveDescription, options,
      optionalCallback)
    summary: "Forces the approval of the given repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.forceApproveRepairTask(repairTaskApproveDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RepairTaskUpdateInfo} - The deserialized result object.'
        value: '{RepairTaskUpdateInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: repairTaskApproveDescription
          type:
            - object
          description: "Describes the repair task to be\rapproved."
        - id: repairTaskApproveDescription.taskId
          type:
            - string
          description: "The ID of the repair\rtask."
        - id: repairTaskApproveDescription.version
          type:
            - string
          description: "The current version\rnumber of the repair task. If non-zero, then the request will only succeed\rif this value matches the actual current version of the repair task. If\rzero, then no version check is performed.</para>"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function forceApproveRepairTask(repairTaskApproveDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#updateRepairTaskHealthPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#updateRepairTaskHealthPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateRepairTaskHealthPolicyWithHttpOperationResponse(repairTaskUpdateHealthPolicyDescription,
      options)
    summary: "Updates the health policy of the given repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicyWithHttpOperationResponse(repairTaskUpdateHealthPolicyDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - object
          description: "Describes the repair\rtask healthy policy to be updated."
        - id: repairTaskUpdateHealthPolicyDescription.taskId
          type:
            - string
          description: "The ID of the\rrepair task to be updated."
        - id: repairTaskUpdateHealthPolicyDescription.version
          type:
            - string
          description: "The\rcurrent version number of the repair task. If non-zero, then the request\rwill only succeed if this value matches the actual current value of the\rrepair task. If zero, then no version check is performed."
          optional: true
        - id: repairTaskUpdateHealthPolicyDescription.performPreparingHealthCheck
          type:
            - boolean
          description: "A\rboolean indicating if health check is to be performed in the Preparing stage\rof the repair task. If not specified the existing value should not be\raltered. Otherwise, specify the desired new value."
          optional: true
        - id: repairTaskUpdateHealthPolicyDescription.performRestoringHealthCheck
          type:
            - boolean
          description: "A\rboolean indicating if health check is to be performed in the Restoring stage\rof the repair task. If not specified the existing value should not be\raltered. Otherwise, specify the desired new value."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateRepairTaskHealthPolicyWithHttpOperationResponse(repairTaskUpdateHealthPolicyDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#updateRepairTaskHealthPolicy'
    id: 'azure-servicefabric.ServiceFabricClient#updateRepairTaskHealthPolicy'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription,
      options, optionalCallback)
    summary: "Updates the health policy of the given repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RepairTaskUpdateInfo} - The deserialized result object.'
        value: '{RepairTaskUpdateInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: repairTaskUpdateHealthPolicyDescription
          type:
            - object
          description: "Describes the repair\rtask healthy policy to be updated."
        - id: repairTaskUpdateHealthPolicyDescription.taskId
          type:
            - string
          description: "The ID of the\rrepair task to be updated."
        - id: repairTaskUpdateHealthPolicyDescription.version
          type:
            - string
          description: "The\rcurrent version number of the repair task. If non-zero, then the request\rwill only succeed if this value matches the actual current value of the\rrepair task. If zero, then no version check is performed."
          optional: true
        - id: repairTaskUpdateHealthPolicyDescription.performPreparingHealthCheck
          type:
            - boolean
          description: "A\rboolean indicating if health check is to be performed in the Preparing stage\rof the repair task. If not specified the existing value should not be\raltered. Otherwise, specify the desired new value."
          optional: true
        - id: repairTaskUpdateHealthPolicyDescription.performRestoringHealthCheck
          type:
            - boolean
          description: "A\rboolean indicating if health check is to be performed in the Restoring stage\rof the repair task. If not specified the existing value should not be\raltered. Otherwise, specify the desired new value."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function
        updateRepairTaskHealthPolicy(repairTaskUpdateHealthPolicyDescription,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#updateRepairExecutionStateWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#updateRepairExecutionStateWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'updateRepairExecutionStateWithHttpOperationResponse(repairTask, options)'
    summary: "Updates the execution state of a repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateRepairExecutionStateWithHttpOperationResponse(repairTask,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<RepairTaskUpdateInfo>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: repairTask
          type:
            - object
          description: "Describes the repair task to be created or\rupdated."
        - id: repairTask.taskId
          type:
            - string
          description: The ID of the repair task.
        - id: repairTask.version
          type:
            - string
          description: "The version of the repair task.\rWhen creating a new repair task, the version must be set to zero.  When\rupdating a repair task,\rthe version is used for optimistic concurrency checks.  If the version is\rset to zero, the update will not check for write conflicts.  If the version\ris set to a non-zero value, then the\rupdate will only succeed if the actual current version of the repair task\rmatches this value."
          optional: true
        - id: repairTask.description
          type:
            - string
          description: "A description of the purpose of the\rrepair task, or other informational details.\rMay be set when the repair task is created, and is immutable once set."
          optional: true
        - id: repairTask.state
          type:
            - string
          description: "The workflow state of the repair task.\rValid initial states are Created, Claimed, and Preparing.\r\r- Invalid - Indicates that the repair task state is invalid. All Service\rFabric enumerations have the invalid value.\r- Created - Indicates that the repair task has been created.\r- Claimed - Indicates that the repair task has been claimed by a repair\rexecutor.\r- Preparing - Indicates that the Repair Manager is preparing the system to\rhandle the impact of the repair task, usually by taking resources offline\rgracefully.\r- Approved - Indicates that the repair task has been approved by the Repair\rManager and is safe to execute.\r- Executing - Indicates that execution of the repair task is in progress.\r- Restoring - Indicates that the Repair Manager is restoring the system to\rits pre-repair state, usually by bringing resources back online.\r- Completed - Indicates that the repair task has completed, and no further\rstate changes will occur.\r. Possible values include: 'Invalid', 'Created', 'Claimed', 'Preparing',\r'Approved', 'Executing', 'Restoring', 'Completed'"
        - id: repairTask.flags
          type:
            - number
          description: "A bitwise-OR of the following values,\rwhich gives additional details about the status of the repair task.\r- 1 - Cancellation of the repair has been requested\r- 2 - Abort of the repair has been requested\r- 4 - Approval of the repair was forced via client request"
          optional: true
        - id: repairTask.action
          type:
            - string
          description: "The requested repair action. Must be\rspecified when the repair task is created, and is immutable once set."
        - id: repairTask.target
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.target.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.executor
          type:
            - string
          description: "The name of the repair executor. Must\rbe specified in Claimed and later states, and is immutable once set."
          optional: true
        - id: repairTask.executorData
          type:
            - string
          description: "A data string that the repair\rexecutor can use to store its internal state."
          optional: true
        - id: repairTask.impact
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.impact.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.resultStatus
          type:
            - string
          description: "A value describing the overall\rresult of the repair task execution.\rMust be specified in the Restoring and later states, and is immutable once\rset.\r\r- Invalid - Indicates that the repair task result is invalid. All Service\rFabric enumerations have the invalid value.\r- Succeeded - Indicates that the repair task completed execution\rsuccessfully.\r- Cancelled - Indicates that the repair task was cancelled prior to\rexecution.\r- Interrupted - Indicates that execution of the repair task was interrupted\rby a cancellation request after some work had already been performed.\r- Failed - Indicates that there was a failure during execution of the repair\rtask. Some work may have been performed.\r- Pending - Indicates that the repair task result is not yet available,\rbecause the repair task has not finished executing.\r. Possible values include: 'Invalid', 'Succeeded', 'Cancelled',\r'Interrupted', 'Failed', 'Pending'"
          optional: true
        - id: repairTask.resultCode
          type:
            - number
          description: "A numeric value providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.resultDetails
          type:
            - string
          description: "A string providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.history
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.history.createdUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Created state."
          optional: true
        - id: repairTask.history.claimedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Claimed state."
          optional: true
        - id: repairTask.history.preparingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Preparing state."
          optional: true
        - id: repairTask.history.approvedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Approved state"
          optional: true
        - id: repairTask.history.executingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Executing state"
          optional: true
        - id: repairTask.history.restoringUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Restoring state"
          optional: true
        - id: repairTask.history.completedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Completed state"
          optional: true
        - id: repairTask.history.preparingHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Preparing state."
          optional: true
        - id: repairTask.history.preparingHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Preparing state."
          optional: true
        - id: repairTask.history.restoringHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Restoring state."
          optional: true
        - id: repairTask.history.restoringHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Restoring state."
          optional: true
        - id: repairTask.preparingHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.restoringHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.performPreparingHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rPreparing state."
          optional: true
        - id: repairTask.performRestoringHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rRestoring state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateRepairExecutionStateWithHttpOperationResponse(repairTask,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#updateRepairExecutionState'
    id: 'azure-servicefabric.ServiceFabricClient#updateRepairExecutionState'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'updateRepairExecutionState(repairTask, options, optionalCallback)'
    summary: "Updates the execution state of a repair task.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.updateRepairExecutionState(repairTask,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{RepairTaskUpdateInfo} - The deserialized result object.'
        value: '{RepairTaskUpdateInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link RepairTaskUpdateInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: repairTask
          type:
            - object
          description: "Describes the repair task to be created or\rupdated."
        - id: repairTask.taskId
          type:
            - string
          description: The ID of the repair task.
        - id: repairTask.version
          type:
            - string
          description: "The version of the repair task.\rWhen creating a new repair task, the version must be set to zero.  When\rupdating a repair task,\rthe version is used for optimistic concurrency checks.  If the version is\rset to zero, the update will not check for write conflicts.  If the version\ris set to a non-zero value, then the\rupdate will only succeed if the actual current version of the repair task\rmatches this value."
          optional: true
        - id: repairTask.description
          type:
            - string
          description: "A description of the purpose of the\rrepair task, or other informational details.\rMay be set when the repair task is created, and is immutable once set."
          optional: true
        - id: repairTask.state
          type:
            - string
          description: "The workflow state of the repair task.\rValid initial states are Created, Claimed, and Preparing.\r\r- Invalid - Indicates that the repair task state is invalid. All Service\rFabric enumerations have the invalid value.\r- Created - Indicates that the repair task has been created.\r- Claimed - Indicates that the repair task has been claimed by a repair\rexecutor.\r- Preparing - Indicates that the Repair Manager is preparing the system to\rhandle the impact of the repair task, usually by taking resources offline\rgracefully.\r- Approved - Indicates that the repair task has been approved by the Repair\rManager and is safe to execute.\r- Executing - Indicates that execution of the repair task is in progress.\r- Restoring - Indicates that the Repair Manager is restoring the system to\rits pre-repair state, usually by bringing resources back online.\r- Completed - Indicates that the repair task has completed, and no further\rstate changes will occur.\r. Possible values include: 'Invalid', 'Created', 'Claimed', 'Preparing',\r'Approved', 'Executing', 'Restoring', 'Completed'"
        - id: repairTask.flags
          type:
            - number
          description: "A bitwise-OR of the following values,\rwhich gives additional details about the status of the repair task.\r- 1 - Cancellation of the repair has been requested\r- 2 - Abort of the repair has been requested\r- 4 - Approval of the repair was forced via client request"
          optional: true
        - id: repairTask.action
          type:
            - string
          description: "The requested repair action. Must be\rspecified when the repair task is created, and is immutable once set."
        - id: repairTask.target
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.target.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.executor
          type:
            - string
          description: "The name of the repair executor. Must\rbe specified in Claimed and later states, and is immutable once set."
          optional: true
        - id: repairTask.executorData
          type:
            - string
          description: "A data string that the repair\rexecutor can use to store its internal state."
          optional: true
        - id: repairTask.impact
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.impact.kind
          type:
            - string
          description: Polymorphic Discriminator
        - id: repairTask.resultStatus
          type:
            - string
          description: "A value describing the overall\rresult of the repair task execution.\rMust be specified in the Restoring and later states, and is immutable once\rset.\r\r- Invalid - Indicates that the repair task result is invalid. All Service\rFabric enumerations have the invalid value.\r- Succeeded - Indicates that the repair task completed execution\rsuccessfully.\r- Cancelled - Indicates that the repair task was cancelled prior to\rexecution.\r- Interrupted - Indicates that execution of the repair task was interrupted\rby a cancellation request after some work had already been performed.\r- Failed - Indicates that there was a failure during execution of the repair\rtask. Some work may have been performed.\r- Pending - Indicates that the repair task result is not yet available,\rbecause the repair task has not finished executing.\r. Possible values include: 'Invalid', 'Succeeded', 'Cancelled',\r'Interrupted', 'Failed', 'Pending'"
          optional: true
        - id: repairTask.resultCode
          type:
            - number
          description: "A numeric value providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.resultDetails
          type:
            - string
          description: "A string providing additional\rdetails about the result of the repair task execution.\rMay be specified in the Restoring and later states, and is immutable once\rset."
          optional: true
        - id: repairTask.history
          type:
            - object
          description: ''
          optional: true
        - id: repairTask.history.createdUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Created state."
          optional: true
        - id: repairTask.history.claimedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Claimed state."
          optional: true
        - id: repairTask.history.preparingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Preparing state."
          optional: true
        - id: repairTask.history.approvedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Approved state"
          optional: true
        - id: repairTask.history.executingUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Executing state"
          optional: true
        - id: repairTask.history.restoringUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Restoring state"
          optional: true
        - id: repairTask.history.completedUtcTimestamp
          type:
            - date
          description: "The time when the\rrepair task entered the Completed state"
          optional: true
        - id: repairTask.history.preparingHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Preparing state."
          optional: true
        - id: repairTask.history.preparingHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Preparing state."
          optional: true
        - id: repairTask.history.restoringHealthCheckStartUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task started the health check in the Restoring state."
          optional: true
        - id: repairTask.history.restoringHealthCheckEndUtcTimestamp
          type:
            - date
          description: "The\rtime when the repair task completed the health check in the Restoring state."
          optional: true
        - id: repairTask.preparingHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.restoringHealthCheckState
          type:
            - string
          description: "Possible values\rinclude: 'NotStarted', 'InProgress', 'Succeeded', 'Skipped', 'TimedOut'"
          optional: true
        - id: repairTask.performPreparingHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rPreparing state."
          optional: true
        - id: repairTask.performRestoringHealthCheck
          type:
            - boolean
          description: "A value to\rdetermine if health checks will be performed when the repair task enters the\rRestoring state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateRepairExecutionState(repairTask, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getReplicaInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getReplicaInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getReplicaInfoListWithHttpOperationResponse(partitionId, options)'
    summary: "Gets the information about replicas of a Service Fabric service\rpartition.\r\rThe GetReplicas endpoint returns information about the replicas of the\rspecified partition. The respons include the id, role, status, health, node\rname, uptime, and other details about the replica."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaInfoListWithHttpOperationResponse(partitionId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedReplicaInfoList>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PagedReplicaInfoList>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getReplicaInfoListWithHttpOperationResponse(partitionId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getReplicaInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getReplicaInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getReplicaInfoList(partitionId, options, optionalCallback)'
    summary: "Gets the information about replicas of a Service Fabric service\rpartition.\r\rThe GetReplicas endpoint returns information about the replicas of the\rspecified partition. The respons include the id, role, status, health, node\rname, uptime, and other details about the replica."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaInfoList(partitionId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PagedReplicaInfoList} - The deserialized result object.'
        value: '{PagedReplicaInfoList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedReplicaInfoList} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedReplicaInfoList} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getReplicaInfoList(partitionId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getReplicaInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getReplicaInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getReplicaInfoWithHttpOperationResponse(partitionId, replicaId, options)'
    summary: "Gets the information about a replica of a Service Fabric partition.\r\rThe respons include the id, role, status, health, node name, uptime, and\rother details about the replica."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaInfoWithHttpOperationResponse(partitionId,
      replicaId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<ReplicaInfo>} - The deserialized result object.'
        value: '{HttpOperationResponse<ReplicaInfo>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getReplicaInfoWithHttpOperationResponse(partitionId, replicaId,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getReplicaInfo'
    id: 'azure-servicefabric.ServiceFabricClient#getReplicaInfo'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getReplicaInfo(partitionId, replicaId, options, optionalCallback)'
    summary: "Gets the information about a replica of a Service Fabric partition.\r\rThe respons include the id, role, status, health, node name, uptime, and\rother details about the replica."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaInfo(partitionId,
      replicaId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ReplicaInfo} - The deserialized result object.'
        value: '{ReplicaInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ReplicaInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ReplicaInfo} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getReplicaInfo(partitionId, replicaId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getReplicaHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getReplicaHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getReplicaHealthWithHttpOperationResponse(partitionId, replicaId, options)'
    summary: "Gets the health of a Service Fabric stateful service replica or\rstateless service instance.\r\rGets the health of a Service Fabric replica.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the replica based on the health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaHealthWithHttpOperationResponse(partitionId,
      replicaId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ReplicaHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ReplicaHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getReplicaHealthWithHttpOperationResponse(partitionId,
        replicaId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getReplicaHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getReplicaHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getReplicaHealth(partitionId, replicaId, options, optionalCallback)'
    summary: "Gets the health of a Service Fabric stateful service replica or\rstateless service instance.\r\rGets the health of a Service Fabric replica.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the replica based on the health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaHealth(partitionId,
      replicaId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ReplicaHealth} - The deserialized result object.'
        value: '{ReplicaHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ReplicaHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ReplicaHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getReplicaHealth(partitionId, replicaId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getReplicaHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getReplicaHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getReplicaHealthUsingPolicyWithHttpOperationResponse(partitionId,
      replicaId, options)
    summary: "Gets the health of a Service Fabric stateful service replica or\rstateless service instance using the specified policy.\r\rGets the health of a Service Fabric stateful service replica or stateless\rservice instance.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the cluster based on the health state.\rUse ApplicationHealthPolicy to optionally override the health policies used\rto evaluate the health. This API only uses 'ConsiderWarningAsError' field of\rthe ApplicationHealthPolicy. The rest of the fields are ignored while\revaluating the health of the replica."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicyWithHttpOperationResponse(partitionId,
      replicaId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ReplicaHealth>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ReplicaHealth>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getReplicaHealthUsingPolicyWithHttpOperationResponse(partitionId,
        replicaId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getReplicaHealthUsingPolicy'
    id: 'azure-servicefabric.ServiceFabricClient#getReplicaHealthUsingPolicy'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getReplicaHealthUsingPolicy(partitionId, replicaId, options,
      optionalCallback)
    summary: "Gets the health of a Service Fabric stateful service replica or\rstateless service instance using the specified policy.\r\rGets the health of a Service Fabric stateful service replica or stateless\rservice instance.\rUse EventsHealthStateFilter to filter the collection of health events\rreported on the cluster based on the health state.\rUse ApplicationHealthPolicy to optionally override the health policies used\rto evaluate the health. This API only uses 'ConsiderWarningAsError' field of\rthe ApplicationHealthPolicy. The rest of the fields are ignored while\revaluating the health of the replica."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getReplicaHealthUsingPolicy(partitionId,
      replicaId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ReplicaHealth} - The deserialized result object.'
        value: '{ReplicaHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ReplicaHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ReplicaHealth} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getReplicaHealthUsingPolicy(partitionId, replicaId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportReplicaHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportReplicaHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportReplicaHealthWithHttpOperationResponse(partitionId, replicaId,
      serviceKind, healthInformation, options)
    summary: "Sends a health report on the Service Fabric replica.\r\rReports health state of the specified Service Fabric replica. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Replica, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetReplicaHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportReplicaHealthWithHttpOperationResponse(partitionId,
      replicaId, serviceKind, healthInformation, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: serviceKind
          type:
            - string
          description: "The kind of service replica (Stateless or\rStateful) for which the health is being reported. Following are the possible\rvalues.\r- Stateless - Does not use Service Fabric to make its state highly available\ror reliable. The value is 1\r- Stateful - Uses Service Fabric to make its state or part of its state\rhighly available and reliable. The value is 2.\r. Possible values include: 'Stateless', 'Stateful'"
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function reportReplicaHealthWithHttpOperationResponse(partitionId,
        replicaId, serviceKind, healthInformation, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportReplicaHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportReplicaHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportReplicaHealth(partitionId, replicaId, serviceKind,
      healthInformation, options, optionalCallback)
    summary: "Sends a health report on the Service Fabric replica.\r\rReports health state of the specified Service Fabric replica. The report\rmust contain the information about the source of the health report and\rproperty on which it is reported.\rThe report is sent to a Service Fabric gateway Replica, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, run\rGetReplicaHealth and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportReplicaHealth(partitionId,
      replicaId, serviceKind, healthInformation, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: serviceKind
          type:
            - string
          description: "The kind of service replica (Stateless or\rStateful) for which the health is being reported. Following are the possible\rvalues.\r- Stateless - Does not use Service Fabric to make its state highly available\ror reliable. The value is 1\r- Stateful - Uses Service Fabric to make its state or part of its state\rhighly available and reliable. The value is 2.\r. Possible values include: 'Stateless', 'Stateful'"
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportReplicaHealth(partitionId, replicaId, serviceKind,
        healthInformation, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceReplicaInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    summary: "Gets the list of replicas deployed on a Service Fabric node.\r\rGets the list containing the information about replicas deployed on a\rService Fabric node. The information include partition id, replica id,\rstatus of the replica, name of the service, name of the service type and\rother information. Use PartitionId or ServiceManifestName query parameters\rto return information about the deployed replicas matching the specified\rvalues for those parameters."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of a service manifest\rregistered as part of an application type in a Service Fabric cluster."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServiceReplicaInfoListWithHttpOperationResponse(nodeName,
        applicationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceReplicaInfoList(nodeName, applicationId, options,
      optionalCallback)
    summary: "Gets the list of replicas deployed on a Service Fabric node.\r\rGets the list containing the information about replicas deployed on a\rService Fabric node. The information include partition id, replica id,\rstatus of the replica, name of the service, name of the service type and\rother information. Use PartitionId or ServiceManifestName query parameters\rto return information about the deployed replicas matching the specified\rvalues for those parameters."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaInfoList(nodeName,
      applicationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of a service manifest\rregistered as part of an application type in a Service Fabric cluster."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServiceReplicaInfoList(nodeName, applicationId,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceReplicaDetailInfoWithHttpOperationResponse(nodeName,
      partitionId, replicaId, options)
    summary: "Gets the details of replica deployed on a Service Fabric node.\r\rGets the details of the replica deployed on a Service Fabric node. The\rinformation include service kind, service name, current service operation,\rcurrent service operation start date time, partition id, replica/instance\rid, reported load and other information."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoWithHttpOperationResponse(nodeName,
      partitionId, replicaId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeployedServiceReplicaDetailInfo>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<DeployedServiceReplicaDetailInfo>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServiceReplicaDetailInfoWithHttpOperationResponse(nodeName,
        partitionId, replicaId, options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfo
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfo
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceReplicaDetailInfo(nodeName, partitionId, replicaId,
      options, optionalCallback)
    summary: "Gets the details of replica deployed on a Service Fabric node.\r\rGets the details of the replica deployed on a Service Fabric node. The\rinformation include service kind, service name, current service operation,\rcurrent service operation start date time, partition id, replica/instance\rid, reported load and other information."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfo(nodeName,
      partitionId, replicaId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeployedServiceReplicaDetailInfo} - The deserialized result object.'
        value: '{DeployedServiceReplicaDetailInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServiceReplicaDetailInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServiceReplicaDetailInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServiceReplicaDetailInfo(nodeName, partitionId,
        replicaId, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse(nodeName,
      partitionId, options)
    summary: "Gets the details of replica deployed on a Service Fabric node.\r\rGets the details of the replica deployed on a Service Fabric node. The\rinformation include service kind, service name, current service operation,\rcurrent service operation start date time, partition id, replica/instance\rid, reported load and other information."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse(nodeName,
      partitionId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeployedServiceReplicaDetailInfo>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<DeployedServiceReplicaDetailInfo>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServiceReplicaDetailInfoByPartitionIdWithHttpOperationResponse(nodeName,
        partitionId, options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoByPartitionId
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServiceReplicaDetailInfoByPartitionId
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServiceReplicaDetailInfoByPartitionId(nodeName, partitionId,
      options, optionalCallback)
    summary: "Gets the details of replica deployed on a Service Fabric node.\r\rGets the details of the replica deployed on a Service Fabric node. The\rinformation include service kind, service name, current service operation,\rcurrent service operation start date time, partition id, replica/instance\rid, reported load and other information."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServiceReplicaDetailInfoByPartitionId(nodeName,
      partitionId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeployedServiceReplicaDetailInfo} - The deserialized result object.'
        value: '{DeployedServiceReplicaDetailInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServiceReplicaDetailInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServiceReplicaDetailInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServiceReplicaDetailInfoByPartitionId(nodeName,
        partitionId, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#restartReplicaWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#restartReplicaWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      restartReplicaWithHttpOperationResponse(nodeName, partitionId, replicaId,
      options)
    summary: "Restarts a service replica of a persisted service running on a\rnode.\r\rRestarts a service replica of a persisted service running on a node. Warning\r- There are no safety checks performed when this API is used. Incorrect use\rof this API can lead to availability loss for stateful services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.restartReplicaWithHttpOperationResponse(nodeName,
      partitionId, replicaId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restartReplicaWithHttpOperationResponse(nodeName, partitionId,
        replicaId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#restartReplica'
    id: 'azure-servicefabric.ServiceFabricClient#restartReplica'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      restartReplica(nodeName, partitionId, replicaId, options,
      optionalCallback)
    summary: "Restarts a service replica of a persisted service running on a\rnode.\r\rRestarts a service replica of a persisted service running on a node. Warning\r- There are no safety checks performed when this API is used. Incorrect use\rof this API can lead to availability loss for stateful services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.restartReplica(nodeName,
      partitionId, replicaId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function restartReplica(nodeName, partitionId, replicaId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#removeReplicaWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#removeReplicaWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      removeReplicaWithHttpOperationResponse(nodeName, partitionId, replicaId,
      options)
    summary: "Removes a service replica running on a node.\r\rThis API simulates a Service Fabric replica failure by removing a replica\rfrom a Service Fabric cluster. The removal closes the replica, transitions\rthe replica to the role None, and then removes all of the state information\rof the replica from the cluster. This API tests the replica state removal\rpath, and simulates the report fault permanent path through client APIs.\rWarning - There are no safety checks performed when this API is used.\rIncorrect use of this API can lead to data loss for stateful services.In\raddition, the forceRemove flag impacts all other replicas hosted in the same\rprocess."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.removeReplicaWithHttpOperationResponse(nodeName,
      partitionId, replicaId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.forceRemove
          type:
            - boolean
          description: "Remove a Service Fabric application\ror service forcefully without going through the graceful shutdown sequence.\rThis parameter can be used to forcefully delete an application or service\rfor which delete is timing out due to issues in the service code that\rprevents graceful close of replicas."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function removeReplicaWithHttpOperationResponse(nodeName, partitionId,
        replicaId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#removeReplica'
    id: 'azure-servicefabric.ServiceFabricClient#removeReplica'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'removeReplica(nodeName, partitionId, replicaId, options, optionalCallback)'
    summary: "Removes a service replica running on a node.\r\rThis API simulates a Service Fabric replica failure by removing a replica\rfrom a Service Fabric cluster. The removal closes the replica, transitions\rthe replica to the role None, and then removes all of the state information\rof the replica from the cluster. This API tests the replica state removal\rpath, and simulates the report fault permanent path through client APIs.\rWarning - There are no safety checks performed when this API is used.\rIncorrect use of this API can lead to data loss for stateful services.In\raddition, the forceRemove flag impacts all other replicas hosted in the same\rprocess."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.removeReplica(nodeName,
      partitionId, replicaId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: replicaId
          type:
            - string
          description: The identifier of the replica.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.forceRemove
          type:
            - boolean
          description: "Remove a Service Fabric application\ror service forcefully without going through the graceful shutdown sequence.\rThis parameter can be used to forcefully delete an application or service\rfor which delete is timing out due to issues in the service code that\rprevents graceful close of replicas."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function removeReplica(nodeName, partitionId, replicaId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    summary: "Gets the list of service packages deployed on a Service Fabric\rnode.\r\rReturns the information about the service packages deployed on a Service\rFabric node for the given application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServicePackageInfoListWithHttpOperationResponse(nodeName,
        applicationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageInfoList(nodeName, applicationId, options,
      optionalCallback)
    summary: "Gets the list of service packages deployed on a Service Fabric\rnode.\r\rReturns the information about the service packages deployed on a Service\rFabric node for the given application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoList(nodeName,
      applicationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServicePackageInfoList(nodeName, applicationId,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListByNameWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListByNameWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageInfoListByNameWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, options)
    summary: "Gets the list of service packages deployed on a Service Fabric node\rmatching exactly the specified name.\r\rReturns the information about the service packages deployed on a Service\rFabric node for the given application. These results are of service packages\rwhose name match exactly the service package name specified as the\rparameter."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByNameWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServicePackageInfoListByNameWithHttpOperationResponse(nodeName,
        applicationId, servicePackageName, options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListByName
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageInfoListByName
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageInfoListByName(nodeName, applicationId,
      servicePackageName, options, optionalCallback)
    summary: "Gets the list of service packages deployed on a Service Fabric node\rmatching exactly the specified name.\r\rReturns the information about the service packages deployed on a Service\rFabric node for the given application. These results are of service packages\rwhose name match exactly the service package name specified as the\rparameter."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageInfoListByName(nodeName,
      applicationId, servicePackageName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServicePackageInfoListByName(nodeName,
        applicationId, servicePackageName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageHealthWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, options)
    summary: "Gets the information about health of an service package for a\rspecific application deployed for a Service Fabric node and application.\r\rGets the information about health of service package for a specific\rapplication deployed on a Service Fabric node. Use EventsHealthStateFilter\rto optionally filter for the collection of HealthEvent objects reported on\rthe deployed service package based on health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeployedServicePackageHealth>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<DeployedServicePackageHealth>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServicePackageHealthWithHttpOperationResponse(nodeName,
        applicationId, servicePackageName, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealth'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageHealth(nodeName, applicationId,
      servicePackageName, options, optionalCallback)
    summary: "Gets the information about health of an service package for a\rspecific application deployed for a Service Fabric node and application.\r\rGets the information about health of service package for a specific\rapplication deployed on a Service Fabric node. Use EventsHealthStateFilter\rto optionally filter for the collection of HealthEvent objects reported on\rthe deployed service package based on health state."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealth(nodeName,
      applicationId, servicePackageName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeployedServicePackageHealth} - The deserialized result object.'
        value: '{DeployedServicePackageHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServicePackageHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServicePackageHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServicePackageHealth(nodeName, applicationId,
        servicePackageName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, options)
    summary: "Gets the information about health of service package for a specific\rapplication deployed on a Service Fabric node using the specified policy.\r\rGets the information about health of an service package for a specific\rapplication deployed on a Service Fabric node. using the specified policy.\rUse EventsHealthStateFilter to optionally filter for the collection of\rHealthEvent objects reported on the deployed service package based on health\rstate. Use ApplicationHealthPolicy to optionally override the health\rpolicies used to evaluate the health. This API only uses\r'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of\rthe fields are ignored while evaluating the health of the deployed service\rpackage."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeployedServicePackageHealth>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<DeployedServicePackageHealth>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedServicePackageHealthUsingPolicyWithHttpOperationResponse(nodeName,
        applicationId, servicePackageName, options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthUsingPolicy
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedServicePackageHealthUsingPolicy
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedServicePackageHealthUsingPolicy(nodeName, applicationId,
      servicePackageName, options, optionalCallback)
    summary: "Gets the information about health of service package for a specific\rapplication deployed on a Service Fabric node using the specified policy.\r\rGets the information about health of an service package for a specific\rapplication deployed on a Service Fabric node. using the specified policy.\rUse EventsHealthStateFilter to optionally filter for the collection of\rHealthEvent objects reported on the deployed service package based on health\rstate. Use ApplicationHealthPolicy to optionally override the health\rpolicies used to evaluate the health. This API only uses\r'ConsiderWarningAsError' field of the ApplicationHealthPolicy. The rest of\rthe fields are ignored while evaluating the health of the deployed service\rpackage."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedServicePackageHealthUsingPolicy(nodeName,
      applicationId, servicePackageName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeployedServicePackageHealth} - The deserialized result object.'
        value: '{DeployedServicePackageHealth} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServicePackageHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeployedServicePackageHealth} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.eventsHealthStateFilter
          type:
            - number
          description: "Allows filtering the\rcollection of HealthEvent objects returned based on health state.\rThe possible values for this parameter include integer value of one of the\rfollowing health states.\rOnly events that match the filter are returned. All events are used to\revaluate the aggregated health state.\rIf not specified, all entries are returned. The state values are flag based\renumeration, so the value could be a combination of these value obtained\rusing bitwise 'OR' operator. For example, If the provided value is 6 then\rall of the events with HealthState value of OK (2) and Warning (4) are\rreturned.\r\r- Default - Default value. Matches any HealthState. The value is zero.\r- None - Filter that doesn't match any HealthState value. Used in order to\rreturn no results on a given collection of states. The value is 1.\r- Ok - Filter that matches input with HealthState value Ok. The value is 2.\r- Warning - Filter that matches input with HealthState value Warning. The\rvalue is 4.\r- Error - Filter that matches input with HealthState value Error. The value\ris 8.\r- All - Filter that matches input with any HealthState value. The value is\r65535."
          optional: true
        - id: options.applicationHealthPolicy
          type:
            - object
          description: "Describes the health\rpolicies used to evaluate the health of an application or one of its\rchildren.\rIf not present, the health evaluation uses the health policy from\rapplication manifest or the default health policy."
          optional: true
        - id: options.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            options.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            options.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: options.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedServicePackageHealthUsingPolicy(nodeName,
        applicationId, servicePackageName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#reportDeployedServicePackageHealthWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#reportDeployedServicePackageHealthWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportDeployedServicePackageHealthWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, healthInformation, options)
    summary: "Sends a health report on the Service Fabric deployed service\rpackage.\r\rReports health state of the service package of the application deployed on a\rService Fabric node. The report must contain the information about the\rsource of the health report and property on which it is reported.\rThe report is sent to a Service Fabric gateway Service, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, get deployed\rservice package health and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealthWithHttpOperationResponse(nodeName,
      applicationId, servicePackageName, healthInformation, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        reportDeployedServicePackageHealthWithHttpOperationResponse(nodeName,
        applicationId, servicePackageName, healthInformation, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#reportDeployedServicePackageHealth'
    id: 'azure-servicefabric.ServiceFabricClient#reportDeployedServicePackageHealth'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      reportDeployedServicePackageHealth(nodeName, applicationId,
      servicePackageName, healthInformation, options, optionalCallback)
    summary: "Sends a health report on the Service Fabric deployed service\rpackage.\r\rReports health state of the service package of the application deployed on a\rService Fabric node. The report must contain the information about the\rsource of the health report and property on which it is reported.\rThe report is sent to a Service Fabric gateway Service, which forwards to\rthe health store.\rThe report may be accepted by the gateway, but rejected by the health store\rafter extra validation.\rFor example, the health store may reject the report because of an invalid\rparameter, like a stale sequence number.\rTo see whether the report was applied in the health store, get deployed\rservice package health and check that the report appears in the HealthEvents\rsection."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.reportDeployedServicePackageHealth(nodeName,
      applicationId, servicePackageName, healthInformation, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: servicePackageName
          type:
            - string
          description: The name of the service package.
        - id: healthInformation
          type:
            - object
          description: "Describes the health information for the\rhealth report. This information needs to be present in all of the health\rreports sent to the health manager."
        - id: healthInformation.sourceId
          type:
            - string
          description: "The source name which identifies\rthe client/watchdog/system component which generated the health information."
        - id: healthInformation.property
          type:
            - string
          description: "The property of the health\rinformation. An entity can have health reports for different properties.\rThe property is a string and not a fixed enumeration to allow the reporter\rflexibility to categorize the state condition that triggers the report.\rFor example, a reporter with SourceId \"LocalWatchdog\" can monitor the state\rof the available disk on a node,\rso it can report \"AvailableDisk\" property on that node.\rThe same reporter can monitor the node connectivity, so it can report a\rproperty \"Connectivity\" on the same node.\rIn the health store, these reports are treated as separate health events for\rthe specified node.\r\rTogether with the SourceId, the property uniquely identifies the health\rinformation."
        - id: healthInformation.healthState
          type:
            - string
          description: "Possible values include:\r'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'"
        - id: healthInformation.timeToLiveInMilliSeconds
          type:
            - azure-servicefabric.moment.duration
          description: "The\rduration for which this health report is valid. This field is using ISO8601\rformat for specifying the duration.\rWhen clients report periodically, they should send reports with higher\rfrequency than time to live.\rIf clients report on transition, they can set the time to live to infinite.\rWhen time to live expires, the health event that contains the health\rinformation\ris either removed from health store, if RemoveWhenExpired is true, or\revaluated at error, if RemoveWhenExpired false.\r\rIf not specified, time to live defaults to infinite value."
          optional: true
        - id: healthInformation.description
          type:
            - string
          description: "The description of the\rhealth information. It represents free text used to add human readable\rinformation about the report.\rThe maximum string length for the description is 4096 characters.\rIf the provided string is longer, it will be automatically truncated.\rWhen truncated, the last characters of the description contain a marker\r\"[Truncated]\", and total string size is 4096 characters.\rThe presence of the marker indicates to users that truncation occurred.\rNote that when truncated, the description has less than 4096 characters from\rthe original string."
          optional: true
        - id: healthInformation.sequenceNumber
          type:
            - string
          description: "The sequence number for\rthis health report as a numeric string.\rThe report sequence number is used by the health store to detect stale\rreports.\rIf not specified, a sequence number is auto-generated by the health client\rwhen a report is added."
          optional: true
        - id: healthInformation.removeWhenExpired
          type:
            - boolean
          description: "Value that indicates\rwhether the report is removed from health store when it expires.\rIf set to true, the report is remopved from the health store after it\rexpires.\rIf set to false, the report is treated as an error when expired. The value\rof this property is false by default.\rWhen clients report periodically, they should set RemoveWhenExpired false\r(default).\rThis way, is the reporter has issues (eg. deadlock) and can't report, the\rentity is evaluated at error when the health report expires.\rThis flags the entity as being in Error health state."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.immediate
          type:
            - boolean
          description: "A flag which indicates whether the\rreport should be sent immediately.\rA health report is sent to a Service Fabric gateway Application, which\rforwards to the health store.\rIf Immediate is set to true, the report is sent immediately from Http\rGateway to the health store, regardless of the fabric client settings that\rthe Http Gateway Application is using.\rThis is useful for critical reports that should be sent as soon as possible.\rDepending on timing and other conditions, sending the report may still fail,\rfor example if the Http Gateway is closed or the message doesn't reach the\rGateway.\rIf Immediate is set to false, the report is sent based on the health client\rsettings from the Http Gateway. Therefore, it will be batched according to\rthe HealthReportSendInterval configuration.\rThis is the recommended setting because it allows the health client to\roptimize health reporting messages to health store as well as health report\rprocessing.\rBy default, reports are not sent immediately."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function reportDeployedServicePackageHealth(nodeName, applicationId,
        servicePackageName, healthInformation, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#deployedServicePackageToNodeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#deployedServicePackageToNodeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      deployedServicePackageToNodeWithHttpOperationResponse(nodeName,
      deployServicePackageToNodeDescription, options)
    summary: "Downloads packages associated with specified service manifest to\rimage cache on specified node.\r\rDownloads packages associated with specified service manifest to image cache\ron specified node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deployedServicePackageToNodeWithHttpOperationResponse(nodeName,
      deployServicePackageToNodeDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: deployServicePackageToNodeDescription
          type:
            - object
          description: "Describes information\rfor deploying a service package to a Service Fabric node."
        - id: deployServicePackageToNodeDescription.serviceManifestName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.applicationTypeName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.applicationTypeVersion
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.nodeName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.packageSharingPolicy
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deployedServicePackageToNodeWithHttpOperationResponse(nodeName,
        deployServicePackageToNodeDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#deployedServicePackageToNode'
    id: 'azure-servicefabric.ServiceFabricClient#deployedServicePackageToNode'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      deployedServicePackageToNode(nodeName,
      deployServicePackageToNodeDescription, options, optionalCallback)
    summary: "Downloads packages associated with specified service manifest to\rimage cache on specified node.\r\rDownloads packages associated with specified service manifest to image cache\ron specified node."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deployedServicePackageToNode(nodeName,
      deployServicePackageToNodeDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: deployServicePackageToNodeDescription
          type:
            - object
          description: "Describes information\rfor deploying a service package to a Service Fabric node."
        - id: deployServicePackageToNodeDescription.serviceManifestName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.applicationTypeName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.applicationTypeVersion
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.nodeName
          type:
            - string
          description: ''
        - id: deployServicePackageToNodeDescription.packageSharingPolicy
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deployedServicePackageToNode(nodeName,
        deployServicePackageToNodeDescription, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDeployedCodePackageInfoListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDeployedCodePackageInfoListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedCodePackageInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    summary: "Gets the list of code packages deployed on a Service Fabric node.\r\rGets the list of code packages deployed on a Service Fabric node for the\rgiven application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoListWithHttpOperationResponse(nodeName,
      applicationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of a service manifest\rregistered as part of an application type in a Service Fabric cluster."
          optional: true
        - id: options.codePackageName
          type:
            - string
          description: "The name of code package specified\rin service manifest registered as part of an application type in a Service\rFabric cluster."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeployedCodePackageInfoListWithHttpOperationResponse(nodeName,
        applicationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDeployedCodePackageInfoList'
    id: 'azure-servicefabric.ServiceFabricClient#getDeployedCodePackageInfoList'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDeployedCodePackageInfoList(nodeName, applicationId, options,
      optionalCallback)
    summary: "Gets the list of code packages deployed on a Service Fabric node.\r\rGets the list of code packages deployed on a Service Fabric node for the\rgiven application."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDeployedCodePackageInfoList(nodeName,
      applicationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceManifestName
          type:
            - string
          description: "The name of a service manifest\rregistered as part of an application type in a Service Fabric cluster."
          optional: true
        - id: options.codePackageName
          type:
            - string
          description: "The name of code package specified\rin service manifest registered as part of an application type in a Service\rFabric cluster."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeployedCodePackageInfoList(nodeName, applicationId,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#restartDeployedCodePackageWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#restartDeployedCodePackageWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      restartDeployedCodePackageWithHttpOperationResponse(nodeName,
      applicationId, restartDeployedCodePackageDescription, options)
    summary: "Restarts a code package deployed on a Service Fabric node in a\rcluster.\r\rRestarts a code package deployed on a Service Fabric node in a cluster. This\raborts the code package process, which will restart all the user service\rreplicas hosted in that process."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.restartDeployedCodePackageWithHttpOperationResponse(nodeName,
      applicationId, restartDeployedCodePackageDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: restartDeployedCodePackageDescription
          type:
            - object
          description: "Describes the deployed\rcode package on Service Fabric node to restart."
        - id: restartDeployedCodePackageDescription.serviceManifestName
          type:
            - string
          description: ''
        - id: restartDeployedCodePackageDescription.servicePackageActivationId
          type:
            - string
          description: ''
          optional: true
        - id: restartDeployedCodePackageDescription.codePackageName
          type:
            - string
          description: ''
        - id: restartDeployedCodePackageDescription.codePackageInstanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restartDeployedCodePackageWithHttpOperationResponse(nodeName,
        applicationId, restartDeployedCodePackageDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#restartDeployedCodePackage'
    id: 'azure-servicefabric.ServiceFabricClient#restartDeployedCodePackage'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      restartDeployedCodePackage(nodeName, applicationId,
      restartDeployedCodePackageDescription, options, optionalCallback)
    summary: "Restarts a code package deployed on a Service Fabric node in a\rcluster.\r\rRestarts a code package deployed on a Service Fabric node in a cluster. This\raborts the code package process, which will restart all the user service\rreplicas hosted in that process."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.restartDeployedCodePackage(nodeName,
      applicationId, restartDeployedCodePackageDescription, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: applicationId
          type:
            - string
          description: "The identity of the application. This is\rtypically the full name of the application without the 'fabric:' URI scheme.\rStarting from version 6.0, hierarchical names are delimited with the \"~\"\rcharacter. For example, if the application name is \"fabric://myapp/app1\",\rthe application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in\rprevious versions."
        - id: restartDeployedCodePackageDescription
          type:
            - object
          description: "Describes the deployed\rcode package on Service Fabric node to restart."
        - id: restartDeployedCodePackageDescription.serviceManifestName
          type:
            - string
          description: ''
        - id: restartDeployedCodePackageDescription.servicePackageActivationId
          type:
            - string
          description: ''
          optional: true
        - id: restartDeployedCodePackageDescription.codePackageName
          type:
            - string
          description: ''
        - id: restartDeployedCodePackageDescription.codePackageInstanceId
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function restartDeployedCodePackage(nodeName, applicationId,
        restartDeployedCodePackageDescription, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#createComposeDeploymentWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#createComposeDeploymentWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      createComposeDeploymentWithHttpOperationResponse(createComposeDeploymentDescription,
      options)
    summary: "Creates a Service Fabric compose deployment.\r\rCreates a Service Fabric compose deployment."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createComposeDeploymentWithHttpOperationResponse(createComposeDeploymentDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - object
          description: "Describes the compose\rdeployment that needs to be created."
        - id: createComposeDeploymentDescription.deploymentName
          type:
            - string
          description: ''
        - id: createComposeDeploymentDescription.composeFileContent
          type:
            - string
          description: "The\rcontent of the compose file that describes the deployment to create."
        - id: createComposeDeploymentDescription.registryCredential
          type:
            - object
          description: ''
          optional: true
        - id: >-
            createComposeDeploymentDescription.registryCredential.registryUserName
          type:
            - string
          description: "The\ruser name to connect to container registry."
          optional: true
        - id: >-
            createComposeDeploymentDescription.registryCredential.registryPassword
          type:
            - string
          description: "The\rpassword for supplied username to connect to container registry."
          optional: true
        - id: >-
            createComposeDeploymentDescription.registryCredential.passwordEncrypted
          type:
            - boolean
          description: Indicates that supplied container registry password is encrypted.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createComposeDeploymentWithHttpOperationResponse(createComposeDeploymentDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#createComposeDeployment'
    id: 'azure-servicefabric.ServiceFabricClient#createComposeDeployment'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      createComposeDeployment(createComposeDeploymentDescription, options,
      optionalCallback)
    summary: "Creates a Service Fabric compose deployment.\r\rCreates a Service Fabric compose deployment."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.createComposeDeployment(createComposeDeploymentDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: createComposeDeploymentDescription
          type:
            - object
          description: "Describes the compose\rdeployment that needs to be created."
        - id: createComposeDeploymentDescription.deploymentName
          type:
            - string
          description: ''
        - id: createComposeDeploymentDescription.composeFileContent
          type:
            - string
          description: "The\rcontent of the compose file that describes the deployment to create."
        - id: createComposeDeploymentDescription.registryCredential
          type:
            - object
          description: ''
          optional: true
        - id: >-
            createComposeDeploymentDescription.registryCredential.registryUserName
          type:
            - string
          description: "The\ruser name to connect to container registry."
          optional: true
        - id: >-
            createComposeDeploymentDescription.registryCredential.registryPassword
          type:
            - string
          description: "The\rpassword for supplied username to connect to container registry."
          optional: true
        - id: >-
            createComposeDeploymentDescription.registryCredential.passwordEncrypted
          type:
            - boolean
          description: Indicates that supplied container registry password is encrypted.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createComposeDeployment(createComposeDeploymentDescription,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getComposeDeploymentStatusWithHttpOperationResponse(deploymentName,
      options)
    summary: "Gets information about a Service Fabric compose deployment.\r\rReturns the status of the compose deployment that was created or in the\rprocess of being created in the Service Fabric cluster and whose name\rmatches the one specified as the parameter. The response includes the name,\rstatus and other details about the deployment."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusWithHttpOperationResponse(deploymentName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ComposeDeploymentStatusInfo>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ComposeDeploymentStatusInfo>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getComposeDeploymentStatusWithHttpOperationResponse(deploymentName,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatus'
    id: 'azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatus'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getComposeDeploymentStatus(deploymentName, options, optionalCallback)'
    summary: "Gets information about a Service Fabric compose deployment.\r\rReturns the status of the compose deployment that was created or in the\rprocess of being created in the Service Fabric cluster and whose name\rmatches the one specified as the parameter. The response includes the name,\rstatus and other details about the deployment."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatus(deploymentName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ComposeDeploymentStatusInfo} - The deserialized result object.'
        value: '{ComposeDeploymentStatusInfo} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComposeDeploymentStatusInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComposeDeploymentStatusInfo} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getComposeDeploymentStatus(deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getComposeDeploymentStatusListWithHttpOperationResponse(options)
    summary: "Gets the list of compose deployments created in the Service Fabric\rcluster.\r\rGets the status about the compose deployments that were created or in the\rprocess of being created in the Service Fabric cluster. The response\rincludes the name, status and other details about the compose deployments.\rIf the list of deployments do not fit in a page, one page of results is\rreturned as well as a continuation token which can be used to get the next\rpage."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusListWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PagedComposeDeploymentStatusInfoList>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<PagedComposeDeploymentStatusInfoList>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.maxResults
          type:
            - number
          description: "The maximum number of results to be\rreturned as part of the paged queries. This parameter defines the upper\rbound on the number of results returned. The results returned can be less\rthan the specified maximum results if they do not fit in the message as per\rthe max message size restrictions defined in the configuration. If this\rparameter is zero or not specified, the paged queries includes as much\rresults as possible that fit in the return message."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getComposeDeploymentStatusListWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusList'
    id: 'azure-servicefabric.ServiceFabricClient#getComposeDeploymentStatusList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getComposeDeploymentStatusList(options, optionalCallback)'
    summary: "Gets the list of compose deployments created in the Service Fabric\rcluster.\r\rGets the status about the compose deployments that were created or in the\rprocess of being created in the Service Fabric cluster. The response\rincludes the name, status and other details about the compose deployments.\rIf the list of deployments do not fit in a page, one page of results is\rreturned as well as a continuation token which can be used to get the next\rpage."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getComposeDeploymentStatusList(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {PagedComposeDeploymentStatusInfoList} - The deserialized result
          object.
        value: >-
          {PagedComposeDeploymentStatusInfoList} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedComposeDeploymentStatusInfoList} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PagedComposeDeploymentStatusInfoList} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.maxResults
          type:
            - number
          description: "The maximum number of results to be\rreturned as part of the paged queries. This parameter defines the upper\rbound on the number of results returned. The results returned can be less\rthan the specified maximum results if they do not fit in the message as per\rthe max message size restrictions defined in the configuration. If this\rparameter is zero or not specified, the paged queries includes as much\rresults as possible that fit in the return message."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getComposeDeploymentStatusList(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentUpgradeProgressWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentUpgradeProgressWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getComposeDeploymentUpgradeProgressWithHttpOperationResponse(deploymentName,
      options)
    summary: "Gets details for the latest upgrade performed on this Service\rFabric compose deployment.\r\rReturns the information about the state of the compose deployment upgrade\ralong with details to aid debugging application health issues."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgressWithHttpOperationResponse(deploymentName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ComposeDeploymentUpgradeProgressInfo>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ComposeDeploymentUpgradeProgressInfo>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getComposeDeploymentUpgradeProgressWithHttpOperationResponse(deploymentName,
        options)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentUpgradeProgress
    id: >-
      azure-servicefabric.ServiceFabricClient#getComposeDeploymentUpgradeProgress
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getComposeDeploymentUpgradeProgress(deploymentName, options,
      optionalCallback)
    summary: "Gets details for the latest upgrade performed on this Service\rFabric compose deployment.\r\rReturns the information about the state of the compose deployment upgrade\ralong with details to aid debugging application health issues."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getComposeDeploymentUpgradeProgress(deploymentName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {ComposeDeploymentUpgradeProgressInfo} - The deserialized result
          object.
        value: >-
          {ComposeDeploymentUpgradeProgressInfo} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComposeDeploymentUpgradeProgressInfo} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComposeDeploymentUpgradeProgressInfo} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getComposeDeploymentUpgradeProgress(deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#removeComposeDeploymentWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#removeComposeDeploymentWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'removeComposeDeploymentWithHttpOperationResponse(deploymentName, options)'
    summary: "Deletes an existing Service Fabric compose deployment from cluster.\r\rDeletes an existing Service Fabric compose deployment."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.removeComposeDeploymentWithHttpOperationResponse(deploymentName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        removeComposeDeploymentWithHttpOperationResponse(deploymentName,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#removeComposeDeployment'
    id: 'azure-servicefabric.ServiceFabricClient#removeComposeDeployment'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'removeComposeDeployment(deploymentName, options, optionalCallback)'
    summary: "Deletes an existing Service Fabric compose deployment from cluster.\r\rDeletes an existing Service Fabric compose deployment."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.removeComposeDeployment(deploymentName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function removeComposeDeployment(deploymentName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startComposeDeploymentUpgradeWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startComposeDeploymentUpgradeWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startComposeDeploymentUpgradeWithHttpOperationResponse(deploymentName,
      composeDeploymentUpgradeDescription, options)
    summary: "Starts upgrading a compose deployment in the Service Fabric\rcluster.\r\rValidates the supplied upgrade parameters and starts upgrading the\rdeployment if the parameters are valid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgradeWithHttpOperationResponse(deploymentName,
      composeDeploymentUpgradeDescription, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: composeDeploymentUpgradeDescription
          type:
            - object
          description: "Parameters for upgrading\rcompose deployment."
        - id: composeDeploymentUpgradeDescription.deploymentName
          type:
            - string
          description: ''
        - id: composeDeploymentUpgradeDescription.composeFileContent
          type:
            - string
          description: "The\rcontent of the compose file that describes the deployment to create."
        - id: composeDeploymentUpgradeDescription.registryCredential
          type:
            - object
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.registryCredential.registryUserName
          type:
            - string
          description: The user name to connect to container registry.
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.registryCredential.registryPassword
          type:
            - string
          description: The password for supplied username to connect to container registry.
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.registryCredential.passwordEncrypted
          type:
            - boolean
          description: Indicates that supplied container registry password is encrypted.
          optional: true
        - id: composeDeploymentUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rolling'"
        - id: composeDeploymentUpgradeDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type:
            - number
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.monitoringPolicy
          type:
            - object
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.monitoringPolicy.failureAction
          type:
            - string
          description: 'Possible values include: ''Invalid'', ''Rollback'', ''Manual'''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.applicationHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        startComposeDeploymentUpgradeWithHttpOperationResponse(deploymentName,
        composeDeploymentUpgradeDescription, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startComposeDeploymentUpgrade'
    id: 'azure-servicefabric.ServiceFabricClient#startComposeDeploymentUpgrade'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startComposeDeploymentUpgrade(deploymentName,
      composeDeploymentUpgradeDescription, options, optionalCallback)
    summary: "Starts upgrading a compose deployment in the Service Fabric\rcluster.\r\rValidates the supplied upgrade parameters and starts upgrading the\rdeployment if the parameters are valid."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startComposeDeploymentUpgrade(deploymentName,
      composeDeploymentUpgradeDescription, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: deploymentName
          type:
            - string
          description: The identity of the deployment.
        - id: composeDeploymentUpgradeDescription
          type:
            - object
          description: "Parameters for upgrading\rcompose deployment."
        - id: composeDeploymentUpgradeDescription.deploymentName
          type:
            - string
          description: ''
        - id: composeDeploymentUpgradeDescription.composeFileContent
          type:
            - string
          description: "The\rcontent of the compose file that describes the deployment to create."
        - id: composeDeploymentUpgradeDescription.registryCredential
          type:
            - object
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.registryCredential.registryUserName
          type:
            - string
          description: The user name to connect to container registry.
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.registryCredential.registryPassword
          type:
            - string
          description: The password for supplied username to connect to container registry.
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.registryCredential.passwordEncrypted
          type:
            - boolean
          description: Indicates that supplied container registry password is encrypted.
          optional: true
        - id: composeDeploymentUpgradeDescription.upgradeKind
          type:
            - string
          description: "Possible\rvalues include: 'Invalid', 'Rolling'"
        - id: composeDeploymentUpgradeDescription.rollingUpgradeMode
          type:
            - string
          description: "Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',\r'Monitored'"
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.upgradeReplicaSetCheckTimeoutInSeconds
          type:
            - number
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.forceRestart
          type:
            - boolean
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.monitoringPolicy
          type:
            - object
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.monitoringPolicy.failureAction
          type:
            - string
          description: 'Possible values include: ''Invalid'', ''Rollback'', ''Manual'''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.healthCheckWaitDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.healthCheckStableDurationInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.healthCheckRetryTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.upgradeTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.monitoringPolicy.upgradeDomainTimeoutInMilliseconds
          type:
            - string
          description: ''
          optional: true
        - id: composeDeploymentUpgradeDescription.applicationHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: >-
            Indicates whether warnings are treated with the same severity as
            errors.
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.maxPercentUnhealthyDeployedApplications
          type:
            - number
          description: "The maximum allowed percentage of unhealthy deployed applications. Allowed\rvalues are Byte values from zero to 100.\rThe percentage represents the maximum tolerated percentage of deployed\rapplications that can be unhealthy before the application is considered in\rerror.\rThis is calculated by dividing the number of unhealthy deployed applications\rover the number of nodes where the application is currently deployed on in\rthe cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService
          type:
            - number
          description: "The maximum allowed percentage of unhealthy partitions per service. Allowed\rvalues are Byte values from zero to 100\r\rThe percentage represents the maximum tolerated percentage of partitions\rthat can be unhealthy before the service is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rpartition, the health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy partitions\rover the total number of partitions in the service.\rThe computation rounds up to tolerate one failure on small numbers of\rpartitions. Default percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition
          type:
            - number
          description: "The maximum allowed percentage of unhealthy replicas per partition. Allowed\rvalues are Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of replicas that\rcan be unhealthy before the partition is considered in error.\rIf the percentage is respected but there is at least one unhealthy replica,\rthe health is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy replicas\rover the total number of replicas in the partition.\rThe computation rounds up to tolerate one failure on small numbers of\rreplicas. Default percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices
          type:
            - number
          description: "The maximum maximum allowed percentage of unhealthy services. Allowed values\rare Byte values from zero to 100.\r\rThe percentage represents the maximum tolerated percentage of services that\rcan be unhealthy before the application is considered in error.\rIf the percentage is respected but there is at least one unhealthy service,\rthe health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy services of the\rspecific service type over the total number of services of the specific\rservice type.\rThe computation rounds up to tolerate one failure on small numbers of\rservices. Default percentage is zero."
          optional: true
        - id: >-
            composeDeploymentUpgradeDescription.applicationHealthPolicy.serviceTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function startComposeDeploymentUpgrade(deploymentName,
        composeDeploymentUpgradeDescription, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startChaosWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startChaosWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'startChaosWithHttpOperationResponse(chaosParameters, options)'
    summary: "Starts Chaos in the cluster.\r\rIf Chaos is not already running in the cluster, it starts Chaos with the\rpassed in Chaos parameters.\rIf Chaos is already running when this call is made, the call fails with the\rerror code FABRIC_E_CHAOS_ALREADY_RUNNING.\rPlease refer to the article [Induce controlled Chaos in Service Fabric\rclusters](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos)\rfor more details."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startChaosWithHttpOperationResponse(chaosParameters,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: chaosParameters
          type:
            - object
          description: "Describes all the parameters to configure a\rChaos run."
        - id: chaosParameters.timeToRunInSeconds
          type:
            - string
          description: "Total time (in seconds)\rfor which Chaos will run before automatically stopping. The maximum allowed\rvalue is 4,294,967,295 (System.UInt32.MaxValue)."
          optional: true
        - id: chaosParameters.maxClusterStabilizationTimeoutInSeconds
          type:
            - number
          description: "The maximum amount of time to wait for all cluster entities to become stable\rand healthy. Chaos executes in iterations and at the start of each iteration\rit validates the health of cluster entities.\rDuring validation if a cluster entity is not stable and healthy within\rMaxClusterStabilizationTimeoutInSeconds, Chaos generates a validation failed\revent."
          optional: true
        - id: chaosParameters.maxConcurrentFaults
          type:
            - number
          description: "MaxConcurrentFaults is\rthe maximum number of concurrent faults induced per iteration.\rChaos executes in iterations and two consecutive iterations are separated by\ra validation phase.\rThe higher the concurrency, the more aggressive the injection of faults --\rinducing more complex series of states to uncover bugs.\rThe recommendation is to start with a value of 2 or 3 and to exercise\rcaution while moving up."
          optional: true
        - id: chaosParameters.enableMoveReplicaFaults
          type:
            - boolean
          description: "Enables or\rdisables the move primary and move secondary faults."
          optional: true
        - id: chaosParameters.waitTimeBetweenFaultsInSeconds
          type:
            - number
          description: "Wait time\r(in seconds) between consecutive faults within a single iteration.\rThe larger the value, the lower the overlapping between faults and the\rsimpler the sequence of state transitions that the cluster goes through.\rThe recommendation is to start with a value between 1 and 5 and exercise\rcaution while moving up."
          optional: true
        - id: chaosParameters.waitTimeBetweenIterationsInSeconds
          type:
            - number
          description: "Time-separation (in seconds) between two consecutive iterations of Chaos.\rThe larger the value, the lower the fault injection rate."
          optional: true
        - id: chaosParameters.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: chaosParameters.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: "Indicates\rwhether warnings are treated with the same severity as errors."
          optional: true
        - id: chaosParameters.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum\rallowed percentage of unhealthy nodes before reporting an error. For\rexample, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: chaosParameters.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: chaosParameters.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: chaosParameters.context
          type:
            - object
          description: ''
          optional: true
        - id: chaosParameters.context.map
          type:
            - object
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function startChaosWithHttpOperationResponse(chaosParameters, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startChaos'
    id: 'azure-servicefabric.ServiceFabricClient#startChaos'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'startChaos(chaosParameters, options, optionalCallback)'
    summary: "Starts Chaos in the cluster.\r\rIf Chaos is not already running in the cluster, it starts Chaos with the\rpassed in Chaos parameters.\rIf Chaos is already running when this call is made, the call fails with the\rerror code FABRIC_E_CHAOS_ALREADY_RUNNING.\rPlease refer to the article [Induce controlled Chaos in Service Fabric\rclusters](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos)\rfor more details."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startChaos(chaosParameters,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: chaosParameters
          type:
            - object
          description: "Describes all the parameters to configure a\rChaos run."
        - id: chaosParameters.timeToRunInSeconds
          type:
            - string
          description: "Total time (in seconds)\rfor which Chaos will run before automatically stopping. The maximum allowed\rvalue is 4,294,967,295 (System.UInt32.MaxValue)."
          optional: true
        - id: chaosParameters.maxClusterStabilizationTimeoutInSeconds
          type:
            - number
          description: "The maximum amount of time to wait for all cluster entities to become stable\rand healthy. Chaos executes in iterations and at the start of each iteration\rit validates the health of cluster entities.\rDuring validation if a cluster entity is not stable and healthy within\rMaxClusterStabilizationTimeoutInSeconds, Chaos generates a validation failed\revent."
          optional: true
        - id: chaosParameters.maxConcurrentFaults
          type:
            - number
          description: "MaxConcurrentFaults is\rthe maximum number of concurrent faults induced per iteration.\rChaos executes in iterations and two consecutive iterations are separated by\ra validation phase.\rThe higher the concurrency, the more aggressive the injection of faults --\rinducing more complex series of states to uncover bugs.\rThe recommendation is to start with a value of 2 or 3 and to exercise\rcaution while moving up."
          optional: true
        - id: chaosParameters.enableMoveReplicaFaults
          type:
            - boolean
          description: "Enables or\rdisables the move primary and move secondary faults."
          optional: true
        - id: chaosParameters.waitTimeBetweenFaultsInSeconds
          type:
            - number
          description: "Wait time\r(in seconds) between consecutive faults within a single iteration.\rThe larger the value, the lower the overlapping between faults and the\rsimpler the sequence of state transitions that the cluster goes through.\rThe recommendation is to start with a value between 1 and 5 and exercise\rcaution while moving up."
          optional: true
        - id: chaosParameters.waitTimeBetweenIterationsInSeconds
          type:
            - number
          description: "Time-separation (in seconds) between two consecutive iterations of Chaos.\rThe larger the value, the lower the fault injection rate."
          optional: true
        - id: chaosParameters.clusterHealthPolicy
          type:
            - object
          description: ''
          optional: true
        - id: chaosParameters.clusterHealthPolicy.considerWarningAsError
          type:
            - boolean
          description: "Indicates\rwhether warnings are treated with the same severity as errors."
          optional: true
        - id: chaosParameters.clusterHealthPolicy.maxPercentUnhealthyNodes
          type:
            - number
          description: "The maximum\rallowed percentage of unhealthy nodes before reporting an error. For\rexample, to allow 10% of nodes to be unhealthy, this value would be 10.\r\rThe percentage represents the maximum tolerated percentage of nodes that can\rbe unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy node, the\rhealth is evaluated as Warning.\rThe percentage is calculated by dividing the number of unhealthy nodes over\rthe total number of nodes in the cluster.\rThe computation rounds up to tolerate one failure on small numbers of nodes.\rDefault percentage is zero.\r\rIn large clusters, some nodes will always be down or out for repairs, so\rthis percentage should be configured to tolerate that."
          optional: true
        - id: chaosParameters.clusterHealthPolicy.maxPercentUnhealthyApplications
          type:
            - number
          description: "The\rmaximum allowed percentage of unhealthy applications before reporting an\rerror. For example, to allow 10% of applications to be unhealthy, this value\rwould be 10.\r\rThe percentage represents the maximum tolerated percentage of applications\rthat can be unhealthy before the cluster is considered in error.\rIf the percentage is respected but there is at least one unhealthy\rapplication, the health is evaluated as Warning.\rThis is calculated by dividing the number of unhealthy applications over the\rtotal number of application instances in the cluster, excluding applications\rof application types that are included in the\rApplicationTypeHealthPolicyMap.\rThe computation rounds up to tolerate one failure on small numbers of\rapplications. Default percentage is zero."
          optional: true
        - id: chaosParameters.clusterHealthPolicy.applicationTypeHealthPolicyMap
          type:
            - array
          description: ''
          optional: true
        - id: chaosParameters.context
          type:
            - object
          description: ''
          optional: true
        - id: chaosParameters.context.map
          type:
            - object
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function startChaos(chaosParameters, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#stopChaosWithHttpOperationResponse'
    id: 'azure-servicefabric.ServiceFabricClient#stopChaosWithHttpOperationResponse'
    parent: azure-servicefabric.ServiceFabricClient
    name: stopChaosWithHttpOperationResponse(options)
    summary: "Stops Chaos in the cluster if it is already running, otherwise it\rdoes nothing.\r\rStops Chaos from scheduling further faults; but, the in-flight faults are\rnot affected."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.stopChaosWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function stopChaosWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#stopChaos'
    id: 'azure-servicefabric.ServiceFabricClient#stopChaos'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'stopChaos(options, optionalCallback)'
    summary: "Stops Chaos in the cluster if it is already running, otherwise it\rdoes nothing.\r\rStops Chaos from scheduling further faults; but, the in-flight faults are\rnot affected."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.stopChaos(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function stopChaos(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getChaosReportWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getChaosReportWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getChaosReportWithHttpOperationResponse(options)
    summary: "Gets the next segment of the Chaos report based on the passed-in\rcontinuation token or the passed-in time-range.\r\rYou can either specify the ContinuationToken to get the next segment of the\rChaos report or you can specify the time-range\rthrough StartTimeUtc and EndTimeUtc, but you cannot specify both the\rContinuationToken and the time-range in the same call.\rWhen there are more than 100 Chaos events, the Chaos report is returned in\rsegments where a segment contains no more than 100 Chaos events."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getChaosReportWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<ChaosReport>} - The deserialized result object.'
        value: '{HttpOperationResponse<ChaosReport>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.startTimeUtc
          type:
            - string
          description: "The count of ticks representing the\rstart time of the time range for which a Chaos report is to be generated.\rPlease consult [DateTime.Ticks\rProperty](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\rfor details about tick."
          optional: true
        - id: options.endTimeUtc
          type:
            - string
          description: "The count of ticks representing the end\rtime of the time range for which a Chaos report is to be generated. Please\rconsult [DateTime.Ticks\rProperty](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\rfor details about tick."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getChaosReportWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getChaosReport'
    id: 'azure-servicefabric.ServiceFabricClient#getChaosReport'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getChaosReport(options, optionalCallback)'
    summary: "Gets the next segment of the Chaos report based on the passed-in\rcontinuation token or the passed-in time-range.\r\rYou can either specify the ContinuationToken to get the next segment of the\rChaos report or you can specify the time-range\rthrough StartTimeUtc and EndTimeUtc, but you cannot specify both the\rContinuationToken and the time-range in the same call.\rWhen there are more than 100 Chaos events, the Chaos report is returned in\rsegments where a segment contains no more than 100 Chaos events."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getChaosReport(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ChaosReport} - The deserialized result object.'
        value: '{ChaosReport} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ChaosReport} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ChaosReport} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.continuationToken
          type:
            - string
          description: "The continuation token parameter\ris used to obtain next set of results. A continuation token with a non empty\rvalue is included in the response of the API when the results from the\rsystem do not fit in a single response. When this value is passed to the\rnext API call, the API returns next set of results. If there are no further\rresults then the continuation token does not contain a value. The value of\rthis parameter should not be URL encoded."
          optional: true
        - id: options.startTimeUtc
          type:
            - string
          description: "The count of ticks representing the\rstart time of the time range for which a Chaos report is to be generated.\rPlease consult [DateTime.Ticks\rProperty](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\rfor details about tick."
          optional: true
        - id: options.endTimeUtc
          type:
            - string
          description: "The count of ticks representing the end\rtime of the time range for which a Chaos report is to be generated. Please\rconsult [DateTime.Ticks\rProperty](https://msdn.microsoft.com/en-us/library/system.datetime.ticks%28v=vs.110%29)\rfor details about tick."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getChaosReport(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#uploadFileWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#uploadFileWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'uploadFileWithHttpOperationResponse(contentPath, options)'
    summary: "Uploads contents of the file to the image store.\r\rUploads contents of the file to the image store. Use this API if the file is\rsmall enough to upload again if the connection fails. The file's data needs\rto be added to the request body. The contents will be uploaded to the\rspecified path. Image store service uses a mark file to indicate the\ravailability of the folder. The mark file is an empty file named \"_.dir\".\rThe mark file is generated by the image store service when all files in a\rfolder are uploaded. When using File-by-File approach to upload application\rpackage in REST, the image store service isn't aware of the file hierarchy\rof the application package; you need to create a mark file per folder and\rupload it last, to let the image store service know that the folder is\rcomplete."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.uploadFileWithHttpOperationResponse(contentPath,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentPath
          type:
            - string
          description: "Relative path to file or folder in the image\rstore from its root."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function uploadFileWithHttpOperationResponse(contentPath, options)'
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#uploadFile'
    id: 'azure-servicefabric.ServiceFabricClient#uploadFile'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'uploadFile(contentPath, options, optionalCallback)'
    summary: "Uploads contents of the file to the image store.\r\rUploads contents of the file to the image store. Use this API if the file is\rsmall enough to upload again if the connection fails. The file's data needs\rto be added to the request body. The contents will be uploaded to the\rspecified path. Image store service uses a mark file to indicate the\ravailability of the folder. The mark file is an empty file named \"_.dir\".\rThe mark file is generated by the image store service when all files in a\rfolder are uploaded. When using File-by-File approach to upload application\rpackage in REST, the image store service isn't aware of the file hierarchy\rof the application package; you need to create a mark file per folder and\rupload it last, to let the image store service know that the folder is\rcomplete."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.uploadFile(contentPath, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentPath
          type:
            - string
          description: "Relative path to file or folder in the image\rstore from its root."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function uploadFile(contentPath, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getImageStoreContentWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getImageStoreContentWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getImageStoreContentWithHttpOperationResponse(contentPath, options)'
    summary: "Gets the image store content information.\r\rReturns the information about the image store content at the specified\rcontentPath relative to the root of the image store."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getImageStoreContentWithHttpOperationResponse(contentPath,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImageStoreContent>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ImageStoreContent>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentPath
          type:
            - string
          description: "Relative path to file or folder in the image\rstore from its root."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getImageStoreContentWithHttpOperationResponse(contentPath,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getImageStoreContent'
    id: 'azure-servicefabric.ServiceFabricClient#getImageStoreContent'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getImageStoreContent(contentPath, options, optionalCallback)'
    summary: "Gets the image store content information.\r\rReturns the information about the image store content at the specified\rcontentPath relative to the root of the image store."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getImageStoreContent(contentPath,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImageStoreContent} - The deserialized result object.'
        value: '{ImageStoreContent} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImageStoreContent} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImageStoreContent} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentPath
          type:
            - string
          description: "Relative path to file or folder in the image\rstore from its root."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getImageStoreContent(contentPath, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#deleteImageStoreContentWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#deleteImageStoreContentWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'deleteImageStoreContentWithHttpOperationResponse(contentPath, options)'
    summary: "Deletes existing image store content.\r\rDeletes existing image store content being found within the given image\rstore relative path. This can be used to delete uploaded application\rpackages once they are provisioned."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteImageStoreContentWithHttpOperationResponse(contentPath,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: contentPath
          type:
            - string
          description: "Relative path to file or folder in the image\rstore from its root."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteImageStoreContentWithHttpOperationResponse(contentPath,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#deleteImageStoreContent'
    id: 'azure-servicefabric.ServiceFabricClient#deleteImageStoreContent'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'deleteImageStoreContent(contentPath, options, optionalCallback)'
    summary: "Deletes existing image store content.\r\rDeletes existing image store content being found within the given image\rstore relative path. This can be used to delete uploaded application\rpackages once they are provisioned."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.deleteImageStoreContent(contentPath,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: contentPath
          type:
            - string
          description: "Relative path to file or folder in the image\rstore from its root."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteImageStoreContent(contentPath, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getImageStoreRootContentWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getImageStoreRootContentWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: getImageStoreRootContentWithHttpOperationResponse(options)
    summary: "Gets the content information at the root of the image store.\r\rReturns the information about the image store content at the root of the\rimage store."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getImageStoreRootContentWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImageStoreContent>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ImageStoreContent>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function getImageStoreRootContentWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getImageStoreRootContent'
    id: 'azure-servicefabric.ServiceFabricClient#getImageStoreRootContent'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getImageStoreRootContent(options, optionalCallback)'
    summary: "Gets the content information at the root of the image store.\r\rReturns the information about the image store content at the root of the\rimage store."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getImageStoreRootContent(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImageStoreContent} - The deserialized result object.'
        value: '{ImageStoreContent} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImageStoreContent} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImageStoreContent} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getImageStoreRootContent(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#copyImageStoreContentWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#copyImageStoreContentWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      copyImageStoreContentWithHttpOperationResponse(imageStoreCopyDescription,
      options)
    summary: "Copies image store content internally\r\rCopies the image store content from the source image store relative path to\rthe destination image store relative path."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.copyImageStoreContentWithHttpOperationResponse(imageStoreCopyDescription,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: imageStoreCopyDescription
          type:
            - object
          description: "Describes the copy description for\rthe image store."
        - id: imageStoreCopyDescription.remoteSource
          type:
            - string
          description: "The relative path of\rsource image store content to be copied from."
        - id: imageStoreCopyDescription.remoteDestination
          type:
            - string
          description: "The relative\rpath of destination image store content to be copied to."
        - id: imageStoreCopyDescription.skipFiles
          type:
            - array
          description: "The list of the file\rnames to be skipped for copying."
          optional: true
        - id: imageStoreCopyDescription.checkMarkFile
          type:
            - boolean
          description: "Indicates whether\rto check mark file during copying. The property is true if checking mark\rfile is required, false otherwise. The mark file is used to check whether\rthe folder is well constructed. If the property is true and mark file does\rnot exist, the copy is skipped."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        copyImageStoreContentWithHttpOperationResponse(imageStoreCopyDescription,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#copyImageStoreContent'
    id: 'azure-servicefabric.ServiceFabricClient#copyImageStoreContent'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      copyImageStoreContent(imageStoreCopyDescription, options,
      optionalCallback)
    summary: "Copies image store content internally\r\rCopies the image store content from the source image store relative path to\rthe destination image store relative path."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.copyImageStoreContent(imageStoreCopyDescription,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: imageStoreCopyDescription
          type:
            - object
          description: "Describes the copy description for\rthe image store."
        - id: imageStoreCopyDescription.remoteSource
          type:
            - string
          description: "The relative path of\rsource image store content to be copied from."
        - id: imageStoreCopyDescription.remoteDestination
          type:
            - string
          description: "The relative\rpath of destination image store content to be copied to."
        - id: imageStoreCopyDescription.skipFiles
          type:
            - array
          description: "The list of the file\rnames to be skipped for copying."
          optional: true
        - id: imageStoreCopyDescription.checkMarkFile
          type:
            - boolean
          description: "Indicates whether\rto check mark file during copying. The property is true if checking mark\rfile is required, false otherwise. The mark file is used to check whether\rthe folder is well constructed. If the property is true and mark file does\rnot exist, the copy is skipped."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function copyImageStoreContent(imageStoreCopyDescription, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#invokeInfrastructureCommandWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#invokeInfrastructureCommandWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'invokeInfrastructureCommandWithHttpOperationResponse(command, options)'
    summary: "Invokes an administrative command on the given Infrastructure\rService instance.\r\rFor clusters that have one or more instances of the Infrastructure Service\rconfigured,\rthis API provides a way to send infrastructure-specific commands to a\rparticular\rinstance of the Infrastructure Service.\r\rAvailable commands and their corresponding response formats vary depending\rupon\rthe infrastructure on which the cluster is running.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommandWithHttpOperationResponse(command,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<String>} - The deserialized result object.'
        value: '{HttpOperationResponse<String>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: command
          type:
            - string
          description: "The text of the command to be invoked. The content\rof the command is infrastructure-specific."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceId
          type:
            - string
          description: "The identity of the infrastructure\rservice. This is  the full name of the infrastructure service without the\r'fabric:' URI scheme. This parameter required only for the cluster that have\rmore than one instance of infrastructure service running."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function invokeInfrastructureCommandWithHttpOperationResponse(command,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#invokeInfrastructureCommand'
    id: 'azure-servicefabric.ServiceFabricClient#invokeInfrastructureCommand'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'invokeInfrastructureCommand(command, options, optionalCallback)'
    summary: "Invokes an administrative command on the given Infrastructure\rService instance.\r\rFor clusters that have one or more instances of the Infrastructure Service\rconfigured,\rthis API provides a way to send infrastructure-specific commands to a\rparticular\rinstance of the Infrastructure Service.\r\rAvailable commands and their corresponding response formats vary depending\rupon\rthe infrastructure on which the cluster is running.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.invokeInfrastructureCommand(command,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{String} - The deserialized result object.'
        value: '{String} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: command
          type:
            - string
          description: "The text of the command to be invoked. The content\rof the command is infrastructure-specific."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceId
          type:
            - string
          description: "The identity of the infrastructure\rservice. This is  the full name of the infrastructure service without the\r'fabric:' URI scheme. This parameter required only for the cluster that have\rmore than one instance of infrastructure service running."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function invokeInfrastructureCommand(command, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#invokeInfrastructureQueryWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#invokeInfrastructureQueryWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'invokeInfrastructureQueryWithHttpOperationResponse(command, options)'
    summary: "Invokes a read-only query on the given infrastructure service\rinstance.\r\rFor clusters that have one or more instances of the Infrastructure Service\rconfigured,\rthis API provides a way to send infrastructure-specific queries to a\rparticular\rinstance of the Infrastructure Service.\r\rAvailable commands and their corresponding response formats vary depending\rupon\rthe infrastructure on which the cluster is running.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.invokeInfrastructureQueryWithHttpOperationResponse(command,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<String>} - The deserialized result object.'
        value: '{HttpOperationResponse<String>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: command
          type:
            - string
          description: "The text of the command to be invoked. The content\rof the command is infrastructure-specific."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceId
          type:
            - string
          description: "The identity of the infrastructure\rservice. This is  the full name of the infrastructure service without the\r'fabric:' URI scheme. This parameter required only for the cluster that have\rmore than one instance of infrastructure service running."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function invokeInfrastructureQueryWithHttpOperationResponse(command,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#invokeInfrastructureQuery'
    id: 'azure-servicefabric.ServiceFabricClient#invokeInfrastructureQuery'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'invokeInfrastructureQuery(command, options, optionalCallback)'
    summary: "Invokes a read-only query on the given infrastructure service\rinstance.\r\rFor clusters that have one or more instances of the Infrastructure Service\rconfigured,\rthis API provides a way to send infrastructure-specific queries to a\rparticular\rinstance of the Infrastructure Service.\r\rAvailable commands and their corresponding response formats vary depending\rupon\rthe infrastructure on which the cluster is running.\r\rThis API supports the Service Fabric platform; it is not meant to be used\rdirectly from your code."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.invokeInfrastructureQuery(command,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{String} - The deserialized result object.'
        value: '{String} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {string} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: command
          type:
            - string
          description: "The text of the command to be invoked. The content\rof the command is infrastructure-specific."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.serviceId
          type:
            - string
          description: "The identity of the infrastructure\rservice. This is  the full name of the infrastructure service without the\r'fabric:' URI scheme. This parameter required only for the cluster that have\rmore than one instance of infrastructure service running."
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function invokeInfrastructureQuery(command, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startDataLossWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startDataLossWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startDataLossWithHttpOperationResponse(serviceId, partitionId,
      operationId, dataLossMode, options)
    summary: "This API will induce data loss for the specified partition. It will\rtrigger a call to the OnDataLossAsync API of the partition.\r\rThis API will induce data loss for the specified partition. It will trigger\ra call to the OnDataLoss API of the partition.\rActual data loss will depend on the specified DataLossMode\rPartialDataLoss - Only a quorum of replicas are removed and OnDataLoss is\rtriggered for the partition but actual data loss depends on the presence of\rin-flight replication.\rFullDataLoss - All replicas are removed hence all data is lost and\rOnDataLoss is triggered.\r\rThis API should only be called with a stateful service as the target.\r\rCalling this API with a system service as the target is not advised.\r\rNote:  Once this API has been called, it cannot be reversed. Calling\rCancelOperation will only stop execution and clean up internal system state.\rIt will not restore data if the command has progressed far enough to cause\rdata loss.\r\rCall the GetDataLossProgress API with the same OperationId to return\rinformation on the operation started with this API."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startDataLossWithHttpOperationResponse(serviceId,
      partitionId, operationId, dataLossMode, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: dataLossMode
          type:
            - string
          description: "This enum is passed to the StartDataLoss API to\rindicate what type of data loss to induce.\r- Invalid - Reserved.  Do not pass into API.\r- PartialDataLoss - PartialDataLoss option will cause a quorum of replicas\rto go down, triggering an OnDataLoss event in the system for the given\rpartition.\r- FullDataLoss - FullDataLoss option will drop all the replicas which means\rthat all the data will be lost.\r. Possible values include: 'Invalid', 'PartialDataLoss', 'FullDataLoss'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startDataLossWithHttpOperationResponse(serviceId, partitionId,
        operationId, dataLossMode, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startDataLoss'
    id: 'azure-servicefabric.ServiceFabricClient#startDataLoss'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startDataLoss(serviceId, partitionId, operationId, dataLossMode, options,
      optionalCallback)
    summary: "This API will induce data loss for the specified partition. It will\rtrigger a call to the OnDataLossAsync API of the partition.\r\rThis API will induce data loss for the specified partition. It will trigger\ra call to the OnDataLoss API of the partition.\rActual data loss will depend on the specified DataLossMode\rPartialDataLoss - Only a quorum of replicas are removed and OnDataLoss is\rtriggered for the partition but actual data loss depends on the presence of\rin-flight replication.\rFullDataLoss - All replicas are removed hence all data is lost and\rOnDataLoss is triggered.\r\rThis API should only be called with a stateful service as the target.\r\rCalling this API with a system service as the target is not advised.\r\rNote:  Once this API has been called, it cannot be reversed. Calling\rCancelOperation will only stop execution and clean up internal system state.\rIt will not restore data if the command has progressed far enough to cause\rdata loss.\r\rCall the GetDataLossProgress API with the same OperationId to return\rinformation on the operation started with this API."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startDataLoss(serviceId,
      partitionId, operationId, dataLossMode, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: dataLossMode
          type:
            - string
          description: "This enum is passed to the StartDataLoss API to\rindicate what type of data loss to induce.\r- Invalid - Reserved.  Do not pass into API.\r- PartialDataLoss - PartialDataLoss option will cause a quorum of replicas\rto go down, triggering an OnDataLoss event in the system for the given\rpartition.\r- FullDataLoss - FullDataLoss option will drop all the replicas which means\rthat all the data will be lost.\r. Possible values include: 'Invalid', 'PartialDataLoss', 'FullDataLoss'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function startDataLoss(serviceId, partitionId, operationId,
        dataLossMode, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getDataLossProgressWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getDataLossProgressWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDataLossProgressWithHttpOperationResponse(serviceId, partitionId,
      operationId, options)
    summary: "Gets the progress of a partition data loss operation started using\rthe StartDataLoss API.\r\rGets the progress of a data loss operation started with StartDataLoss, using\rthe OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDataLossProgressWithHttpOperationResponse(serviceId,
      partitionId, operationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PartitionDataLossProgress>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PartitionDataLossProgress>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDataLossProgressWithHttpOperationResponse(serviceId,
        partitionId, operationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getDataLossProgress'
    id: 'azure-servicefabric.ServiceFabricClient#getDataLossProgress'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getDataLossProgress(serviceId, partitionId, operationId, options,
      optionalCallback)
    summary: "Gets the progress of a partition data loss operation started using\rthe StartDataLoss API.\r\rGets the progress of a data loss operation started with StartDataLoss, using\rthe OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getDataLossProgress(serviceId,
      partitionId, operationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PartitionDataLossProgress} - The deserialized result object.'
        value: '{PartitionDataLossProgress} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionDataLossProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionDataLossProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDataLossProgress(serviceId, partitionId, operationId,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startQuorumLossWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startQuorumLossWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startQuorumLossWithHttpOperationResponse(serviceId, partitionId,
      operationId, quorumLossMode, quorumLossDuration, options)
    summary: "Induces quorum loss for a given stateful service partition.\r\rInduces quorum loss for a given stateful service partition.  This API is\ruseful for a temporary quorum loss situation on your service.\r\rCall the GetQuorumLossProgress API with the same OperationId to return\rinformation on the operation started with this API.\r\rThis can only be called on stateful persisted (HasPersistedState==true)\rservices.  Do not use this API on stateless services or stateful in-memory\ronly services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startQuorumLossWithHttpOperationResponse(serviceId,
      partitionId, operationId, quorumLossMode, quorumLossDuration, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: quorumLossMode
          type:
            - string
          description: "This enum is passed to the StartQuorumLoss\rAPI to indicate what type of quorum loss to induce.\r- Invalid - Reserved.  Do not pass into API.\r- QuorumReplicas - Partial Quorum loss mode : Minimum number of replicas for\ra partition will be down that will cause a quorum loss.\r- AllReplicas- Full Quorum loss mode : All replicas for a partition will be\rdown that will cause a quorum loss.\r. Possible values include: 'Invalid', 'QuorumReplicas', 'AllReplicas'"
        - id: quorumLossDuration
          type:
            - number
          description: "The amount of time for which the\rpartition will be kept in quorum loss.  This must be specified in seconds."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startQuorumLossWithHttpOperationResponse(serviceId,
        partitionId, operationId, quorumLossMode, quorumLossDuration, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startQuorumLoss'
    id: 'azure-servicefabric.ServiceFabricClient#startQuorumLoss'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startQuorumLoss(serviceId, partitionId, operationId, quorumLossMode,
      quorumLossDuration, options, optionalCallback)
    summary: "Induces quorum loss for a given stateful service partition.\r\rInduces quorum loss for a given stateful service partition.  This API is\ruseful for a temporary quorum loss situation on your service.\r\rCall the GetQuorumLossProgress API with the same OperationId to return\rinformation on the operation started with this API.\r\rThis can only be called on stateful persisted (HasPersistedState==true)\rservices.  Do not use this API on stateless services or stateful in-memory\ronly services."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startQuorumLoss(serviceId,
      partitionId, operationId, quorumLossMode, quorumLossDuration, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: quorumLossMode
          type:
            - string
          description: "This enum is passed to the StartQuorumLoss\rAPI to indicate what type of quorum loss to induce.\r- Invalid - Reserved.  Do not pass into API.\r- QuorumReplicas - Partial Quorum loss mode : Minimum number of replicas for\ra partition will be down that will cause a quorum loss.\r- AllReplicas- Full Quorum loss mode : All replicas for a partition will be\rdown that will cause a quorum loss.\r. Possible values include: 'Invalid', 'QuorumReplicas', 'AllReplicas'"
        - id: quorumLossDuration
          type:
            - number
          description: "The amount of time for which the\rpartition will be kept in quorum loss.  This must be specified in seconds."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function startQuorumLoss(serviceId, partitionId, operationId,
        quorumLossMode, quorumLossDuration, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getQuorumLossProgressWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getQuorumLossProgressWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getQuorumLossProgressWithHttpOperationResponse(serviceId, partitionId,
      operationId, options)
    summary: "Gets the progress of a quorum loss operation on a partition started\rusing the StartQuorumLoss API.\r\rGets the progress of a quorum loss operation started with StartQuorumLoss,\rusing the provided OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getQuorumLossProgressWithHttpOperationResponse(serviceId,
      partitionId, operationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PartitionQuorumLossProgress>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<PartitionQuorumLossProgress>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getQuorumLossProgressWithHttpOperationResponse(serviceId,
        partitionId, operationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getQuorumLossProgress'
    id: 'azure-servicefabric.ServiceFabricClient#getQuorumLossProgress'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getQuorumLossProgress(serviceId, partitionId, operationId, options,
      optionalCallback)
    summary: "Gets the progress of a quorum loss operation on a partition started\rusing the StartQuorumLoss API.\r\rGets the progress of a quorum loss operation started with StartQuorumLoss,\rusing the provided OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getQuorumLossProgress(serviceId,
      partitionId, operationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PartitionQuorumLossProgress} - The deserialized result object.'
        value: '{PartitionQuorumLossProgress} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionQuorumLossProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionQuorumLossProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getQuorumLossProgress(serviceId, partitionId, operationId,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startPartitionRestartWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startPartitionRestartWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startPartitionRestartWithHttpOperationResponse(serviceId, partitionId,
      operationId, restartPartitionMode, options)
    summary: "This API will restart some or all replicas or instances of the\rspecified partition.\r\rThis API is useful for testing failover.\r\rIf used to target a stateless service partition, RestartPartitionMode must\rbe AllReplicasOrInstances.\r\rCall the GetPartitionRestartProgress API using the same OperationId to get\rthe progress."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startPartitionRestartWithHttpOperationResponse(serviceId,
      partitionId, operationId, restartPartitionMode, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: restartPartitionMode
          type:
            - string
          description: "Invalid - Reserved.  Do not pass into\rAPI.\r- AllReplicasOrInstances - All replicas or instances in the partition are\rrestarted at once.\r- OnlyActiveSecondaries - Only the secondary replicas are restarted.\r. Possible values include: 'Invalid', 'AllReplicasOrInstances',\r'OnlyActiveSecondaries'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startPartitionRestartWithHttpOperationResponse(serviceId,
        partitionId, operationId, restartPartitionMode, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startPartitionRestart'
    id: 'azure-servicefabric.ServiceFabricClient#startPartitionRestart'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startPartitionRestart(serviceId, partitionId, operationId,
      restartPartitionMode, options, optionalCallback)
    summary: "This API will restart some or all replicas or instances of the\rspecified partition.\r\rThis API is useful for testing failover.\r\rIf used to target a stateless service partition, RestartPartitionMode must\rbe AllReplicasOrInstances.\r\rCall the GetPartitionRestartProgress API using the same OperationId to get\rthe progress."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startPartitionRestart(serviceId,
      partitionId, operationId, restartPartitionMode, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: restartPartitionMode
          type:
            - string
          description: "Invalid - Reserved.  Do not pass into\rAPI.\r- AllReplicasOrInstances - All replicas or instances in the partition are\rrestarted at once.\r- OnlyActiveSecondaries - Only the secondary replicas are restarted.\r. Possible values include: 'Invalid', 'AllReplicasOrInstances',\r'OnlyActiveSecondaries'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function startPartitionRestart(serviceId, partitionId, operationId,
        restartPartitionMode, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getPartitionRestartProgressWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getPartitionRestartProgressWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getPartitionRestartProgressWithHttpOperationResponse(serviceId,
      partitionId, operationId, options)
    summary: "Gets the progress of a PartitionRestart operation started using\rStartPartitionRestart.\r\rGets the progress of a PartitionRestart started with StartPartitionRestart\rusing the provided OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionRestartProgressWithHttpOperationResponse(serviceId,
      partitionId, operationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PartitionRestartProgress>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PartitionRestartProgress>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getPartitionRestartProgressWithHttpOperationResponse(serviceId,
        partitionId, operationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getPartitionRestartProgress'
    id: 'azure-servicefabric.ServiceFabricClient#getPartitionRestartProgress'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getPartitionRestartProgress(serviceId, partitionId, operationId, options,
      optionalCallback)
    summary: "Gets the progress of a PartitionRestart operation started using\rStartPartitionRestart.\r\rGets the progress of a PartitionRestart started with StartPartitionRestart\rusing the provided OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getPartitionRestartProgress(serviceId,
      partitionId, operationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PartitionRestartProgress} - The deserialized result object.'
        value: '{PartitionRestartProgress} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionRestartProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PartitionRestartProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: serviceId
          type:
            - string
          description: "The identity of the service. This is typically the\rfull name of the service without the 'fabric:' URI scheme. Starting from\rversion 6.0, hierarchical names are delimited with the \"~\" character. For\rexample, if the service name is \"fabric://myapp/app1/svc1\", the service\ridentity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in\rprevious versions."
        - id: partitionId
          type:
            - azure-servicefabric.uuid
          description: The identity of the partition.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getPartitionRestartProgress(serviceId, partitionId,
        operationId, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#startNodeTransitionWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#startNodeTransitionWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startNodeTransitionWithHttpOperationResponse(nodeName, operationId,
      nodeTransitionType, nodeInstanceId, stopDurationInSeconds, options)
    summary: "Starts or stops a cluster node.\r\rStarts or stops a cluster node.  A cluster node is a process, not the OS\rinstance itself.  To start a node, pass in \"Start\" for the\rNodeTransitionType parameter.\rTo stop a node, pass in \"Stop\" for the NodeTransitionType parameter.  This\rAPI starts the operation - when the API returns the node may not have\rfinished transitioning yet.\rCall GetNodeTransitionProgress with the same OperationId to get the progress\rof the operation."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startNodeTransitionWithHttpOperationResponse(nodeName,
      operationId, nodeTransitionType, nodeInstanceId, stopDurationInSeconds,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: nodeTransitionType
          type:
            - string
          description: "Indicates the type of transition to\rperform.  NodeTransitionType.Start will start a stopped node.\rNodeTransitionType.Stop will stop a node that is up.\r- Invalid - Reserved.  Do not pass into API.\r- Start - Transition a stopped node to up.\r- Stop - Transition an up node to stopped.\r. Possible values include: 'Invalid', 'Start', 'Stop'"
        - id: nodeInstanceId
          type:
            - string
          description: "The node instance ID of the target node.\rThis can be determined through GetNodeInfo API."
        - id: stopDurationInSeconds
          type:
            - number
          description: "The duration, in seconds, to keep the\rnode stopped.  The minimum value is 600, the maximum is 14400.  After this\rtime expires, the node will automatically come back up."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function startNodeTransitionWithHttpOperationResponse(nodeName,
        operationId, nodeTransitionType, nodeInstanceId, stopDurationInSeconds,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#startNodeTransition'
    id: 'azure-servicefabric.ServiceFabricClient#startNodeTransition'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      startNodeTransition(nodeName, operationId, nodeTransitionType,
      nodeInstanceId, stopDurationInSeconds, options, optionalCallback)
    summary: "Starts or stops a cluster node.\r\rStarts or stops a cluster node.  A cluster node is a process, not the OS\rinstance itself.  To start a node, pass in \"Start\" for the\rNodeTransitionType parameter.\rTo stop a node, pass in \"Stop\" for the NodeTransitionType parameter.  This\rAPI starts the operation - when the API returns the node may not have\rfinished transitioning yet.\rCall GetNodeTransitionProgress with the same OperationId to get the progress\rof the operation."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.startNodeTransition(nodeName,
      operationId, nodeTransitionType, nodeInstanceId, stopDurationInSeconds,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: nodeTransitionType
          type:
            - string
          description: "Indicates the type of transition to\rperform.  NodeTransitionType.Start will start a stopped node.\rNodeTransitionType.Stop will stop a node that is up.\r- Invalid - Reserved.  Do not pass into API.\r- Start - Transition a stopped node to up.\r- Stop - Transition an up node to stopped.\r. Possible values include: 'Invalid', 'Start', 'Stop'"
        - id: nodeInstanceId
          type:
            - string
          description: "The node instance ID of the target node.\rThis can be determined through GetNodeInfo API."
        - id: stopDurationInSeconds
          type:
            - number
          description: "The duration, in seconds, to keep the\rnode stopped.  The minimum value is 600, the maximum is 14400.  After this\rtime expires, the node will automatically come back up."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function startNodeTransition(nodeName, operationId, nodeTransitionType,
        nodeInstanceId, stopDurationInSeconds, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getNodeTransitionProgressWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getNodeTransitionProgressWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getNodeTransitionProgressWithHttpOperationResponse(nodeName, operationId,
      options)
    summary: "Gets the progress of an operation started using\rStartNodeTransition.\r\rGets the progress of an operation started with StartNodeTransition using the\rprovided OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeTransitionProgressWithHttpOperationResponse(nodeName,
      operationId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NodeTransitionProgress>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<NodeTransitionProgress>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getNodeTransitionProgressWithHttpOperationResponse(nodeName,
        operationId, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getNodeTransitionProgress'
    id: 'azure-servicefabric.ServiceFabricClient#getNodeTransitionProgress'
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getNodeTransitionProgress(nodeName, operationId, options,
      optionalCallback)
    summary: "Gets the progress of an operation started using\rStartNodeTransition.\r\rGets the progress of an operation started with StartNodeTransition using the\rprovided OperationId."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getNodeTransitionProgress(nodeName,
      operationId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeTransitionProgress} - The deserialized result object.'
        value: '{NodeTransitionProgress} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeTransitionProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeTransitionProgress} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nodeName
          type:
            - string
          description: The name of the node.
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getNodeTransitionProgress(nodeName, operationId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#getFaultOperationListWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#getFaultOperationListWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: >-
      getFaultOperationListWithHttpOperationResponse(typeFilter, stateFilter,
      options)
    summary: "Gets a list of user-induced fault operations filtered by provided\rinput.\r\rGets the a list of user-induced fault operations filtered by provided input."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getFaultOperationListWithHttpOperationResponse(typeFilter,
      stateFilter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: typeFilter
          type:
            - number
          description: "Used to filter on OperationType for user-induced\roperations.\r65535 - select all\r1     - select PartitionDataLoss.\r2     - select PartitionQuorumLoss.\r4     - select PartitionRestart.\r8     - select NodeTransition."
        - id: stateFilter
          type:
            - number
          description: "Used to filter on OperationState's for\ruser-induced operations.\r65535 - select All\r1     - select Running\r2     - select RollingBack\r8     - select Completed\r16    - select Faulted\r32    - select Cancelled\r64    - select ForceCancelled"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getFaultOperationListWithHttpOperationResponse(typeFilter,
        stateFilter, options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#getFaultOperationList'
    id: 'azure-servicefabric.ServiceFabricClient#getFaultOperationList'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'getFaultOperationList(typeFilter, stateFilter, options, optionalCallback)'
    summary: "Gets a list of user-induced fault operations filtered by provided\rinput.\r\rGets the a list of user-induced fault operations filtered by provided input."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.getFaultOperationList(typeFilter,
      stateFilter, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: typeFilter
          type:
            - number
          description: "Used to filter on OperationType for user-induced\roperations.\r65535 - select all\r1     - select PartitionDataLoss.\r2     - select PartitionQuorumLoss.\r4     - select PartitionRestart.\r8     - select NodeTransition."
        - id: stateFilter
          type:
            - number
          description: "Used to filter on OperationState's for\ruser-induced operations.\r65535 - select All\r1     - select Running\r2     - select RollingBack\r8     - select Completed\r16    - select Faulted\r32    - select Cancelled\r64    - select ForceCancelled"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getFaultOperationList(typeFilter, stateFilter, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-servicefabric.ServiceFabricClient#cancelOperationWithHttpOperationResponse
    id: >-
      azure-servicefabric.ServiceFabricClient#cancelOperationWithHttpOperationResponse
    parent: azure-servicefabric.ServiceFabricClient
    name: 'cancelOperationWithHttpOperationResponse(operationId, force, options)'
    summary: "Cancels a user-induced fault operation.\r\rThe following is a list of APIs that start fault operations that may be\rcancelled using CancelOperation -\r- StartDataLoss\r- StartQuorumLoss\r- StartPartitionRestart\r- StartNodeTransition\r\rIf force is false, then the specified user-induced operation will be\rgracefully stopped and cleaned up.  If force is true, the command will be\raborted, and some internal state\rmay be left behind.  Specifying force as true should be used with care.\rCalling this API with force set to true is not allowed until this API has\ralready\rbeen called on the same test command with force set to false first, or\runless the test command already has an OperationState of\rOperationState.RollingBack.\rClarification: OperationState.RollingBack means that the system will/is be\rcleaning up internal system state caused by executing the command.  It will\rnot restore data if the\rtest command was to cause data loss.  For example, if you call StartDataLoss\rthen call this API, the system will only clean up internal state from\rrunning the command.\rIt will not restore the target partition's data, if the command progressed\rfar enough to cause data loss.\r\rImportant note:  if this API is invoked with force==true, internal state may\rbe left behind."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.cancelOperationWithHttpOperationResponse(operationId,
      force, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: force
          type:
            - boolean
          description: "Indicates whether to gracefully rollback and clean up\rinternal system state modified by executing the user-induced operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function cancelOperationWithHttpOperationResponse(operationId, force,
        options)
    langs:
      - js
  - uid: 'azure-servicefabric.ServiceFabricClient#cancelOperation'
    id: 'azure-servicefabric.ServiceFabricClient#cancelOperation'
    parent: azure-servicefabric.ServiceFabricClient
    name: 'cancelOperation(operationId, force, options, optionalCallback)'
    summary: "Cancels a user-induced fault operation.\r\rThe following is a list of APIs that start fault operations that may be\rcancelled using CancelOperation -\r- StartDataLoss\r- StartQuorumLoss\r- StartPartitionRestart\r- StartNodeTransition\r\rIf force is false, then the specified user-induced operation will be\rgracefully stopped and cleaned up.  If force is true, the command will be\raborted, and some internal state\rmay be left behind.  Specifying force as true should be used with care.\rCalling this API with force set to true is not allowed until this API has\ralready\rbeen called on the same test command with force set to false first, or\runless the test command already has an OperationState of\rOperationState.RollingBack.\rClarification: OperationState.RollingBack means that the system will/is be\rcleaning up internal system state caused by executing the command.  It will\rnot restore data if the\rtest command was to cause data loss.  For example, if you call StartDataLoss\rthen call this API, the system will only clean up internal state from\rrunning the command.\rIt will not restore the target partition's data, if the command progressed\rfar enough to cause data loss.\r\rImportant note:  if this API is invoked with force==true, internal state may\rbe left behind."
    fullName: >-
      azure-servicefabric.ServiceFabricClient.cancelOperation(operationId,
      force, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: operationId
          type:
            - azure-servicefabric.uuid
          description: "A GUID that identifies a call of this API.  This\ris passed into the corresponding GetProgress API"
        - id: force
          type:
            - boolean
          description: "Indicates whether to gracefully rollback and clean up\rinternal system state modified by executing the user-induced operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.timeout
          type:
            - number
          description: "The server timeout for performing the\roperation in seconds. This specifies the time duration that the client is\rwilling to wait for the requested operation to complete. The default value\rfor this parameter is 60 seconds."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function cancelOperation(operationId, force, options, optionalCallback)'
    langs:
      - js
