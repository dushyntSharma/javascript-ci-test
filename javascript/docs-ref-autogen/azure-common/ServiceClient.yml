### YamlMime:UniversalReference
items:
  - uid: azure-common.ServiceClient
    id: azure-common.ServiceClient
    name: ServiceClient
    summary: Creates a new ServiceClient object.
    fullName: azure-common.ServiceClient
    source:
      id: azure-common.ServiceClient
      path: lib\common\lib\services\serviceclient.js
      startLine: 48
      remote:
        branch: master
        path: lib\common\lib\services\serviceclient.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-common.ServiceClient.#ctor'
      - 'azure-common.ServiceClient#setHost'
      - 'azure-common.ServiceClient#performChunkedRequest'
      - 'azure-common.ServiceClient#performRequest'
      - 'azure-common.ServiceClient#performRequestOutputStream'
      - 'azure-common.ServiceClient#performRequestInputStream'
      - 'azure-common.ServiceClient#withFilter'
      - 'azure-common.ServiceClient#parseMetadataHeaders'
      - azure-common.ServiceClient.isEmulated
    langs:
      - js
  - id: 'azure-common.ServiceClient.#ctor'
    uid: 'azure-common.ServiceClient.#ctor'
    parent: azure-common.ServiceClient
    name: 'ServiceClient(host, authenticationProvider)'
    fullName: 'azure-common.ServiceClient.ServiceClient(host, authenticationProvider)'
    summary: Creates a new ServiceClient object.
    type: Constructor
    syntax:
      parameters:
        - id: host
          type:
            - string
          description: The host for the service.
        - id: authenticationProvider
          type:
            - object
          description: >-
            The authentication provider object (e.g. sharedkey / sharedkeytable
            / sharedaccesssignature).
      content: 'new ServiceClient(host, authenticationProvider)'
    langs:
      - js
  - uid: 'azure-common.ServiceClient#setHost'
    id: 'azure-common.ServiceClient#setHost'
    parent: azure-common.ServiceClient
    name: setHost(host)
    summary: Sets a host for the service.
    fullName: azure-common.ServiceClient.setHost(host)
    type: Function
    syntax:
      parameters:
        - id: host
          type:
            - string
          description: The host for the service.
      content: function setHost(host)
    langs:
      - js
  - uid: 'azure-common.ServiceClient#performChunkedRequest'
    id: 'azure-common.ServiceClient#performChunkedRequest'
    parent: azure-common.ServiceClient
    name: 'performChunkedRequest(webResource, outputData, options, callback)'
    summary: Performs a REST service request through HTTP expecting an input stream.
    fullName: >-
      azure-common.ServiceClient.performChunkedRequest(webResource, outputData,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-common.WebResource
          description: The webresource on which to perform the request.
        - id: outputData
          type:
            - string
          description: The outgoing request data as a raw string.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-common.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: The chunked response callback function.
      content: >-
        function performChunkedRequest(webResource, outputData, options,
        callback)
    langs:
      - js
  - uid: 'azure-common.ServiceClient#performRequest'
    id: 'azure-common.ServiceClient#performRequest'
    parent: azure-common.ServiceClient
    name: 'performRequest(webResource, outputData, options, callback)'
    summary: Performs a REST service request through HTTP expecting an input stream.
    fullName: >-
      azure-common.ServiceClient.performRequest(webResource, outputData,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-common.WebResource
          description: The webresource on which to perform the request.
        - id: outputData
          type:
            - string
          description: The outgoing request data as a raw string.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-common.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: The response callback function.
      content: 'function performRequest(webResource, outputData, options, callback)'
    langs:
      - js
  - uid: 'azure-common.ServiceClient#performRequestOutputStream'
    id: 'azure-common.ServiceClient#performRequestOutputStream'
    parent: azure-common.ServiceClient
    name: 'performRequestOutputStream(webResource, outputStream, options, callback)'
    summary: Performs a REST service request through HTTP expecting an input stream.
    fullName: >-
      azure-common.ServiceClient.performRequestOutputStream(webResource,
      outputStream, options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-common.WebResource
          description: The webresource on which to perform the request.
        - id: outputStream
          type:
            - azure-common.Stream
          description: The outgoing request data as a stream.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-common.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: The response callback function.
      content: >-
        function performRequestOutputStream(webResource, outputStream, options,
        callback)
    langs:
      - js
  - uid: 'azure-common.ServiceClient#performRequestInputStream'
    id: 'azure-common.ServiceClient#performRequestInputStream'
    parent: azure-common.ServiceClient
    name: >-
      performRequestInputStream(webResource, outputData, inputStream, options,
      callback)
    summary: Performs a REST service request through HTTP expecting an input stream.
    fullName: >-
      azure-common.ServiceClient.performRequestInputStream(webResource,
      outputData, inputStream, options, callback)
    type: Function
    syntax:
      parameters:
        - id: webResource
          type:
            - azure-common.WebResource
          description: The webresource on which to perform the request.
        - id: outputData
          type:
            - string
          description: The outgoing request data as a raw string.
        - id: inputStream
          type:
            - azure-common.Stream
          description: The ingoing response data as a stream.
        - id: options
          type:
            - object
          description: The request options.
          optional: true
        - id: options.timeoutIntervalInMs
          type:
            - azure-common.int
          description: 'The timeout interval, in milliseconds, to use for the request.'
          optional: true
        - id: callback
          type:
            - function
          description: The response callback function.
      content: >-
        function performRequestInputStream(webResource, outputData, inputStream,
        options, callback)
    langs:
      - js
  - uid: 'azure-common.ServiceClient#withFilter'
    id: 'azure-common.ServiceClient#withFilter'
    parent: azure-common.ServiceClient
    name: withFilter(filter)
    summary: "Associate a filtering operation with this ServiceClient. Filtering operations\rcan include logging, automatically retrying, etc. Filter operations are objects\rthat implement a method with the signature:\r\r    \"function handle (requestOptions, next)\".\r\rAfter doing its preprocessing on the request options, the method needs to call\r\"next\" passing a callback with the following signature:\rsignature:\r\r    \"function (returnObject, finalCallback, next)\"\r\rIn this callback, and after processing the returnObject (the response from the\rrequest to the server), the callback needs to either invoke next if it exists to\rcontinue processing other filters or simply invoke finalCallback otherwise to end\rup the service invocation."
    fullName: azure-common.ServiceClient.withFilter(filter)
    type: Function
    syntax:
      parameters:
        - id: filter
          type:
            - Object
          description: The new filter object.
      return:
        type:
          - azure-common.ServiceClient
        description: A new service client with the filter applied.
      content: function withFilter(filter)
    langs:
      - js
  - uid: 'azure-common.ServiceClient#parseMetadataHeaders'
    id: 'azure-common.ServiceClient#parseMetadataHeaders'
    parent: azure-common.ServiceClient
    name: parseMetadataHeaders(headers)
    summary: Retrieves the metadata headers from the response headers.
    fullName: azure-common.ServiceClient.parseMetadataHeaders(headers)
    type: Function
    syntax:
      parameters:
        - id: headers
          type:
            - object
          description: The metadata headers.
      return:
        type:
          - object
        description: An object with the metadata headers (without the "x-ms-" prefix).
      content: function parseMetadataHeaders(headers)
    langs:
      - js
  - uid: azure-common.ServiceClient.isEmulated
    id: azure-common.ServiceClient.isEmulated
    parent: azure-common.ServiceClient
    name: isEmulated()
    summary: Gets the value of the environment variable for is emulated.
    fullName: azure-common.ServiceClient.isEmulated()
    type: Function
    syntax:
      return:
        type:
          - azure-common.bool
        description: >-
          True if the service client is running on an emulated environment;
          false otherwise.
      content: function isEmulated()
    langs:
      - js
references:
  - uid: azure-common.WebResource
    name: WebResource
    fullName: azure-common.WebResource
    isExternal: false
