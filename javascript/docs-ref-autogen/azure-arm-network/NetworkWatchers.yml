### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.NetworkWatchers
    id: azure-arm-network.NetworkWatchers
    name: NetworkWatchers
    summary: Class representing a NetworkWatchers.
    fullName: azure-arm-network.NetworkWatchers
    source:
      id: azure-arm-network.NetworkWatchers
      path: lib\services\networkManagement2\lib\operations\networkWatchers.js
      startLine: 4025
      remote:
        branch: master
        path: lib\services\networkManagement2\lib\operations\networkWatchers.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-network.NetworkWatchers.#ctor'
      - >-
        azure-arm-network.NetworkWatchers#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#createOrUpdate'
      - 'azure-arm-network.NetworkWatchers#getWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#get'
      - 'azure-arm-network.NetworkWatchers#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#deleteMethod'
      - 'azure-arm-network.NetworkWatchers#updateTagsWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#updateTags'
      - 'azure-arm-network.NetworkWatchers#listWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#list'
      - 'azure-arm-network.NetworkWatchers#listAllWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#listAll'
      - 'azure-arm-network.NetworkWatchers#getTopologyWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#getTopology'
      - 'azure-arm-network.NetworkWatchers#verifyIPFlowWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#verifyIPFlow'
      - 'azure-arm-network.NetworkWatchers#getNextHopWithHttpOperationResponse'
      - 'azure-arm-network.NetworkWatchers#getNextHop'
      - >-
        azure-arm-network.NetworkWatchers#getVMSecurityRulesWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getVMSecurityRules'
      - >-
        azure-arm-network.NetworkWatchers#getTroubleshootingWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getTroubleshooting'
      - >-
        azure-arm-network.NetworkWatchers#getTroubleshootingResultWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getTroubleshootingResult'
      - >-
        azure-arm-network.NetworkWatchers#setFlowLogConfigurationWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#setFlowLogConfiguration'
      - >-
        azure-arm-network.NetworkWatchers#getFlowLogStatusWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getFlowLogStatus'
      - >-
        azure-arm-network.NetworkWatchers#checkConnectivityWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#checkConnectivity'
      - >-
        azure-arm-network.NetworkWatchers#getAzureReachabilityReportWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#getAzureReachabilityReport'
      - >-
        azure-arm-network.NetworkWatchers#listAvailableProvidersWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#listAvailableProviders'
      - >-
        azure-arm-network.NetworkWatchers#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginDeleteMethod'
      - >-
        azure-arm-network.NetworkWatchers#beginVerifyIPFlowWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginVerifyIPFlow'
      - >-
        azure-arm-network.NetworkWatchers#beginGetNextHopWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetNextHop'
      - >-
        azure-arm-network.NetworkWatchers#beginGetVMSecurityRulesWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetVMSecurityRules'
      - >-
        azure-arm-network.NetworkWatchers#beginGetTroubleshootingWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetTroubleshooting'
      - >-
        azure-arm-network.NetworkWatchers#beginGetTroubleshootingResultWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetTroubleshootingResult'
      - >-
        azure-arm-network.NetworkWatchers#beginSetFlowLogConfigurationWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginSetFlowLogConfiguration'
      - >-
        azure-arm-network.NetworkWatchers#beginGetFlowLogStatusWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetFlowLogStatus'
      - >-
        azure-arm-network.NetworkWatchers#beginCheckConnectivityWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginCheckConnectivity'
      - >-
        azure-arm-network.NetworkWatchers#beginGetAzureReachabilityReportWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginGetAzureReachabilityReport'
      - >-
        azure-arm-network.NetworkWatchers#beginListAvailableProvidersWithHttpOperationResponse
      - 'azure-arm-network.NetworkWatchers#beginListAvailableProviders'
    langs:
      - js
  - id: 'azure-arm-network.NetworkWatchers.#ctor'
    uid: 'azure-arm-network.NetworkWatchers.#ctor'
    parent: azure-arm-network.NetworkWatchers
    name: NetworkWatchers(client)
    fullName: azure-arm-network.NetworkWatchers.NetworkWatchers(client)
    summary: Create a NetworkWatchers.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-network.NetworkManagementClient
          description: Reference to the service client.
      content: new NetworkWatchers(client)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Creates or updates a network watcher in the specified resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NetworkWatcher>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NetworkWatcher>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the network watcher\rresource."
        - id: parameters.etag
          type:
            - string
          description: "A unique read-only string that changes\rwhenever the resource is updated."
          optional: true
        - id: parameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#createOrUpdate'
    id: 'azure-arm-network.NetworkWatchers#createOrUpdate'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      createOrUpdate(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: Creates or updates a network watcher in the specified resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.createOrUpdate(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NetworkWatcher} - The deserialized result object.'
        value: '{NetworkWatcher} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcher} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcher} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the network watcher\rresource."
        - id: parameters.etag
          type:
            - string
          description: "A unique read-only string that changes\rwhenever the resource is updated."
          optional: true
        - id: parameters.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#getWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      options)
    summary: Gets the specified network watcher by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.getWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NetworkWatcher>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NetworkWatcher>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#get'
    id: 'azure-arm-network.NetworkWatchers#get'
    parent: azure-arm-network.NetworkWatchers
    name: 'get(resourceGroupName, networkWatcherName, options, optionalCallback)'
    summary: Gets the specified network watcher by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.get(resourceGroupName,
      networkWatcherName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NetworkWatcher} - The deserialized result object.'
        value: '{NetworkWatcher} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcher} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcher} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, networkWatcherName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.deleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#deleteMethod'
    id: 'azure-arm-network.NetworkWatchers#deleteMethod'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      deleteMethod(resourceGroupName, networkWatcherName, options,
      optionalCallback)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.deleteMethod(resourceGroupName,
      networkWatcherName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, networkWatcherName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#updateTagsWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#updateTagsWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      updateTagsWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      parameters, options)
    summary: Updates a network watcher tags.
    fullName: >-
      azure-arm-network.NetworkWatchers.updateTagsWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NetworkWatcher>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NetworkWatcher>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters supplied to update network watcher\rtags."
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateTagsWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#updateTags'
    id: 'azure-arm-network.NetworkWatchers#updateTags'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      updateTags(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: Updates a network watcher tags.
    fullName: >-
      azure-arm-network.NetworkWatchers.updateTags(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NetworkWatcher} - The deserialized result object.'
        value: '{NetworkWatcher} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcher} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcher} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters supplied to update network watcher\rtags."
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateTags(resourceGroupName, networkWatcherName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#listWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#listWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: 'listWithHttpOperationResponse(resourceGroupName, options)'
    summary: Gets all network watchers by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.listWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NetworkWatcherListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<NetworkWatcherListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listWithHttpOperationResponse(resourceGroupName, options)'
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#list'
    id: 'azure-arm-network.NetworkWatchers#list'
    parent: azure-arm-network.NetworkWatchers
    name: 'list(resourceGroupName, options, optionalCallback)'
    summary: Gets all network watchers by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.list(resourceGroupName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NetworkWatcherListResult} - The deserialized result object.'
        value: '{NetworkWatcherListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcherListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcherListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(resourceGroupName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#listAllWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#listAllWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: listAllWithHttpOperationResponse(options)
    summary: Gets all network watchers by subscription.
    fullName: >-
      azure-arm-network.NetworkWatchers.listAllWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NetworkWatcherListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<NetworkWatcherListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listAllWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#listAll'
    id: 'azure-arm-network.NetworkWatchers#listAll'
    parent: azure-arm-network.NetworkWatchers
    name: 'listAll(options, optionalCallback)'
    summary: Gets all network watchers by subscription.
    fullName: 'azure-arm-network.NetworkWatchers.listAll(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NetworkWatcherListResult} - The deserialized result object.'
        value: '{NetworkWatcherListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcherListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NetworkWatcherListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listAll(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getTopologyWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#getTopologyWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTopologyWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Gets the current network topology by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.getTopologyWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Topology>} - The deserialized result object.'
        value: '{HttpOperationResponse<Topology>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the representation of\rtopology."
        - id: parameters.targetResourceGroupName
          type:
            - string
          description: "The name of the target\rresource group to perform topology on."
          optional: true
        - id: parameters.targetVirtualNetwork
          type:
            - object
          description: "The reference of the\rVirtual Network resource."
          optional: true
        - id: parameters.targetSubnet
          type:
            - object
          description: "The reference of the Subnet\rresource."
          optional: true
        - id: parameters.targetSubnet.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getTopologyWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getTopology'
    id: 'azure-arm-network.NetworkWatchers#getTopology'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTopology(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: Gets the current network topology by resource group.
    fullName: >-
      azure-arm-network.NetworkWatchers.getTopology(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Topology} - The deserialized result object.'
        value: '{Topology} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Topology} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Topology} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the representation of\rtopology."
        - id: parameters.targetResourceGroupName
          type:
            - string
          description: "The name of the target\rresource group to perform topology on."
          optional: true
        - id: parameters.targetVirtualNetwork
          type:
            - object
          description: "The reference of the\rVirtual Network resource."
          optional: true
        - id: parameters.targetSubnet
          type:
            - object
          description: "The reference of the Subnet\rresource."
          optional: true
        - id: parameters.targetSubnet.id
          type:
            - string
          description: Resource ID.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getTopology(resourceGroupName, networkWatcherName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#verifyIPFlowWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#verifyIPFlowWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      verifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: "Verify IP flow from the specified VM to a location given the currently\rconfigured NSG rules."
    fullName: >-
      azure-arm-network.NetworkWatchers.verifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VerificationIPFlowResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<VerificationIPFlowResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the IP flow to be\rverified."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the target resource to\rperform next-hop on."
        - id: parameters.direction
          type:
            - string
          description: "The direction of the packet represented\ras a 5-tuple. Possible values include: 'Inbound', 'Outbound'"
        - id: parameters.protocol
          type:
            - string
          description: "Protocol to be verified on. Possible\rvalues include: 'TCP', 'UDP'"
        - id: parameters.localPort
          type:
            - string
          description: "The local port. Acceptable values are a\rsingle integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.remotePort
          type:
            - string
          description: "The remote port. Acceptable values are\ra single integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.localIPAddress
          type:
            - string
          description: "The local IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.remoteIPAddress
          type:
            - string
          description: "The remote IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of them, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function verifyIPFlowWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#verifyIPFlow'
    id: 'azure-arm-network.NetworkWatchers#verifyIPFlow'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      verifyIPFlow(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: "Verify IP flow from the specified VM to a location given the currently\rconfigured NSG rules."
    fullName: >-
      azure-arm-network.NetworkWatchers.verifyIPFlow(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VerificationIPFlowResult} - The deserialized result object.'
        value: '{VerificationIPFlowResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerificationIPFlowResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerificationIPFlowResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the IP flow to be\rverified."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the target resource to\rperform next-hop on."
        - id: parameters.direction
          type:
            - string
          description: "The direction of the packet represented\ras a 5-tuple. Possible values include: 'Inbound', 'Outbound'"
        - id: parameters.protocol
          type:
            - string
          description: "Protocol to be verified on. Possible\rvalues include: 'TCP', 'UDP'"
        - id: parameters.localPort
          type:
            - string
          description: "The local port. Acceptable values are a\rsingle integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.remotePort
          type:
            - string
          description: "The remote port. Acceptable values are\ra single integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.localIPAddress
          type:
            - string
          description: "The local IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.remoteIPAddress
          type:
            - string
          description: "The remote IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of them, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function verifyIPFlow(resourceGroupName, networkWatcherName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getNextHopWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#getNextHopWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getNextHopWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      parameters, options)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getNextHopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NextHopResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NextHopResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the source and destination\rendpoint."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The resource identifier of the\rtarget resource against which the action is to be performed."
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of the nics, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getNextHopWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getNextHop'
    id: 'azure-arm-network.NetworkWatchers#getNextHop'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getNextHop(resourceGroupName, networkWatcherName, parameters, options,
      optionalCallback)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getNextHop(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NextHopResult} - The deserialized result object.'
        value: '{NextHopResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NextHopResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NextHopResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the source and destination\rendpoint."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The resource identifier of the\rtarget resource against which the action is to be performed."
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of the nics, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getNextHop(resourceGroupName, networkWatcherName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#getVMSecurityRulesWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getVMSecurityRulesWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecurityGroupViewResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<SecurityGroupViewResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the VM to check security\rgroups for."
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getVMSecurityRules'
    id: 'azure-arm-network.NetworkWatchers#getVMSecurityRules'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getVMSecurityRules(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.getVMSecurityRules(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecurityGroupViewResult} - The deserialized result object.'
        value: '{SecurityGroupViewResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecurityGroupViewResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecurityGroupViewResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the VM to check security\rgroups for."
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getVMSecurityRules(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to\rtroubleshoot."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource to\rtroubleshoot."
        - id: parameters.storageId
          type:
            - string
          description: "The ID for the storage account to save\rthe troubleshoot result."
        - id: parameters.storagePath
          type:
            - string
          description: "The path to the blob to save the\rtroubleshoot result in."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getTroubleshootingWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getTroubleshooting'
    id: 'azure-arm-network.NetworkWatchers#getTroubleshooting'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshooting(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshooting(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{TroubleshootingResult} - The deserialized result object.'
        value: '{TroubleshootingResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to\rtroubleshoot."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource to\rtroubleshoot."
        - id: parameters.storageId
          type:
            - string
          description: "The ID for the storage account to save\rthe troubleshoot result."
        - id: parameters.storagePath
          type:
            - string
          description: "The path to the blob to save the\rtroubleshoot result in."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getTroubleshooting(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingResultWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getTroubleshootingResultWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to query the\rtroubleshooting result."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource ID to query\rthe troubleshooting result."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getTroubleshootingResult'
    id: 'azure-arm-network.NetworkWatchers#getTroubleshootingResult'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getTroubleshootingResult(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.getTroubleshootingResult(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{TroubleshootingResult} - The deserialized result object.'
        value: '{TroubleshootingResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to query the\rtroubleshooting result."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource ID to query\rthe troubleshooting result."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getTroubleshootingResult(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#setFlowLogConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#setFlowLogConfigurationWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      setFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.setFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the configuration of flow\rlog."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the resource to\rconfigure for flow logging."
        - id: parameters.storageId
          type:
            - string
          description: "ID of the storage account which is used\rto store the flow log."
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: "Number of days to retain\rflow log records."
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: "Flag to enable/disable\rretention."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        setFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#setFlowLogConfiguration'
    id: 'azure-arm-network.NetworkWatchers#setFlowLogConfiguration'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      setFlowLogConfiguration(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.setFlowLogConfiguration(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FlowLogInformation} - The deserialized result object.'
        value: '{FlowLogInformation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the configuration of flow\rlog."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the resource to\rconfigure for flow logging."
        - id: parameters.storageId
          type:
            - string
          description: "ID of the storage account which is used\rto store the flow log."
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: "Number of days to retain\rflow log records."
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: "Flag to enable/disable\rretention."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function setFlowLogConfiguration(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#getFlowLogStatusWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getFlowLogStatusWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.getFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define a resource to query flow\rlog status."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource where\rgetting the flow logging status."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getFlowLogStatusWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getFlowLogStatus'
    id: 'azure-arm-network.NetworkWatchers#getFlowLogStatus'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getFlowLogStatus(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.getFlowLogStatus(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FlowLogInformation} - The deserialized result object.'
        value: '{FlowLogInformation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define a resource to query flow\rlog status."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource where\rgetting the flow logging status."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getFlowLogStatus(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#checkConnectivityWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#checkConnectivityWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      checkConnectivityWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: "Verifies the possibility of establishing a direct TCP connection from a\rvirtual machine to a given endpoint including another VM or an arbitrary\rremote server."
    fullName: >-
      azure-arm-network.NetworkWatchers.checkConnectivityWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ConnectivityInformation>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ConnectivityInformation>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine how the connectivity\rcheck will be performed."
        - id: parameters.source
          type:
            - object
          description: ''
        - id: parameters.source.resourceId
          type:
            - string
          description: "The ID of the resource from\rwhich a connectivity check will be initiated."
        - id: parameters.source.port
          type:
            - number
          description: "The source port from which a\rconnectivity check will be performed."
          optional: true
        - id: parameters.destination
          type:
            - object
          description: ''
        - id: parameters.destination.resourceId
          type:
            - string
          description: "The ID of the resource\rto which a connection attempt will be made."
          optional: true
        - id: parameters.destination.address
          type:
            - string
          description: "The IP address or URI the\rresource to which a connection attempt will be made."
          optional: true
        - id: parameters.destination.port
          type:
            - number
          description: "Port on which check\rconnectivity will be performed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function checkConnectivityWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#checkConnectivity'
    id: 'azure-arm-network.NetworkWatchers#checkConnectivity'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      checkConnectivity(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: "Verifies the possibility of establishing a direct TCP connection from a\rvirtual machine to a given endpoint including another VM or an arbitrary\rremote server."
    fullName: >-
      azure-arm-network.NetworkWatchers.checkConnectivity(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ConnectivityInformation} - The deserialized result object.'
        value: '{ConnectivityInformation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ConnectivityInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ConnectivityInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine how the connectivity\rcheck will be performed."
        - id: parameters.source
          type:
            - object
          description: ''
        - id: parameters.source.resourceId
          type:
            - string
          description: "The ID of the resource from\rwhich a connectivity check will be initiated."
        - id: parameters.source.port
          type:
            - number
          description: "The source port from which a\rconnectivity check will be performed."
          optional: true
        - id: parameters.destination
          type:
            - object
          description: ''
        - id: parameters.destination.resourceId
          type:
            - string
          description: "The ID of the resource\rto which a connection attempt will be made."
          optional: true
        - id: parameters.destination.address
          type:
            - string
          description: "The IP address or URI the\rresource to which a connection attempt will be made."
          optional: true
        - id: parameters.destination.port
          type:
            - number
          description: "Port on which check\rconnectivity will be performed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function checkConnectivity(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#getAzureReachabilityReportWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#getAzureReachabilityReportWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getAzureReachabilityReportWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: "Gets the relative latency score for internet service providers from a\rspecified location to Azure regions."
    fullName: >-
      azure-arm-network.NetworkWatchers.getAzureReachabilityReportWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<AzureReachabilityReport>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<AzureReachabilityReport>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine Azure reachability\rreport configuration."
        - id: parameters.providerLocation
          type:
            - object
          description: ''
        - id: parameters.providerLocation.country
          type:
            - string
          description: The name of the country.
        - id: parameters.providerLocation.state
          type:
            - string
          description: The name of the state.
          optional: true
        - id: parameters.providerLocation.city
          type:
            - string
          description: "The name of the city or\rtown."
          optional: true
        - id: parameters.providers
          type:
            - array
          description: List of Internet service providers.
          optional: true
        - id: parameters.azureLocations
          type:
            - array
          description: "Optional Azure regions to scope\rthe query to."
          optional: true
        - id: parameters.startTime
          type:
            - date
          description: "The start time for the Azure reachability\rreport."
        - id: parameters.endTime
          type:
            - date
          description: "The end time for the Azure reachability\rreport."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getAzureReachabilityReportWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#getAzureReachabilityReport'
    id: 'azure-arm-network.NetworkWatchers#getAzureReachabilityReport'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      getAzureReachabilityReport(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: "Gets the relative latency score for internet service providers from a\rspecified location to Azure regions."
    fullName: >-
      azure-arm-network.NetworkWatchers.getAzureReachabilityReport(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{AzureReachabilityReport} - The deserialized result object.'
        value: '{AzureReachabilityReport} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AzureReachabilityReport} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AzureReachabilityReport} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine Azure reachability\rreport configuration."
        - id: parameters.providerLocation
          type:
            - object
          description: ''
        - id: parameters.providerLocation.country
          type:
            - string
          description: The name of the country.
        - id: parameters.providerLocation.state
          type:
            - string
          description: The name of the state.
          optional: true
        - id: parameters.providerLocation.city
          type:
            - string
          description: "The name of the city or\rtown."
          optional: true
        - id: parameters.providers
          type:
            - array
          description: List of Internet service providers.
          optional: true
        - id: parameters.azureLocations
          type:
            - array
          description: "Optional Azure regions to scope\rthe query to."
          optional: true
        - id: parameters.startTime
          type:
            - date
          description: "The start time for the Azure reachability\rreport."
        - id: parameters.endTime
          type:
            - date
          description: "The end time for the Azure reachability\rreport."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getAzureReachabilityReport(resourceGroupName,
        networkWatcherName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#listAvailableProvidersWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#listAvailableProvidersWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      listAvailableProvidersWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    fullName: >-
      azure-arm-network.NetworkWatchers.listAvailableProvidersWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<AvailableProvidersList>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<AvailableProvidersList>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that scope the list of available\rproviders."
        - id: parameters.azureLocations
          type:
            - array
          description: A list of Azure regions.
          optional: true
        - id: parameters.country
          type:
            - string
          description: "The country for available providers\rlist."
          optional: true
        - id: parameters.state
          type:
            - string
          description: The state for available providers list.
          optional: true
        - id: parameters.city
          type:
            - string
          description: "The city or town for available providers\rlist."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listAvailableProvidersWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#listAvailableProviders'
    id: 'azure-arm-network.NetworkWatchers#listAvailableProviders'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      listAvailableProviders(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    fullName: >-
      azure-arm-network.NetworkWatchers.listAvailableProviders(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{AvailableProvidersList} - The deserialized result object.'
        value: '{AvailableProvidersList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AvailableProvidersList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AvailableProvidersList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that scope the list of available\rproviders."
        - id: parameters.azureLocations
          type:
            - array
          description: A list of Azure regions.
          optional: true
        - id: parameters.country
          type:
            - string
          description: "The country for available providers\rlist."
          optional: true
        - id: parameters.state
          type:
            - string
          description: The state for available providers list.
          optional: true
        - id: parameters.city
          type:
            - string
          description: "The city or town for available providers\rlist."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listAvailableProviders(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginDeleteMethod'
    id: 'azure-arm-network.NetworkWatchers#beginDeleteMethod'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginDeleteMethod(resourceGroupName, networkWatcherName, options,
      optionalCallback)
    summary: Deletes the specified network watcher resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginDeleteMethod(resourceGroupName,
      networkWatcherName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, networkWatcherName,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginVerifyIPFlowWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginVerifyIPFlowWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginVerifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: "Verify IP flow from the specified VM to a location given the currently\rconfigured NSG rules."
    fullName: >-
      azure-arm-network.NetworkWatchers.beginVerifyIPFlowWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VerificationIPFlowResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<VerificationIPFlowResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the IP flow to be\rverified."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the target resource to\rperform next-hop on."
        - id: parameters.direction
          type:
            - string
          description: "The direction of the packet represented\ras a 5-tuple. Possible values include: 'Inbound', 'Outbound'"
        - id: parameters.protocol
          type:
            - string
          description: "Protocol to be verified on. Possible\rvalues include: 'TCP', 'UDP'"
        - id: parameters.localPort
          type:
            - string
          description: "The local port. Acceptable values are a\rsingle integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.remotePort
          type:
            - string
          description: "The remote port. Acceptable values are\ra single integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.localIPAddress
          type:
            - string
          description: "The local IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.remoteIPAddress
          type:
            - string
          description: "The remote IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of them, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginVerifyIPFlowWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginVerifyIPFlow'
    id: 'azure-arm-network.NetworkWatchers#beginVerifyIPFlow'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginVerifyIPFlow(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: "Verify IP flow from the specified VM to a location given the currently\rconfigured NSG rules."
    fullName: >-
      azure-arm-network.NetworkWatchers.beginVerifyIPFlow(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VerificationIPFlowResult} - The deserialized result object.'
        value: '{VerificationIPFlowResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerificationIPFlowResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerificationIPFlowResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the IP flow to be\rverified."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the target resource to\rperform next-hop on."
        - id: parameters.direction
          type:
            - string
          description: "The direction of the packet represented\ras a 5-tuple. Possible values include: 'Inbound', 'Outbound'"
        - id: parameters.protocol
          type:
            - string
          description: "Protocol to be verified on. Possible\rvalues include: 'TCP', 'UDP'"
        - id: parameters.localPort
          type:
            - string
          description: "The local port. Acceptable values are a\rsingle integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.remotePort
          type:
            - string
          description: "The remote port. Acceptable values are\ra single integer in the range (0-65535). Support for * for the source port,\rwhich depends on the direction."
        - id: parameters.localIPAddress
          type:
            - string
          description: "The local IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.remoteIPAddress
          type:
            - string
          description: "The remote IP address. Acceptable\rvalues are valid IPv4 addresses."
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of them, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginVerifyIPFlow(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginGetNextHopWithHttpOperationResponse'
    id: 'azure-arm-network.NetworkWatchers#beginGetNextHopWithHttpOperationResponse'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetNextHopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetNextHopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NextHopResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NextHopResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the source and destination\rendpoint."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The resource identifier of the\rtarget resource against which the action is to be performed."
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of the nics, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginGetNextHopWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginGetNextHop'
    id: 'azure-arm-network.NetworkWatchers#beginGetNextHop'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetNextHop(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Gets the next hop from the specified VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetNextHop(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NextHopResult} - The deserialized result object.'
        value: '{NextHopResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NextHopResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NextHopResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the source and destination\rendpoint."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The resource identifier of the\rtarget resource against which the action is to be performed."
        - id: parameters.sourceIPAddress
          type:
            - string
          description: The source IP address.
        - id: parameters.destinationIPAddress
          type:
            - string
          description: The destination IP address.
        - id: parameters.targetNicResourceId
          type:
            - string
          description: "The NIC ID. (If VM has\rmultiple NICs and IP forwarding is enabled on any of the nics, then this\rparameter must be specified. Otherwise optional)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginGetNextHop(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetVMSecurityRulesWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetVMSecurityRulesWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecurityGroupViewResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<SecurityGroupViewResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the VM to check security\rgroups for."
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetVMSecurityRulesWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginGetVMSecurityRules'
    id: 'azure-arm-network.NetworkWatchers#beginGetVMSecurityRules'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetVMSecurityRules(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: >-
      Gets the configured and effective security group rules on the specified
      VM.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetVMSecurityRules(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecurityGroupViewResult} - The deserialized result object.'
        value: '{SecurityGroupViewResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecurityGroupViewResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecurityGroupViewResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: parameters
          type:
            - object
          description: "Parameters that define the VM to check security\rgroups for."
        - id: parameters.targetResourceId
          type:
            - string
          description: ID of the target VM.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginGetVMSecurityRules(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to\rtroubleshoot."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource to\rtroubleshoot."
        - id: parameters.storageId
          type:
            - string
          description: "The ID for the storage account to save\rthe troubleshoot result."
        - id: parameters.storagePath
          type:
            - string
          description: "The path to the blob to save the\rtroubleshoot result in."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetTroubleshootingWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginGetTroubleshooting'
    id: 'azure-arm-network.NetworkWatchers#beginGetTroubleshooting'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshooting(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Initiate troubleshooting on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshooting(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{TroubleshootingResult} - The deserialized result object.'
        value: '{TroubleshootingResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to\rtroubleshoot."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource to\rtroubleshoot."
        - id: parameters.storageId
          type:
            - string
          description: "The ID for the storage account to save\rthe troubleshoot result."
        - id: parameters.storagePath
          type:
            - string
          description: "The path to the blob to save the\rtroubleshoot result in."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginGetTroubleshooting(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingResultWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetTroubleshootingResultWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<TroubleshootingResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to query the\rtroubleshooting result."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource ID to query\rthe troubleshooting result."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetTroubleshootingResultWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginGetTroubleshootingResult'
    id: 'azure-arm-network.NetworkWatchers#beginGetTroubleshootingResult'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetTroubleshootingResult(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: Get the last completed troubleshooting result on a specified resource
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetTroubleshootingResult(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{TroubleshootingResult} - The deserialized result object.'
        value: '{TroubleshootingResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TroubleshootingResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the resource to query the\rtroubleshooting result."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource ID to query\rthe troubleshooting result."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginGetTroubleshootingResult(resourceGroupName,
        networkWatcherName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginSetFlowLogConfigurationWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginSetFlowLogConfigurationWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginSetFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginSetFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the configuration of flow\rlog."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the resource to\rconfigure for flow logging."
        - id: parameters.storageId
          type:
            - string
          description: "ID of the storage account which is used\rto store the flow log."
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: "Number of days to retain\rflow log records."
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: "Flag to enable/disable\rretention."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginSetFlowLogConfigurationWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginSetFlowLogConfiguration'
    id: 'azure-arm-network.NetworkWatchers#beginSetFlowLogConfiguration'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginSetFlowLogConfiguration(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: Configures flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginSetFlowLogConfiguration(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FlowLogInformation} - The deserialized result object.'
        value: '{FlowLogInformation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define the configuration of flow\rlog."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The ID of the resource to\rconfigure for flow logging."
        - id: parameters.storageId
          type:
            - string
          description: "ID of the storage account which is used\rto store the flow log."
        - id: parameters.enabled
          type:
            - boolean
          description: Flag to enable/disable flow logging.
        - id: parameters.retentionPolicy
          type:
            - object
          description: ''
          optional: true
        - id: parameters.retentionPolicy.days
          type:
            - number
          description: "Number of days to retain\rflow log records."
          optional: true
        - id: parameters.retentionPolicy.enabled
          type:
            - boolean
          description: "Flag to enable/disable\rretention."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginSetFlowLogConfiguration(resourceGroupName,
        networkWatcherName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetFlowLogStatusWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetFlowLogStatusWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetFlowLogStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FlowLogInformation>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define a resource to query flow\rlog status."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource where\rgetting the flow logging status."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetFlowLogStatusWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginGetFlowLogStatus'
    id: 'azure-arm-network.NetworkWatchers#beginGetFlowLogStatus'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetFlowLogStatus(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: Queries status of flow log on a specified resource.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetFlowLogStatus(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FlowLogInformation} - The deserialized result object.'
        value: '{FlowLogInformation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FlowLogInformation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that define a resource to query flow\rlog status."
        - id: parameters.targetResourceId
          type:
            - string
          description: "The target resource where\rgetting the flow logging status."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginGetFlowLogStatus(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginCheckConnectivityWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginCheckConnectivityWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginCheckConnectivityWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: "Verifies the possibility of establishing a direct TCP connection from a\rvirtual machine to a given endpoint including another VM or an arbitrary\rremote server."
    fullName: >-
      azure-arm-network.NetworkWatchers.beginCheckConnectivityWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ConnectivityInformation>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ConnectivityInformation>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine how the connectivity\rcheck will be performed."
        - id: parameters.source
          type:
            - object
          description: ''
        - id: parameters.source.resourceId
          type:
            - string
          description: "The ID of the resource from\rwhich a connectivity check will be initiated."
        - id: parameters.source.port
          type:
            - number
          description: "The source port from which a\rconnectivity check will be performed."
          optional: true
        - id: parameters.destination
          type:
            - object
          description: ''
        - id: parameters.destination.resourceId
          type:
            - string
          description: "The ID of the resource\rto which a connection attempt will be made."
          optional: true
        - id: parameters.destination.address
          type:
            - string
          description: "The IP address or URI the\rresource to which a connection attempt will be made."
          optional: true
        - id: parameters.destination.port
          type:
            - number
          description: "Port on which check\rconnectivity will be performed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginCheckConnectivityWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginCheckConnectivity'
    id: 'azure-arm-network.NetworkWatchers#beginCheckConnectivity'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginCheckConnectivity(resourceGroupName, networkWatcherName, parameters,
      options, optionalCallback)
    summary: "Verifies the possibility of establishing a direct TCP connection from a\rvirtual machine to a given endpoint including another VM or an arbitrary\rremote server."
    fullName: >-
      azure-arm-network.NetworkWatchers.beginCheckConnectivity(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ConnectivityInformation} - The deserialized result object.'
        value: '{ConnectivityInformation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ConnectivityInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ConnectivityInformation} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine how the connectivity\rcheck will be performed."
        - id: parameters.source
          type:
            - object
          description: ''
        - id: parameters.source.resourceId
          type:
            - string
          description: "The ID of the resource from\rwhich a connectivity check will be initiated."
        - id: parameters.source.port
          type:
            - number
          description: "The source port from which a\rconnectivity check will be performed."
          optional: true
        - id: parameters.destination
          type:
            - object
          description: ''
        - id: parameters.destination.resourceId
          type:
            - string
          description: "The ID of the resource\rto which a connection attempt will be made."
          optional: true
        - id: parameters.destination.address
          type:
            - string
          description: "The IP address or URI the\rresource to which a connection attempt will be made."
          optional: true
        - id: parameters.destination.port
          type:
            - number
          description: "Port on which check\rconnectivity will be performed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCheckConnectivity(resourceGroupName, networkWatcherName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginGetAzureReachabilityReportWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginGetAzureReachabilityReportWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetAzureReachabilityReportWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: "Gets the relative latency score for internet service providers from a\rspecified location to Azure regions."
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReportWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<AzureReachabilityReport>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<AzureReachabilityReport>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine Azure reachability\rreport configuration."
        - id: parameters.providerLocation
          type:
            - object
          description: ''
        - id: parameters.providerLocation.country
          type:
            - string
          description: The name of the country.
        - id: parameters.providerLocation.state
          type:
            - string
          description: The name of the state.
          optional: true
        - id: parameters.providerLocation.city
          type:
            - string
          description: "The name of the city or\rtown."
          optional: true
        - id: parameters.providers
          type:
            - array
          description: List of Internet service providers.
          optional: true
        - id: parameters.azureLocations
          type:
            - array
          description: "Optional Azure regions to scope\rthe query to."
          optional: true
        - id: parameters.startTime
          type:
            - date
          description: "The start time for the Azure reachability\rreport."
        - id: parameters.endTime
          type:
            - date
          description: "The end time for the Azure reachability\rreport."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginGetAzureReachabilityReportWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginGetAzureReachabilityReport'
    id: 'azure-arm-network.NetworkWatchers#beginGetAzureReachabilityReport'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginGetAzureReachabilityReport(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: "Gets the relative latency score for internet service providers from a\rspecified location to Azure regions."
    fullName: >-
      azure-arm-network.NetworkWatchers.beginGetAzureReachabilityReport(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{AzureReachabilityReport} - The deserialized result object.'
        value: '{AzureReachabilityReport} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AzureReachabilityReport} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AzureReachabilityReport} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that determine Azure reachability\rreport configuration."
        - id: parameters.providerLocation
          type:
            - object
          description: ''
        - id: parameters.providerLocation.country
          type:
            - string
          description: The name of the country.
        - id: parameters.providerLocation.state
          type:
            - string
          description: The name of the state.
          optional: true
        - id: parameters.providerLocation.city
          type:
            - string
          description: "The name of the city or\rtown."
          optional: true
        - id: parameters.providers
          type:
            - array
          description: List of Internet service providers.
          optional: true
        - id: parameters.azureLocations
          type:
            - array
          description: "Optional Azure regions to scope\rthe query to."
          optional: true
        - id: parameters.startTime
          type:
            - date
          description: "The start time for the Azure reachability\rreport."
        - id: parameters.endTime
          type:
            - date
          description: "The end time for the Azure reachability\rreport."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginGetAzureReachabilityReport(resourceGroupName,
        networkWatcherName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.NetworkWatchers#beginListAvailableProvidersWithHttpOperationResponse
    id: >-
      azure-arm-network.NetworkWatchers#beginListAvailableProvidersWithHttpOperationResponse
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginListAvailableProvidersWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginListAvailableProvidersWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<AvailableProvidersList>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<AvailableProvidersList>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that scope the list of available\rproviders."
        - id: parameters.azureLocations
          type:
            - array
          description: A list of Azure regions.
          optional: true
        - id: parameters.country
          type:
            - string
          description: "The country for available providers\rlist."
          optional: true
        - id: parameters.state
          type:
            - string
          description: The state for available providers list.
          optional: true
        - id: parameters.city
          type:
            - string
          description: "The city or town for available providers\rlist."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginListAvailableProvidersWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.NetworkWatchers#beginListAvailableProviders'
    id: 'azure-arm-network.NetworkWatchers#beginListAvailableProviders'
    parent: azure-arm-network.NetworkWatchers
    name: >-
      beginListAvailableProviders(resourceGroupName, networkWatcherName,
      parameters, options, optionalCallback)
    summary: >-
      Lists all available internet service providers for a specified Azure
      region.
    fullName: >-
      azure-arm-network.NetworkWatchers.beginListAvailableProviders(resourceGroupName,
      networkWatcherName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{AvailableProvidersList} - The deserialized result object.'
        value: '{AvailableProvidersList} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AvailableProvidersList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AvailableProvidersList} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the network watcher resource\rgroup."
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher resource.
        - id: parameters
          type:
            - object
          description: "Parameters that scope the list of available\rproviders."
        - id: parameters.azureLocations
          type:
            - array
          description: A list of Azure regions.
          optional: true
        - id: parameters.country
          type:
            - string
          description: "The country for available providers\rlist."
          optional: true
        - id: parameters.state
          type:
            - string
          description: The state for available providers list.
          optional: true
        - id: parameters.city
          type:
            - string
          description: "The city or town for available providers\rlist."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginListAvailableProviders(resourceGroupName,
        networkWatcherName, parameters, options, optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-network.NetworkManagementClient
    name: NetworkManagementClient
    fullName: azure-arm-network.NetworkManagementClient
    isExternal: false
