### YamlMime:UniversalReference
items:
  - uid: azure-arm-network.PacketCaptures
    id: azure-arm-network.PacketCaptures
    name: PacketCaptures
    summary: Class representing a PacketCaptures.
    fullName: azure-arm-network.PacketCaptures
    source:
      id: azure-arm-network.PacketCaptures
      path: lib\services\networkManagement2\lib\operations\packetCaptures.js
      startLine: 1263
      remote:
        branch: master
        path: lib\services\networkManagement2\lib\operations\packetCaptures.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-network.PacketCaptures.#ctor'
      - 'azure-arm-network.PacketCaptures#createWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#create'
      - 'azure-arm-network.PacketCaptures#getWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#get'
      - 'azure-arm-network.PacketCaptures#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#deleteMethod'
      - 'azure-arm-network.PacketCaptures#stopWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#stop'
      - 'azure-arm-network.PacketCaptures#getStatusWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#getStatus'
      - 'azure-arm-network.PacketCaptures#listWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#list'
      - 'azure-arm-network.PacketCaptures#beginCreateWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#beginCreate'
      - >-
        azure-arm-network.PacketCaptures#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-network.PacketCaptures#beginDeleteMethod'
      - 'azure-arm-network.PacketCaptures#beginStopWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#beginStop'
      - 'azure-arm-network.PacketCaptures#beginGetStatusWithHttpOperationResponse'
      - 'azure-arm-network.PacketCaptures#beginGetStatus'
    langs:
      - js
  - id: 'azure-arm-network.PacketCaptures.#ctor'
    uid: 'azure-arm-network.PacketCaptures.#ctor'
    parent: azure-arm-network.PacketCaptures
    name: PacketCaptures(client)
    fullName: azure-arm-network.PacketCaptures.PacketCaptures(client)
    summary: Create a PacketCaptures.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-network.NetworkManagementClient
          description: Reference to the service client.
      content: new PacketCaptures(client)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#createWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#createWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      createWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      packetCaptureName, parameters, options)
    summary: Create and start a packet capture on the specified VM.
    fullName: >-
      azure-arm-network.PacketCaptures.createWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PacketCaptureResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<PacketCaptureResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: parameters
          type:
            - object
          description: "Parameters that define the create packet capture\roperation."
        - id: parameters.target
          type:
            - string
          description: "The ID of the targeted resource, only VM\ris currently supported."
        - id: parameters.bytesToCapturePerPacket
          type:
            - number
          description: "Number of bytes\rcaptured per packet, the remaining bytes are truncated."
          optional: true
        - id: parameters.totalBytesPerSession
          type:
            - number
          description: "Maximum size of the\rcapture output."
          optional: true
        - id: parameters.timeLimitInSeconds
          type:
            - number
          description: "Maximum duration of the\rcapture session in seconds."
          optional: true
        - id: parameters.storageLocation
          type:
            - object
          description: ''
        - id: parameters.storageLocation.storageId
          type:
            - string
          description: "The ID of the storage\raccount to save the packet capture session. Required if no local file path\ris provided."
          optional: true
        - id: parameters.storageLocation.storagePath
          type:
            - string
          description: "The URI of the\rstorage path to save the packet capture. Must be a well-formed URI\rdescribing the location to save the packet capture."
          optional: true
        - id: parameters.storageLocation.filePath
          type:
            - string
          description: "A valid local path on\rthe targeting VM. Must include the name of the capture file (*.cap). For\rlinux virtual machine it must start with /var/captures. Required if no\rstorage ID is provided, otherwise optional."
          optional: true
        - id: parameters.filters
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#create'
    id: 'azure-arm-network.PacketCaptures#create'
    parent: azure-arm-network.PacketCaptures
    name: >-
      create(resourceGroupName, networkWatcherName, packetCaptureName,
      parameters, options, optionalCallback)
    summary: Create and start a packet capture on the specified VM.
    fullName: >-
      azure-arm-network.PacketCaptures.create(resourceGroupName,
      networkWatcherName, packetCaptureName, parameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PacketCaptureResult} - The deserialized result object.'
        value: '{PacketCaptureResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: parameters
          type:
            - object
          description: "Parameters that define the create packet capture\roperation."
        - id: parameters.target
          type:
            - string
          description: "The ID of the targeted resource, only VM\ris currently supported."
        - id: parameters.bytesToCapturePerPacket
          type:
            - number
          description: "Number of bytes\rcaptured per packet, the remaining bytes are truncated."
          optional: true
        - id: parameters.totalBytesPerSession
          type:
            - number
          description: "Maximum size of the\rcapture output."
          optional: true
        - id: parameters.timeLimitInSeconds
          type:
            - number
          description: "Maximum duration of the\rcapture session in seconds."
          optional: true
        - id: parameters.storageLocation
          type:
            - object
          description: ''
        - id: parameters.storageLocation.storageId
          type:
            - string
          description: "The ID of the storage\raccount to save the packet capture session. Required if no local file path\ris provided."
          optional: true
        - id: parameters.storageLocation.storagePath
          type:
            - string
          description: "The URI of the\rstorage path to save the packet capture. Must be a well-formed URI\rdescribing the location to save the packet capture."
          optional: true
        - id: parameters.storageLocation.filePath
          type:
            - string
          description: "A valid local path on\rthe targeting VM. Must include the name of the capture file (*.cap). For\rlinux virtual machine it must start with /var/captures. Required if no\rstorage ID is provided, otherwise optional."
          optional: true
        - id: parameters.filters
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function create(resourceGroupName, networkWatcherName,
        packetCaptureName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#getWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#getWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      getWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      packetCaptureName, options)
    summary: Gets a packet capture session by name.
    fullName: >-
      azure-arm-network.PacketCaptures.getWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PacketCaptureResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<PacketCaptureResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#get'
    id: 'azure-arm-network.PacketCaptures#get'
    parent: azure-arm-network.PacketCaptures
    name: >-
      get(resourceGroupName, networkWatcherName, packetCaptureName, options,
      optionalCallback)
    summary: Gets a packet capture session by name.
    fullName: >-
      azure-arm-network.PacketCaptures.get(resourceGroupName,
      networkWatcherName, packetCaptureName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PacketCaptureResult} - The deserialized result object.'
        value: '{PacketCaptureResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, networkWatcherName, packetCaptureName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    summary: Deletes the specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.deleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#deleteMethod'
    id: 'azure-arm-network.PacketCaptures#deleteMethod'
    parent: azure-arm-network.PacketCaptures
    name: >-
      deleteMethod(resourceGroupName, networkWatcherName, packetCaptureName,
      options, optionalCallback)
    summary: Deletes the specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.deleteMethod(resourceGroupName,
      networkWatcherName, packetCaptureName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, networkWatcherName,
        packetCaptureName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#stopWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#stopWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      stopWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      packetCaptureName, options)
    summary: Stops a specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.stopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function stopWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#stop'
    id: 'azure-arm-network.PacketCaptures#stop'
    parent: azure-arm-network.PacketCaptures
    name: >-
      stop(resourceGroupName, networkWatcherName, packetCaptureName, options,
      optionalCallback)
    summary: Stops a specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.stop(resourceGroupName,
      networkWatcherName, packetCaptureName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function stop(resourceGroupName, networkWatcherName, packetCaptureName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#getStatusWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#getStatusWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      getStatusWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      packetCaptureName, options)
    summary: Query the status of a running packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.getStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PacketCaptureQueryStatusResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<PacketCaptureQueryStatusResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: "The name given to the packet capture\rsession."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getStatusWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#getStatus'
    id: 'azure-arm-network.PacketCaptures#getStatus'
    parent: azure-arm-network.PacketCaptures
    name: >-
      getStatus(resourceGroupName, networkWatcherName, packetCaptureName,
      options, optionalCallback)
    summary: Query the status of a running packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.getStatus(resourceGroupName,
      networkWatcherName, packetCaptureName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PacketCaptureQueryStatusResult} - The deserialized result object.'
        value: '{PacketCaptureQueryStatusResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureQueryStatusResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureQueryStatusResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: "The name given to the packet capture\rsession."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getStatus(resourceGroupName, networkWatcherName,
        packetCaptureName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#listWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#listWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      listWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      options)
    summary: Lists all packet capture sessions within the specified resource group.
    fullName: >-
      azure-arm-network.PacketCaptures.listWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PacketCaptureListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<PacketCaptureListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the Network Watcher resource.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#list'
    id: 'azure-arm-network.PacketCaptures#list'
    parent: azure-arm-network.PacketCaptures
    name: 'list(resourceGroupName, networkWatcherName, options, optionalCallback)'
    summary: Lists all packet capture sessions within the specified resource group.
    fullName: >-
      azure-arm-network.PacketCaptures.list(resourceGroupName,
      networkWatcherName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PacketCaptureListResult} - The deserialized result object.'
        value: '{PacketCaptureListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the Network Watcher resource.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function list(resourceGroupName, networkWatcherName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#beginCreateWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#beginCreateWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginCreateWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, parameters, options)
    summary: Create and start a packet capture on the specified VM.
    fullName: >-
      azure-arm-network.PacketCaptures.beginCreateWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PacketCaptureResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<PacketCaptureResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: parameters
          type:
            - object
          description: "Parameters that define the create packet capture\roperation."
        - id: parameters.target
          type:
            - string
          description: "The ID of the targeted resource, only VM\ris currently supported."
        - id: parameters.bytesToCapturePerPacket
          type:
            - number
          description: "Number of bytes\rcaptured per packet, the remaining bytes are truncated."
          optional: true
        - id: parameters.totalBytesPerSession
          type:
            - number
          description: "Maximum size of the\rcapture output."
          optional: true
        - id: parameters.timeLimitInSeconds
          type:
            - number
          description: "Maximum duration of the\rcapture session in seconds."
          optional: true
        - id: parameters.storageLocation
          type:
            - object
          description: ''
        - id: parameters.storageLocation.storageId
          type:
            - string
          description: "The ID of the storage\raccount to save the packet capture session. Required if no local file path\ris provided."
          optional: true
        - id: parameters.storageLocation.storagePath
          type:
            - string
          description: "The URI of the\rstorage path to save the packet capture. Must be a well-formed URI\rdescribing the location to save the packet capture."
          optional: true
        - id: parameters.storageLocation.filePath
          type:
            - string
          description: "A valid local path on\rthe targeting VM. Must include the name of the capture file (*.cap). For\rlinux virtual machine it must start with /var/captures. Required if no\rstorage ID is provided, otherwise optional."
          optional: true
        - id: parameters.filters
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#beginCreate'
    id: 'azure-arm-network.PacketCaptures#beginCreate'
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginCreate(resourceGroupName, networkWatcherName, packetCaptureName,
      parameters, options, optionalCallback)
    summary: Create and start a packet capture on the specified VM.
    fullName: >-
      azure-arm-network.PacketCaptures.beginCreate(resourceGroupName,
      networkWatcherName, packetCaptureName, parameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PacketCaptureResult} - The deserialized result object.'
        value: '{PacketCaptureResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: parameters
          type:
            - object
          description: "Parameters that define the create packet capture\roperation."
        - id: parameters.target
          type:
            - string
          description: "The ID of the targeted resource, only VM\ris currently supported."
        - id: parameters.bytesToCapturePerPacket
          type:
            - number
          description: "Number of bytes\rcaptured per packet, the remaining bytes are truncated."
          optional: true
        - id: parameters.totalBytesPerSession
          type:
            - number
          description: "Maximum size of the\rcapture output."
          optional: true
        - id: parameters.timeLimitInSeconds
          type:
            - number
          description: "Maximum duration of the\rcapture session in seconds."
          optional: true
        - id: parameters.storageLocation
          type:
            - object
          description: ''
        - id: parameters.storageLocation.storageId
          type:
            - string
          description: "The ID of the storage\raccount to save the packet capture session. Required if no local file path\ris provided."
          optional: true
        - id: parameters.storageLocation.storagePath
          type:
            - string
          description: "The URI of the\rstorage path to save the packet capture. Must be a well-formed URI\rdescribing the location to save the packet capture."
          optional: true
        - id: parameters.storageLocation.filePath
          type:
            - string
          description: "A valid local path on\rthe targeting VM. Must include the name of the capture file (*.cap). For\rlinux virtual machine it must start with /var/captures. Required if no\rstorage ID is provided, otherwise optional."
          optional: true
        - id: parameters.filters
          type:
            - array
          description: ''
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreate(resourceGroupName, networkWatcherName,
        packetCaptureName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-network.PacketCaptures#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-network.PacketCaptures#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    summary: Deletes the specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#beginDeleteMethod'
    id: 'azure-arm-network.PacketCaptures#beginDeleteMethod'
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginDeleteMethod(resourceGroupName, networkWatcherName,
      packetCaptureName, options, optionalCallback)
    summary: Deletes the specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.beginDeleteMethod(resourceGroupName,
      networkWatcherName, packetCaptureName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, networkWatcherName,
        packetCaptureName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#beginStopWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#beginStopWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginStopWithHttpOperationResponse(resourceGroupName, networkWatcherName,
      packetCaptureName, options)
    summary: Stops a specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.beginStopWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginStopWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#beginStop'
    id: 'azure-arm-network.PacketCaptures#beginStop'
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginStop(resourceGroupName, networkWatcherName, packetCaptureName,
      options, optionalCallback)
    summary: Stops a specified packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.beginStop(resourceGroupName,
      networkWatcherName, packetCaptureName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the network watcher.
        - id: packetCaptureName
          type:
            - string
          description: The name of the packet capture session.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginStop(resourceGroupName, networkWatcherName,
        packetCaptureName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#beginGetStatusWithHttpOperationResponse'
    id: 'azure-arm-network.PacketCaptures#beginGetStatusWithHttpOperationResponse'
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginGetStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    summary: Query the status of a running packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.beginGetStatusWithHttpOperationResponse(resourceGroupName,
      networkWatcherName, packetCaptureName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<PacketCaptureQueryStatusResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<PacketCaptureQueryStatusResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: "The name given to the packet capture\rsession."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginGetStatusWithHttpOperationResponse(resourceGroupName,
        networkWatcherName, packetCaptureName, options)
    langs:
      - js
  - uid: 'azure-arm-network.PacketCaptures#beginGetStatus'
    id: 'azure-arm-network.PacketCaptures#beginGetStatus'
    parent: azure-arm-network.PacketCaptures
    name: >-
      beginGetStatus(resourceGroupName, networkWatcherName, packetCaptureName,
      options, optionalCallback)
    summary: Query the status of a running packet capture session.
    fullName: >-
      azure-arm-network.PacketCaptures.beginGetStatus(resourceGroupName,
      networkWatcherName, packetCaptureName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{PacketCaptureQueryStatusResult} - The deserialized result object.'
        value: '{PacketCaptureQueryStatusResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureQueryStatusResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link PacketCaptureQueryStatusResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: networkWatcherName
          type:
            - string
          description: The name of the Network Watcher resource.
        - id: packetCaptureName
          type:
            - string
          description: "The name given to the packet capture\rsession."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginGetStatus(resourceGroupName, networkWatcherName,
        packetCaptureName, options, optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-network.NetworkManagementClient
    name: NetworkManagementClient
    fullName: azure-arm-network.NetworkManagementClient
    isExternal: false
