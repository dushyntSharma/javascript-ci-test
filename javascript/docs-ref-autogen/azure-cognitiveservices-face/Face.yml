### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-face.Face
    id: azure-cognitiveservices-face.Face
    name: Face
    summary: Class representing a Face.
    fullName: azure-cognitiveservices-face.Face
    source:
      id: azure-cognitiveservices-face.Face
      path: lib\services\face\lib\operations\face.js
      startLine: 1346
      remote:
        branch: master
        path: lib\services\face\lib\operations\face.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-cognitiveservices-face.Face.#ctor'
      - 'azure-cognitiveservices-face.Face#findSimilarWithHttpOperationResponse'
      - 'azure-cognitiveservices-face.Face#findSimilar'
      - 'azure-cognitiveservices-face.Face#groupWithHttpOperationResponse'
      - 'azure-cognitiveservices-face.Face#group'
      - 'azure-cognitiveservices-face.Face#identifyWithHttpOperationResponse'
      - 'azure-cognitiveservices-face.Face#identify'
      - 'azure-cognitiveservices-face.Face#verifyWithHttpOperationResponse'
      - 'azure-cognitiveservices-face.Face#verify'
      - 'azure-cognitiveservices-face.Face#detectWithHttpOperationResponse'
      - 'azure-cognitiveservices-face.Face#detect'
      - >-
        azure-cognitiveservices-face.Face#verifyWithPersonGroupWithHttpOperationResponse
      - 'azure-cognitiveservices-face.Face#verifyWithPersonGroup'
      - >-
        azure-cognitiveservices-face.Face#detectInStreamWithHttpOperationResponse
      - 'azure-cognitiveservices-face.Face#detectInStream'
    langs:
      - js
  - id: 'azure-cognitiveservices-face.Face.#ctor'
    uid: 'azure-cognitiveservices-face.Face.#ctor'
    parent: azure-cognitiveservices-face.Face
    name: Face(client)
    fullName: azure-cognitiveservices-face.Face.Face(client)
    summary: Create a Face.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedFaceAPIClient
          description: Reference to the service client.
      content: new Face(client)
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#findSimilarWithHttpOperationResponse'
    id: 'azure-cognitiveservices-face.Face#findSimilarWithHttpOperationResponse'
    parent: azure-cognitiveservices-face.Face
    name: 'findSimilarWithHttpOperationResponse(faceId, options)'
    summary: "Given query face's faceId, find the similar-looking faces from a faceId\rarray or a faceListId."
    fullName: >-
      azure-cognitiveservices-face.Face.findSimilarWithHttpOperationResponse(faceId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: faceId
          type:
            - string
          description: "FaceId of the query face. User needs to call Face -\rDetect first to get a valid faceId. Note that this faceId is not persisted\rand will expire 24 hours after the detection call"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.faceListId
          type:
            - string
          description: "An existing user-specified unique\rcandidate face list, created in Face List - Create a Face List. Face list\rcontains a set of persistedFaceIds which are persisted and will never\rexpire. Parameter faceListId and faceIds should not be provided at the same\rtime"
          optional: true
        - id: options.faceIds
          type:
            - array
          description: "An array of candidate faceIds. All of them\rare created by Face - Detect and the faceIds will expire 24 hours after the\rdetection call."
          optional: true
        - id: options.maxNumOfCandidatesReturned
          type:
            - number
          description: "The number of top\rsimilar faces returned. The valid range is [1, 1000]."
          optional: true
        - id: options.mode
          type:
            - string
          description: "Similar face searching mode. It can be\r\"matchPerson\" or \"matchFace\". Possible values include: 'matchPerson',\r'matchFace'"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function findSimilarWithHttpOperationResponse(faceId, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#findSimilar'
    id: 'azure-cognitiveservices-face.Face#findSimilar'
    parent: azure-cognitiveservices-face.Face
    name: 'findSimilar(faceId, options, optionalCallback)'
    summary: "Given query face's faceId, find the similar-looking faces from a faceId\rarray or a faceListId."
    fullName: >-
      azure-cognitiveservices-face.Face.findSimilar(faceId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: faceId
          type:
            - string
          description: "FaceId of the query face. User needs to call Face -\rDetect first to get a valid faceId. Note that this faceId is not persisted\rand will expire 24 hours after the detection call"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.faceListId
          type:
            - string
          description: "An existing user-specified unique\rcandidate face list, created in Face List - Create a Face List. Face list\rcontains a set of persistedFaceIds which are persisted and will never\rexpire. Parameter faceListId and faceIds should not be provided at the same\rtime"
          optional: true
        - id: options.faceIds
          type:
            - array
          description: "An array of candidate faceIds. All of them\rare created by Face - Detect and the faceIds will expire 24 hours after the\rdetection call."
          optional: true
        - id: options.maxNumOfCandidatesReturned
          type:
            - number
          description: "The number of top\rsimilar faces returned. The valid range is [1, 1000]."
          optional: true
        - id: options.mode
          type:
            - string
          description: "Similar face searching mode. It can be\r\"matchPerson\" or \"matchFace\". Possible values include: 'matchPerson',\r'matchFace'"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function findSimilar(faceId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#groupWithHttpOperationResponse'
    id: 'azure-cognitiveservices-face.Face#groupWithHttpOperationResponse'
    parent: azure-cognitiveservices-face.Face
    name: 'groupWithHttpOperationResponse(faceIds, options)'
    summary: Divide candidate faces into groups based on face similarity.
    fullName: >-
      azure-cognitiveservices-face.Face.groupWithHttpOperationResponse(faceIds,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<GroupResponse>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<GroupResponse>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: faceIds
          type:
            - array
          description: "Array of candidate faceId created by Face - Detect.\rThe maximum is 1000 faces"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function groupWithHttpOperationResponse(faceIds, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#group'
    id: 'azure-cognitiveservices-face.Face#group'
    parent: azure-cognitiveservices-face.Face
    name: 'group(faceIds, options, optionalCallback)'
    summary: Divide candidate faces into groups based on face similarity.
    fullName: >-
      azure-cognitiveservices-face.Face.group(faceIds, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{GroupResponse} - The deserialized result object.'
        value: '{GroupResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GroupResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link GroupResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: faceIds
          type:
            - array
          description: "Array of candidate faceId created by Face - Detect.\rThe maximum is 1000 faces"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function group(faceIds, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#identifyWithHttpOperationResponse'
    id: 'azure-cognitiveservices-face.Face#identifyWithHttpOperationResponse'
    parent: azure-cognitiveservices-face.Face
    name: 'identifyWithHttpOperationResponse(personGroupId, faceIds, options)'
    summary: Identify unknown faces from a person group.
    fullName: >-
      azure-cognitiveservices-face.Face.identifyWithHttpOperationResponse(personGroupId,
      faceIds, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: personGroupId
          type:
            - string
          description: "personGroupId of the target person group,\rcreated by PersonGroups.Create"
        - id: faceIds
          type:
            - array
          description: Array of candidate faceId created by Face - Detect.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxNumOfCandidatesReturned
          type:
            - number
          description: "The number of top\rsimilar faces returned."
          optional: true
        - id: options.confidenceThreshold
          type:
            - number
          description: ''
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function identifyWithHttpOperationResponse(personGroupId, faceIds,
        options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#identify'
    id: 'azure-cognitiveservices-face.Face#identify'
    parent: azure-cognitiveservices-face.Face
    name: 'identify(personGroupId, faceIds, options, optionalCallback)'
    summary: Identify unknown faces from a person group.
    fullName: >-
      azure-cognitiveservices-face.Face.identify(personGroupId, faceIds,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: personGroupId
          type:
            - string
          description: "personGroupId of the target person group,\rcreated by PersonGroups.Create"
        - id: faceIds
          type:
            - array
          description: Array of candidate faceId created by Face - Detect.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxNumOfCandidatesReturned
          type:
            - number
          description: "The number of top\rsimilar faces returned."
          optional: true
        - id: options.confidenceThreshold
          type:
            - number
          description: ''
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function identify(personGroupId, faceIds, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#verifyWithHttpOperationResponse'
    id: 'azure-cognitiveservices-face.Face#verifyWithHttpOperationResponse'
    parent: azure-cognitiveservices-face.Face
    name: 'verifyWithHttpOperationResponse(faceId1, faceId2, options)'
    summary: "Verify whether two faces belong to a same person or whether one face belongs\rto a person."
    fullName: >-
      azure-cognitiveservices-face.Face.verifyWithHttpOperationResponse(faceId1,
      faceId2, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VerifyResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<VerifyResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: faceId1
          type:
            - string
          description: 'faceId of the first face, comes from Face - Detect'
        - id: faceId2
          type:
            - string
          description: 'faceId of the second face, comes from Face - Detect'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function verifyWithHttpOperationResponse(faceId1, faceId2, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#verify'
    id: 'azure-cognitiveservices-face.Face#verify'
    parent: azure-cognitiveservices-face.Face
    name: 'verify(faceId1, faceId2, options, optionalCallback)'
    summary: "Verify whether two faces belong to a same person or whether one face belongs\rto a person."
    fullName: >-
      azure-cognitiveservices-face.Face.verify(faceId1, faceId2, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VerifyResult} - The deserialized result object.'
        value: '{VerifyResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerifyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerifyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: faceId1
          type:
            - string
          description: 'faceId of the first face, comes from Face - Detect'
        - id: faceId2
          type:
            - string
          description: 'faceId of the second face, comes from Face - Detect'
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function verify(faceId1, faceId2, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#detectWithHttpOperationResponse'
    id: 'azure-cognitiveservices-face.Face#detectWithHttpOperationResponse'
    parent: azure-cognitiveservices-face.Face
    name: 'detectWithHttpOperationResponse(url, options)'
    summary: "Detect human faces in an image and returns face locations, and optionally\rwith faceIds, landmarks, and attributes."
    fullName: >-
      azure-cognitiveservices-face.Face.detectWithHttpOperationResponse(url,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.returnFaceId
          type:
            - boolean
          description: "A value indicating whether the\roperation should return faceIds of detected faces."
          optional: true
        - id: options.returnFaceLandmarks
          type:
            - boolean
          description: "A value indicating whether\rthe operation should return landmarks of the detected faces."
          optional: true
        - id: options.returnFaceAttributes
          type:
            - array
          description: "Analyze and return the one or\rmore specified face attributes in the comma-separated string like\r\"returnFaceAttributes=age,gender\". Supported face attributes include age,\rgender, headPose, smile, facialHair, glasses and emotion. Note that each\rface attribute analysis has additional computational and time cost."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function detectWithHttpOperationResponse(url, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#detect'
    id: 'azure-cognitiveservices-face.Face#detect'
    parent: azure-cognitiveservices-face.Face
    name: 'detect(url, options, optionalCallback)'
    summary: "Detect human faces in an image and returns face locations, and optionally\rwith faceIds, landmarks, and attributes."
    fullName: 'azure-cognitiveservices-face.Face.detect(url, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: url
          type:
            - string
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.returnFaceId
          type:
            - boolean
          description: "A value indicating whether the\roperation should return faceIds of detected faces."
          optional: true
        - id: options.returnFaceLandmarks
          type:
            - boolean
          description: "A value indicating whether\rthe operation should return landmarks of the detected faces."
          optional: true
        - id: options.returnFaceAttributes
          type:
            - array
          description: "Analyze and return the one or\rmore specified face attributes in the comma-separated string like\r\"returnFaceAttributes=age,gender\". Supported face attributes include age,\rgender, headPose, smile, facialHair, glasses and emotion. Note that each\rface attribute analysis has additional computational and time cost."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function detect(url, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-cognitiveservices-face.Face#verifyWithPersonGroupWithHttpOperationResponse
    id: >-
      azure-cognitiveservices-face.Face#verifyWithPersonGroupWithHttpOperationResponse
    parent: azure-cognitiveservices-face.Face
    name: >-
      verifyWithPersonGroupWithHttpOperationResponse(faceId, personId,
      personGroupId, options)
    summary: "Verify whether two faces belong to a same person. Compares a face Id with a\rPerson Id"
    fullName: >-
      azure-cognitiveservices-face.Face.verifyWithPersonGroupWithHttpOperationResponse(faceId,
      personId, personGroupId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<VerifyResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<VerifyResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: faceId
          type:
            - string
          description: 'faceId the face, comes from Face - Detect'
        - id: personId
          type:
            - string
          description: "Specify a certain person in a person group.\rpersonId is created in Persons.Create."
        - id: personGroupId
          type:
            - string
          description: "Using existing personGroupId and personId for\rfast loading a specified person. personGroupId is created in Person\rGroups.Create."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function verifyWithPersonGroupWithHttpOperationResponse(faceId,
        personId, personGroupId, options)
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#verifyWithPersonGroup'
    id: 'azure-cognitiveservices-face.Face#verifyWithPersonGroup'
    parent: azure-cognitiveservices-face.Face
    name: >-
      verifyWithPersonGroup(faceId, personId, personGroupId, options,
      optionalCallback)
    summary: "Verify whether two faces belong to a same person. Compares a face Id with a\rPerson Id"
    fullName: >-
      azure-cognitiveservices-face.Face.verifyWithPersonGroup(faceId, personId,
      personGroupId, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{VerifyResult} - The deserialized result object.'
        value: '{VerifyResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerifyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link VerifyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: faceId
          type:
            - string
          description: 'faceId the face, comes from Face - Detect'
        - id: personId
          type:
            - string
          description: "Specify a certain person in a person group.\rpersonId is created in Persons.Create."
        - id: personGroupId
          type:
            - string
          description: "Using existing personGroupId and personId for\rfast loading a specified person. personGroupId is created in Person\rGroups.Create."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function verifyWithPersonGroup(faceId, personId, personGroupId, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#detectInStreamWithHttpOperationResponse'
    id: 'azure-cognitiveservices-face.Face#detectInStreamWithHttpOperationResponse'
    parent: azure-cognitiveservices-face.Face
    name: 'detectInStreamWithHttpOperationResponse(image, options)'
    summary: "Detect human faces in an image and returns face locations, and optionally\rwith faceIds, landmarks, and attributes."
    fullName: >-
      azure-cognitiveservices-face.Face.detectInStreamWithHttpOperationResponse(image,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Array>} - The deserialized result object.'
        value: '{HttpOperationResponse<Array>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: image
          type:
            - object
          description: An image stream.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.returnFaceId
          type:
            - boolean
          description: "A value indicating whether the\roperation should return faceIds of detected faces."
          optional: true
        - id: options.returnFaceLandmarks
          type:
            - boolean
          description: "A value indicating whether\rthe operation should return landmarks of the detected faces."
          optional: true
        - id: options.returnFaceAttributes
          type:
            - array
          description: "Analyze and return the one or\rmore specified face attributes in the comma-separated string like\r\"returnFaceAttributes=age,gender\". Supported face attributes include age,\rgender, headPose, smile, facialHair, glasses and emotion. Note that each\rface attribute analysis has additional computational and time cost."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function detectInStreamWithHttpOperationResponse(image, options)'
    langs:
      - js
  - uid: 'azure-cognitiveservices-face.Face#detectInStream'
    id: 'azure-cognitiveservices-face.Face#detectInStream'
    parent: azure-cognitiveservices-face.Face
    name: 'detectInStream(image, options, optionalCallback)'
    summary: "Detect human faces in an image and returns face locations, and optionally\rwith faceIds, landmarks, and attributes."
    fullName: >-
      azure-cognitiveservices-face.Face.detectInStream(image, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Array} - The deserialized result object.'
        value: '{Array} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {array} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: image
          type:
            - object
          description: An image stream.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.returnFaceId
          type:
            - boolean
          description: "A value indicating whether the\roperation should return faceIds of detected faces."
          optional: true
        - id: options.returnFaceLandmarks
          type:
            - boolean
          description: "A value indicating whether\rthe operation should return landmarks of the detected faces."
          optional: true
        - id: options.returnFaceAttributes
          type:
            - array
          description: "Analyze and return the one or\rmore specified face attributes in the comma-separated string like\r\"returnFaceAttributes=age,gender\". Supported face attributes include age,\rgender, headPose, smile, facialHair, glasses and emotion. Note that each\rface attribute analysis has additional computational and time cost."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function detectInStream(image, options, optionalCallback)'
    langs:
      - js
