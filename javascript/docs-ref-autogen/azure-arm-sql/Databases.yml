### YamlMime:UniversalReference
items:
  - uid: azure-arm-sql.Databases
    id: azure-arm-sql.Databases
    name: Databases
    summary: Class representing a Databases.
    fullName: azure-arm-sql.Databases
    source:
      id: azure-arm-sql.Databases
      path: lib\services\sqlManagement2\lib\operations\databases.js
      startLine: 3714
      remote:
        branch: master
        path: lib\services\sqlManagement2\lib\operations\databases.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-sql.Databases.#ctor'
      - 'azure-arm-sql.Databases#importMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#importMethod'
      - 'azure-arm-sql.Databases#createImportOperationWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#createImportOperation'
      - 'azure-arm-sql.Databases#exportMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#exportMethod'
      - 'azure-arm-sql.Databases#listMetricsWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listMetrics'
      - 'azure-arm-sql.Databases#listMetricDefinitionsWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listMetricDefinitions'
      - 'azure-arm-sql.Databases#pauseWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#pause'
      - 'azure-arm-sql.Databases#resumeWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#resume'
      - 'azure-arm-sql.Databases#createOrUpdateWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#createOrUpdate'
      - 'azure-arm-sql.Databases#updateWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#update'
      - 'azure-arm-sql.Databases#deleteMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#deleteMethod'
      - 'azure-arm-sql.Databases#getWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#get'
      - 'azure-arm-sql.Databases#listByServerWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listByServer'
      - 'azure-arm-sql.Databases#getByElasticPoolWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#getByElasticPool'
      - 'azure-arm-sql.Databases#listByElasticPoolWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#listByElasticPool'
      - >-
        azure-arm-sql.Databases#getByRecommendedElasticPoolWithHttpOperationResponse
      - 'azure-arm-sql.Databases#getByRecommendedElasticPool'
      - >-
        azure-arm-sql.Databases#listByRecommendedElasticPoolWithHttpOperationResponse
      - 'azure-arm-sql.Databases#listByRecommendedElasticPool'
      - 'azure-arm-sql.Databases#beginImportMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginImportMethod'
      - >-
        azure-arm-sql.Databases#beginCreateImportOperationWithHttpOperationResponse
      - 'azure-arm-sql.Databases#beginCreateImportOperation'
      - 'azure-arm-sql.Databases#beginExportMethodWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginExportMethod'
      - 'azure-arm-sql.Databases#beginPauseWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginPause'
      - 'azure-arm-sql.Databases#beginResumeWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginResume'
      - 'azure-arm-sql.Databases#beginCreateOrUpdateWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginCreateOrUpdate'
      - 'azure-arm-sql.Databases#beginUpdateWithHttpOperationResponse'
      - 'azure-arm-sql.Databases#beginUpdate'
    langs:
      - js
  - id: 'azure-arm-sql.Databases.#ctor'
    uid: 'azure-arm-sql.Databases.#ctor'
    parent: azure-arm-sql.Databases
    name: Databases(client)
    fullName: azure-arm-sql.Databases.Databases(client)
    summary: Create a Databases.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-sql.SqlManagementClient
          description: Reference to the service client.
      content: new Databases(client)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#importMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#importMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      importMethodWithHttpOperationResponse(resourceGroupName, serverName,
      parameters, options)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.importMethodWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: "The edition for the database being\rcreated. Possible values include: 'Web', 'Business', 'Basic', 'Standard',\r'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'"
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: "The name of the service\robjective to assign to the database. Possible values include: 'Basic', 'S0',\r'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System',\r'System2', 'ElasticPool'"
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The maximum size for the newly\rimported database."
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function importMethodWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#importMethod'
    id: 'azure-arm-sql.Databases#importMethod'
    parent: azure-arm-sql.Databases
    name: >-
      importMethod(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.importMethod(resourceGroupName, serverName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImportExportResponse} - The deserialized result object.'
        value: '{ImportExportResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: "The edition for the database being\rcreated. Possible values include: 'Web', 'Business', 'Basic', 'Standard',\r'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'"
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: "The name of the service\robjective to assign to the database. Possible values include: 'Basic', 'S0',\r'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System',\r'System2', 'ElasticPool'"
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The maximum size for the newly\rimported database."
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function importMethod(resourceGroupName, serverName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#createImportOperationWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#createImportOperationWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      createImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: "Creates an import operation that imports a bacpac into an existing database.\rThe existing database must be empty."
    fullName: >-
      azure-arm-sql.Databases.createImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        createImportOperationWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#createImportOperation'
    id: 'azure-arm-sql.Databases#createImportOperation'
    parent: azure-arm-sql.Databases
    name: >-
      createImportOperation(resourceGroupName, serverName, databaseName,
      parameters, options, optionalCallback)
    summary: "Creates an import operation that imports a bacpac into an existing database.\rThe existing database must be empty."
    fullName: >-
      azure-arm-sql.Databases.createImportOperation(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImportExportResponse} - The deserialized result object.'
        value: '{ImportExportResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createImportOperation(resourceGroupName, serverName,
        databaseName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#exportMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#exportMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      exportMethodWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.exportMethodWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function exportMethodWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#exportMethod'
    id: 'azure-arm-sql.Databases#exportMethod'
    parent: azure-arm-sql.Databases
    name: >-
      exportMethod(resourceGroupName, serverName, databaseName, parameters,
      options, optionalCallback)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.exportMethod(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImportExportResponse} - The deserialized result object.'
        value: '{ImportExportResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function exportMethod(resourceGroupName, serverName, databaseName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listMetricsWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listMetricsWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listMetricsWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, filter, options)
    summary: Returns database metrics.
    fullName: >-
      azure-arm-sql.Databases.listMetricsWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, filter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<MetricListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<MetricListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: filter
          type:
            - string
          description: "An OData filter expression that describes a subset of\rmetrics to return."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listMetricsWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, filter, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listMetrics'
    id: 'azure-arm-sql.Databases#listMetrics'
    parent: azure-arm-sql.Databases
    name: >-
      listMetrics(resourceGroupName, serverName, databaseName, filter, options,
      optionalCallback)
    summary: Returns database metrics.
    fullName: >-
      azure-arm-sql.Databases.listMetrics(resourceGroupName, serverName,
      databaseName, filter, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{MetricListResult} - The deserialized result object.'
        value: '{MetricListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MetricListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MetricListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: filter
          type:
            - string
          description: "An OData filter expression that describes a subset of\rmetrics to return."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listMetrics(resourceGroupName, serverName, databaseName,
        filter, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listMetricDefinitionsWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listMetricDefinitionsWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listMetricDefinitionsWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    summary: Returns database metric definitions.
    fullName: >-
      azure-arm-sql.Databases.listMetricDefinitionsWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<MetricDefinitionListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<MetricDefinitionListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listMetricDefinitionsWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listMetricDefinitions'
    id: 'azure-arm-sql.Databases#listMetricDefinitions'
    parent: azure-arm-sql.Databases
    name: >-
      listMetricDefinitions(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    summary: Returns database metric definitions.
    fullName: >-
      azure-arm-sql.Databases.listMetricDefinitions(resourceGroupName,
      serverName, databaseName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{MetricDefinitionListResult} - The deserialized result object.'
        value: '{MetricDefinitionListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MetricDefinitionListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link MetricDefinitionListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listMetricDefinitions(resourceGroupName, serverName,
        databaseName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#pauseWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#pauseWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      pauseWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.pauseWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function pauseWithHttpOperationResponse(resourceGroupName, serverName,
        databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#pause'
    id: 'azure-arm-sql.Databases#pause'
    parent: azure-arm-sql.Databases
    name: >-
      pause(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.pause(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function pause(resourceGroupName, serverName, databaseName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#resumeWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#resumeWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      resumeWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.resumeWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function resumeWithHttpOperationResponse(resourceGroupName, serverName,
        databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#resume'
    id: 'azure-arm-sql.Databases#resume'
    parent: azure-arm-sql.Databases
    name: >-
      resume(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.resume(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function resume(resourceGroupName, serverName, databaseName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#createOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#createOrUpdateWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: Creates a new database or updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Database>} - The deserialized result object.'
        value: '{HttpOperationResponse<Database>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: "The name of the database to be operated on\r(updated or created)."
        - id: parameters
          type:
            - object
          description: "The required parameters for creating or updating\ra database."
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#createOrUpdate'
    id: 'azure-arm-sql.Databases#createOrUpdate'
    parent: azure-arm-sql.Databases
    name: >-
      createOrUpdate(resourceGroupName, serverName, databaseName, parameters,
      options, optionalCallback)
    summary: Creates a new database or updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.createOrUpdate(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Database} - The deserialized result object.'
        value: '{Database} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: "The name of the database to be operated on\r(updated or created)."
        - id: parameters
          type:
            - object
          description: "The required parameters for creating or updating\ra database."
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, serverName, databaseName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#updateWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#updateWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      updateWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: Updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.updateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Database>} - The deserialized result object.'
        value: '{HttpOperationResponse<Database>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be updated.
        - id: parameters
          type:
            - object
          description: The required parameters for updating a database.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(resourceGroupName, serverName,
        databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#update'
    id: 'azure-arm-sql.Databases#update'
    parent: azure-arm-sql.Databases
    name: >-
      update(resourceGroupName, serverName, databaseName, parameters, options,
      optionalCallback)
    summary: Updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.update(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Database} - The deserialized result object.'
        value: '{Database} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be updated.
        - id: parameters
          type:
            - object
          description: The required parameters for updating a database.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function update(resourceGroupName, serverName, databaseName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Deletes a database.
    fullName: >-
      azure-arm-sql.Databases.deleteMethodWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be deleted.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#deleteMethod'
    id: 'azure-arm-sql.Databases#deleteMethod'
    parent: azure-arm-sql.Databases
    name: >-
      deleteMethod(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Deletes a database.
    fullName: >-
      azure-arm-sql.Databases.deleteMethod(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be deleted.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#getWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#getWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      getWithHttpOperationResponse(resourceGroupName, serverName, databaseName,
      options)
    summary: Gets a database.
    fullName: >-
      azure-arm-sql.Databases.getWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Database>} - The deserialized result object.'
        value: '{HttpOperationResponse<Database>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: "A comma separated list of child objects to\rexpand in the response. Possible properties: serviceTierAdvisors,\rtransparentDataEncryption."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName, serverName,
        databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#get'
    id: 'azure-arm-sql.Databases#get'
    parent: azure-arm-sql.Databases
    name: >-
      get(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Gets a database.
    fullName: >-
      azure-arm-sql.Databases.get(resourceGroupName, serverName, databaseName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Database} - The deserialized result object.'
        value: '{Database} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: "A comma separated list of child objects to\rexpand in the response. Possible properties: serviceTierAdvisors,\rtransparentDataEncryption."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, serverName, databaseName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listByServerWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listByServerWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listByServerWithHttpOperationResponse(resourceGroupName, serverName,
      options)
    summary: Returns a list of databases in a server.
    fullName: >-
      azure-arm-sql.Databases.listByServerWithHttpOperationResponse(resourceGroupName,
      serverName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DatabaseListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DatabaseListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: "A comma separated list of child objects to\rexpand in the response. Possible properties: serviceTierAdvisors,\rtransparentDataEncryption."
          optional: true
        - id: options.filter
          type:
            - string
          description: "An OData filter expression that describes a\rsubset of databases to return."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByServerWithHttpOperationResponse(resourceGroupName,
        serverName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listByServer'
    id: 'azure-arm-sql.Databases#listByServer'
    parent: azure-arm-sql.Databases
    name: 'listByServer(resourceGroupName, serverName, options, optionalCallback)'
    summary: Returns a list of databases in a server.
    fullName: >-
      azure-arm-sql.Databases.listByServer(resourceGroupName, serverName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DatabaseListResult} - The deserialized result object.'
        value: '{DatabaseListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DatabaseListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DatabaseListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expand
          type:
            - string
          description: "A comma separated list of child objects to\rexpand in the response. Possible properties: serviceTierAdvisors,\rtransparentDataEncryption."
          optional: true
        - id: options.filter
          type:
            - string
          description: "An OData filter expression that describes a\rsubset of databases to return."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByServer(resourceGroupName, serverName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#getByElasticPoolWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#getByElasticPoolWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      getByElasticPoolWithHttpOperationResponse(resourceGroupName, serverName,
      elasticPoolName, databaseName, options)
    summary: Gets a database inside of an elastic pool.
    fullName: >-
      azure-arm-sql.Databases.getByElasticPoolWithHttpOperationResponse(resourceGroupName,
      serverName, elasticPoolName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Database>} - The deserialized result object.'
        value: '{HttpOperationResponse<Database>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: elasticPoolName
          type:
            - string
          description: "The name of the elastic pool to be\rretrieved."
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getByElasticPoolWithHttpOperationResponse(resourceGroupName,
        serverName, elasticPoolName, databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#getByElasticPool'
    id: 'azure-arm-sql.Databases#getByElasticPool'
    parent: azure-arm-sql.Databases
    name: >-
      getByElasticPool(resourceGroupName, serverName, elasticPoolName,
      databaseName, options, optionalCallback)
    summary: Gets a database inside of an elastic pool.
    fullName: >-
      azure-arm-sql.Databases.getByElasticPool(resourceGroupName, serverName,
      elasticPoolName, databaseName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Database} - The deserialized result object.'
        value: '{Database} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: elasticPoolName
          type:
            - string
          description: "The name of the elastic pool to be\rretrieved."
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getByElasticPool(resourceGroupName, serverName,
        elasticPoolName, databaseName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listByElasticPoolWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#listByElasticPoolWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      listByElasticPoolWithHttpOperationResponse(resourceGroupName, serverName,
      elasticPoolName, options)
    summary: Returns a list of databases in an elastic pool.
    fullName: >-
      azure-arm-sql.Databases.listByElasticPoolWithHttpOperationResponse(resourceGroupName,
      serverName, elasticPoolName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DatabaseListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DatabaseListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: elasticPoolName
          type:
            - string
          description: "The name of the elastic pool to be\rretrieved."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByElasticPoolWithHttpOperationResponse(resourceGroupName,
        serverName, elasticPoolName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listByElasticPool'
    id: 'azure-arm-sql.Databases#listByElasticPool'
    parent: azure-arm-sql.Databases
    name: >-
      listByElasticPool(resourceGroupName, serverName, elasticPoolName, options,
      optionalCallback)
    summary: Returns a list of databases in an elastic pool.
    fullName: >-
      azure-arm-sql.Databases.listByElasticPool(resourceGroupName, serverName,
      elasticPoolName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DatabaseListResult} - The deserialized result object.'
        value: '{DatabaseListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DatabaseListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DatabaseListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: elasticPoolName
          type:
            - string
          description: "The name of the elastic pool to be\rretrieved."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByElasticPool(resourceGroupName, serverName,
        elasticPoolName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-sql.Databases#getByRecommendedElasticPoolWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#getByRecommendedElasticPoolWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      getByRecommendedElasticPoolWithHttpOperationResponse(resourceGroupName,
      serverName, recommendedElasticPoolName, databaseName, options)
    summary: Gets a database inside of a recommented elastic pool.
    fullName: >-
      azure-arm-sql.Databases.getByRecommendedElasticPoolWithHttpOperationResponse(resourceGroupName,
      serverName, recommendedElasticPoolName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Database>} - The deserialized result object.'
        value: '{HttpOperationResponse<Database>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: recommendedElasticPoolName
          type:
            - string
          description: "The name of the elastic pool to\rbe retrieved."
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getByRecommendedElasticPoolWithHttpOperationResponse(resourceGroupName,
        serverName, recommendedElasticPoolName, databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#getByRecommendedElasticPool'
    id: 'azure-arm-sql.Databases#getByRecommendedElasticPool'
    parent: azure-arm-sql.Databases
    name: >-
      getByRecommendedElasticPool(resourceGroupName, serverName,
      recommendedElasticPoolName, databaseName, options, optionalCallback)
    summary: Gets a database inside of a recommented elastic pool.
    fullName: >-
      azure-arm-sql.Databases.getByRecommendedElasticPool(resourceGroupName,
      serverName, recommendedElasticPoolName, databaseName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Database} - The deserialized result object.'
        value: '{Database} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: recommendedElasticPoolName
          type:
            - string
          description: "The name of the elastic pool to\rbe retrieved."
        - id: databaseName
          type:
            - string
          description: The name of the database to be retrieved.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getByRecommendedElasticPool(resourceGroupName, serverName,
        recommendedElasticPoolName, databaseName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-sql.Databases#listByRecommendedElasticPoolWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#listByRecommendedElasticPoolWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      listByRecommendedElasticPoolWithHttpOperationResponse(resourceGroupName,
      serverName, recommendedElasticPoolName, options)
    summary: Returns a list of databases inside a recommented elastic pool.
    fullName: >-
      azure-arm-sql.Databases.listByRecommendedElasticPoolWithHttpOperationResponse(resourceGroupName,
      serverName, recommendedElasticPoolName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DatabaseListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DatabaseListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: recommendedElasticPoolName
          type:
            - string
          description: "The name of the recommended\relastic pool to be retrieved."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listByRecommendedElasticPoolWithHttpOperationResponse(resourceGroupName,
        serverName, recommendedElasticPoolName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#listByRecommendedElasticPool'
    id: 'azure-arm-sql.Databases#listByRecommendedElasticPool'
    parent: azure-arm-sql.Databases
    name: >-
      listByRecommendedElasticPool(resourceGroupName, serverName,
      recommendedElasticPoolName, options, optionalCallback)
    summary: Returns a list of databases inside a recommented elastic pool.
    fullName: >-
      azure-arm-sql.Databases.listByRecommendedElasticPool(resourceGroupName,
      serverName, recommendedElasticPoolName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DatabaseListResult} - The deserialized result object.'
        value: '{DatabaseListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DatabaseListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DatabaseListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: recommendedElasticPoolName
          type:
            - string
          description: "The name of the recommended\relastic pool to be retrieved."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByRecommendedElasticPool(resourceGroupName, serverName,
        recommendedElasticPoolName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginImportMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginImportMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginImportMethodWithHttpOperationResponse(resourceGroupName, serverName,
      parameters, options)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.beginImportMethodWithHttpOperationResponse(resourceGroupName,
      serverName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: "The edition for the database being\rcreated. Possible values include: 'Web', 'Business', 'Basic', 'Standard',\r'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'"
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: "The name of the service\robjective to assign to the database. Possible values include: 'Basic', 'S0',\r'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System',\r'System2', 'ElasticPool'"
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The maximum size for the newly\rimported database."
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginImportMethodWithHttpOperationResponse(resourceGroupName,
        serverName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginImportMethod'
    id: 'azure-arm-sql.Databases#beginImportMethod'
    parent: azure-arm-sql.Databases
    name: >-
      beginImportMethod(resourceGroupName, serverName, parameters, options,
      optionalCallback)
    summary: Imports a bacpac into a new database.
    fullName: >-
      azure-arm-sql.Databases.beginImportMethod(resourceGroupName, serverName,
      parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImportExportResponse} - The deserialized result object.'
        value: '{ImportExportResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.databaseName
          type:
            - string
          description: The name of the database to import.
        - id: parameters.edition
          type:
            - string
          description: "The edition for the database being\rcreated. Possible values include: 'Web', 'Business', 'Basic', 'Standard',\r'Premium', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'"
        - id: parameters.serviceObjectiveName
          type:
            - string
          description: "The name of the service\robjective to assign to the database. Possible values include: 'Basic', 'S0',\r'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'System',\r'System2', 'ElasticPool'"
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The maximum size for the newly\rimported database."
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginImportMethod(resourceGroupName, serverName, parameters,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-sql.Databases#beginCreateImportOperationWithHttpOperationResponse
    id: >-
      azure-arm-sql.Databases#beginCreateImportOperationWithHttpOperationResponse
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: "Creates an import operation that imports a bacpac into an existing database.\rThe existing database must be empty."
    fullName: >-
      azure-arm-sql.Databases.beginCreateImportOperationWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        beginCreateImportOperationWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginCreateImportOperation'
    id: 'azure-arm-sql.Databases#beginCreateImportOperation'
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateImportOperation(resourceGroupName, serverName, databaseName,
      parameters, options, optionalCallback)
    summary: "Creates an import operation that imports a bacpac into an existing database.\rThe existing database must be empty."
    fullName: >-
      azure-arm-sql.Databases.beginCreateImportOperation(resourceGroupName,
      serverName, databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImportExportResponse} - The deserialized result object.'
        value: '{ImportExportResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to import into
        - id: parameters
          type:
            - object
          description: "The required parameters for importing a Bacpac\rinto a database."
        - id: parameters.name
          type:
            - string
          description: The name of the extension.
          optional: true
        - id: parameters.type
          type:
            - string
          description: The type of the extension.
          optional: true
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateImportOperation(resourceGroupName, serverName,
        databaseName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginExportMethodWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginExportMethodWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginExportMethodWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.beginExportMethodWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ImportExportResponse>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginExportMethodWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginExportMethod'
    id: 'azure-arm-sql.Databases#beginExportMethod'
    parent: azure-arm-sql.Databases
    name: >-
      beginExportMethod(resourceGroupName, serverName, databaseName, parameters,
      options, optionalCallback)
    summary: Exports a database to a bacpac.
    fullName: >-
      azure-arm-sql.Databases.beginExportMethod(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ImportExportResponse} - The deserialized result object.'
        value: '{ImportExportResponse} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ImportExportResponse} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be exported.
        - id: parameters
          type:
            - object
          description: The required parameters for exporting a database.
        - id: parameters.storageKeyType
          type:
            - string
          description: "The type of the storage key to\ruse. Possible values include: 'StorageAccessKey', 'SharedAccessKey'"
        - id: parameters.storageKey
          type:
            - string
          description: "The storage key to use.  If storage\rkey type is SharedAccessKey, it must be preceded with a \"?.\""
        - id: parameters.storageUri
          type:
            - string
          description: The storage uri to use.
        - id: parameters.administratorLogin
          type:
            - string
          description: "The name of the SQL\radministrator."
        - id: parameters.administratorLoginPassword
          type:
            - string
          description: "The password of the\rSQL administrator."
        - id: parameters.authenticationType
          type:
            - string
          description: "The authentication type.\rPossible values include: 'SQL', 'ADPassword'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginExportMethod(resourceGroupName, serverName, databaseName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginPauseWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginPauseWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginPauseWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginPauseWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginPauseWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginPause'
    id: 'azure-arm-sql.Databases#beginPause'
    parent: azure-arm-sql.Databases
    name: >-
      beginPause(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Pauses a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginPause(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to pause.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginPause(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginResumeWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginResumeWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginResumeWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, options)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginResumeWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginResumeWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginResume'
    id: 'azure-arm-sql.Databases#beginResume'
    parent: azure-arm-sql.Databases
    name: >-
      beginResume(resourceGroupName, serverName, databaseName, options,
      optionalCallback)
    summary: Resumes a data warehouse.
    fullName: >-
      azure-arm-sql.Databases.beginResume(resourceGroupName, serverName,
      databaseName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the data warehouse to resume.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginResume(resourceGroupName, serverName, databaseName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginCreateOrUpdateWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginCreateOrUpdateWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    summary: Creates a new database or updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Database>} - The deserialized result object.'
        value: '{HttpOperationResponse<Database>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: "The name of the database to be operated on\r(updated or created)."
        - id: parameters
          type:
            - object
          description: "The required parameters for creating or updating\ra database."
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginCreateOrUpdate'
    id: 'azure-arm-sql.Databases#beginCreateOrUpdate'
    parent: azure-arm-sql.Databases
    name: >-
      beginCreateOrUpdate(resourceGroupName, serverName, databaseName,
      parameters, options, optionalCallback)
    summary: Creates a new database or updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.beginCreateOrUpdate(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Database} - The deserialized result object.'
        value: '{Database} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: "The name of the database to be operated on\r(updated or created)."
        - id: parameters
          type:
            - object
          description: "The required parameters for creating or updating\ra database."
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.location
          type:
            - string
          description: Resource location.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdate(resourceGroupName, serverName,
        databaseName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginUpdateWithHttpOperationResponse'
    id: 'azure-arm-sql.Databases#beginUpdateWithHttpOperationResponse'
    parent: azure-arm-sql.Databases
    name: >-
      beginUpdateWithHttpOperationResponse(resourceGroupName, serverName,
      databaseName, parameters, options)
    summary: Updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.beginUpdateWithHttpOperationResponse(resourceGroupName,
      serverName, databaseName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Database>} - The deserialized result object.'
        value: '{HttpOperationResponse<Database>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be updated.
        - id: parameters
          type:
            - object
          description: The required parameters for updating a database.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginUpdateWithHttpOperationResponse(resourceGroupName,
        serverName, databaseName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-sql.Databases#beginUpdate'
    id: 'azure-arm-sql.Databases#beginUpdate'
    parent: azure-arm-sql.Databases
    name: >-
      beginUpdate(resourceGroupName, serverName, databaseName, parameters,
      options, optionalCallback)
    summary: Updates an existing database.
    fullName: >-
      azure-arm-sql.Databases.beginUpdate(resourceGroupName, serverName,
      databaseName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Database} - The deserialized result object.'
        value: '{Database} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Database} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group that\rcontains the resource. You can obtain this value from the Azure Resource\rManager API or the portal."
        - id: serverName
          type:
            - string
          description: The name of the server.
        - id: databaseName
          type:
            - string
          description: The name of the database to be updated.
        - id: parameters
          type:
            - object
          description: The required parameters for updating a database.
        - id: parameters.tags
          type:
            - object
          description: Resource tags.
          optional: true
        - id: parameters.collation
          type:
            - string
          description: "The collation of the database. If\rcreateMode is not Default, this value is ignored."
          optional: true
        - id: parameters.createMode
          type:
            - string
          description: "Specifies the mode of database\rcreation.\r\rDefault: regular database creation.\r\rCopy: creates a database as a copy of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the source database.\r\rOnlineSecondary/NonReadableSecondary: creates a database as a (readable or\rnonreadable) secondary replica of an existing database. sourceDatabaseId\rmust be specified as the resource ID of the existing primary database.\r\rPointInTimeRestore: Creates a database by restoring a point in time backup\rof an existing database. sourceDatabaseId must be specified as the resource\rID of the existing database, and restorePointInTime must be specified.\r\rRecovery: Creates a database by restoring a geo-replicated backup.\rsourceDatabaseId must be specified as the recoverable database resource ID\rto restore.\r\rRestore: Creates a database by restoring a backup of a deleted database.\rsourceDatabaseId must be specified. If sourceDatabaseId is the database's\roriginal resource ID, then sourceDatabaseDeletionDate must be specified.\rOtherwise sourceDatabaseId must be the restorable dropped database resource\rID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be\rspecified to restore from an earlier point in time.\r\rRestoreLongTermRetentionBackup: Creates a database by restoring from a long\rterm retention vault. recoveryServicesRecoveryPointResourceId must be\rspecified as the recovery point resource ID.\r\rCopy, NonReadableSecondary, OnlineSecondary and\rRestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\rPossible values include: 'Copy', 'Default', 'NonReadableSecondary',\r'OnlineSecondary', 'PointInTimeRestore', 'Recovery', 'Restore',\r'RestoreLongTermRetentionBackup'"
          optional: true
        - id: parameters.sourceDatabaseId
          type:
            - string
          description: "Conditional. If createMode is\rCopy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery,\ror Restore, then this value is required. Specifies the resource ID of the\rsource database. If createMode is NonReadableSecondary or OnlineSecondary,\rthe name of the source database must be the same as the new database being\rcreated."
          optional: true
        - id: parameters.sourceDatabaseDeletionDate
          type:
            - date
          description: "Conditional. If\rcreateMode is Restore and sourceDatabaseId is the deleted database's\roriginal resource id when it existed (as opposed to its current restorable\rdropped database id), then this value is required. Specifies the time that\rthe database was deleted."
          optional: true
        - id: parameters.restorePointInTime
          type:
            - date
          description: "Conditional. If createMode is\rPointInTimeRestore, this value is required. If createMode is Restore, this\rvalue is optional. Specifies the point in time (ISO8601 format) of the\rsource database that will be restored to create the new database. Must be\rgreater than or equal to the source database's earliestRestoreDate value."
          optional: true
        - id: parameters.recoveryServicesRecoveryPointResourceId
          type:
            - string
          description: "Conditional. If createMode is RestoreLongTermRetentionBackup, then this\rvalue is required. Specifies the resource ID of the recovery point to\rrestore from."
          optional: true
        - id: parameters.edition
          type:
            - string
          description: "The edition of the database. The\rDatabaseEditions enumeration contains all the valid editions. If createMode\ris NonReadableSecondary or OnlineSecondary, this value is ignored. To see\rpossible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Web', 'Business', 'Basic', 'Standard', 'Premium', 'Free',\r'Stretch', 'DataWarehouse', 'System', 'System2'"
          optional: true
        - id: parameters.maxSizeBytes
          type:
            - string
          description: "The max size of the database\rexpressed in bytes. If createMode is not Default, this value is ignored. To\rsee possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveId
          type:
            - azure-arm-sql.uuid
          description: "The configured\rservice level objective ID of the database. This is the service level\robjective that is in the process of being applied to the database. Once\rsuccessfully updated, it will match the value of currentServiceObjectiveId\rproperty. If requestedServiceObjectiveId and requestedServiceObjectiveName\rare both updated, the value of requestedServiceObjectiveId overrides the\rvalue of requestedServiceObjectiveName. To see possible values, query the\rcapabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\""
          optional: true
        - id: parameters.requestedServiceObjectiveName
          type:
            - string
          description: "The name of the\rconfigured service level objective of the database. This is the service\rlevel objective that is in the process of being applied to the database.\rOnce successfully updated, it will match the value of serviceLevelObjective\rproperty. To see possible values, query the capabilities API\r(/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities)\rreferred to by operationId: \"Capabilities_ListByLocation.\". Possible values\rinclude: 'Basic', 'S0', 'S1', 'S2', 'S3', 'P1', 'P2', 'P3', 'P4', 'P6',\r'P11', 'P15', 'System', 'System2', 'ElasticPool'"
          optional: true
        - id: parameters.elasticPoolName
          type:
            - string
          description: "The name of the elastic pool\rthe database is in. If elasticPoolName and requestedServiceObjectiveName are\rboth updated, the value of requestedServiceObjectiveName is ignored. Not\rsupported for DataWarehouse edition."
          optional: true
        - id: parameters.readScale
          type:
            - string
          description: "Conditional. If the database is a\rgeo-secondary, readScale indicates whether read-only connections are allowed\rto this database or not. Not supported for DataWarehouse edition. Possible\rvalues include: 'Enabled', 'Disabled'"
          optional: true
        - id: parameters.sampleName
          type:
            - string
          description: "Indicates the name of the sample\rschema to apply when creating this database. If createMode is not Default,\rthis value is ignored. Not supported for DataWarehouse edition. Possible\rvalues include: 'AdventureWorksLT'"
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginUpdate(resourceGroupName, serverName, databaseName,
        parameters, options, optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-sql.SqlManagementClient
    name: SqlManagementClient
    fullName: azure-arm-sql.SqlManagementClient
    isExternal: false
