### YamlMime:UniversalReference
items:
  - uid: azure-keyvault.KeyVaultClient
    id: azure-keyvault.KeyVaultClient
    name: KeyVaultClient
    summary: Initializes a new instance of the KeyVaultClient class.
    fullName: azure-keyvault.KeyVaultClient
    source:
      id: azure-keyvault.KeyVaultClient
      path: lib\services\keyVault\lib\keyVault.js
      startLine: 190
      remote:
        branch: master
        path: lib\services\keyVault\lib\keyVault.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-keyvault.KeyVaultClient.#ctor'
      - 'azure-keyvault.KeyVaultClient#createKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#createKey'
      - 'azure-keyvault.KeyVaultClient#importKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#importKey'
      - 'azure-keyvault.KeyVaultClient#deleteKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteKey'
      - 'azure-keyvault.KeyVaultClient#updateKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateKey'
      - 'azure-keyvault.KeyVaultClient#getKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKey'
      - 'azure-keyvault.KeyVaultClient#getKeyVersionsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeyVersions'
      - 'azure-keyvault.KeyVaultClient#getKeysWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeys'
      - 'azure-keyvault.KeyVaultClient#backupKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#backupKey'
      - 'azure-keyvault.KeyVaultClient#restoreKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#restoreKey'
      - 'azure-keyvault.KeyVaultClient#encryptWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#encrypt'
      - 'azure-keyvault.KeyVaultClient#decryptWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#decrypt'
      - 'azure-keyvault.KeyVaultClient#signWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#sign'
      - 'azure-keyvault.KeyVaultClient#verifyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#verify'
      - 'azure-keyvault.KeyVaultClient#wrapKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#wrapKey'
      - 'azure-keyvault.KeyVaultClient#unwrapKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#unwrapKey'
      - 'azure-keyvault.KeyVaultClient#setSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#setSecret'
      - 'azure-keyvault.KeyVaultClient#deleteSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteSecret'
      - 'azure-keyvault.KeyVaultClient#updateSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateSecret'
      - 'azure-keyvault.KeyVaultClient#getSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecret'
      - 'azure-keyvault.KeyVaultClient#getSecretsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecrets'
      - 'azure-keyvault.KeyVaultClient#getSecretVersionsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecretVersions'
      - 'azure-keyvault.KeyVaultClient#getCertificatesWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getCertificates'
      - 'azure-keyvault.KeyVaultClient#deleteCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteCertificate'
      - >-
        azure-keyvault.KeyVaultClient#setCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#setCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuersWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuers'
      - >-
        azure-keyvault.KeyVaultClient#setCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#setCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateIssuer'
      - 'azure-keyvault.KeyVaultClient#createCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#createCertificate'
      - 'azure-keyvault.KeyVaultClient#importCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#importCertificate'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateVersionsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateVersions'
      - >-
        azure-keyvault.KeyVaultClient#getCertificatePolicyWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificatePolicy'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificatePolicy'
      - 'azure-keyvault.KeyVaultClient#updateCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateCertificate'
      - 'azure-keyvault.KeyVaultClient#getCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getCertificate'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificateOperation'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateOperation'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateOperation'
      - 'azure-keyvault.KeyVaultClient#mergeCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#mergeCertificate'
      - >-
        azure-keyvault.KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getKeyVersionsNext'
      - 'azure-keyvault.KeyVaultClient#getKeysNextWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeysNext'
      - 'azure-keyvault.KeyVaultClient#getSecretsNextWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecretsNext'
      - >-
        azure-keyvault.KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getSecretVersionsNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificatesNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificatesNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuersNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateVersionsNext'
      - >-
        azure-keyvault.KeyVaultClient#getPendingCertificateSigningRequestWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getPendingCertificateSigningRequest'
      - 'azure-keyvault.KeyVaultClient#createKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#createKey'
      - 'azure-keyvault.KeyVaultClient#importKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#importKey'
      - 'azure-keyvault.KeyVaultClient#deleteKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteKey'
      - 'azure-keyvault.KeyVaultClient#updateKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateKey'
      - 'azure-keyvault.KeyVaultClient#getKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKey'
      - 'azure-keyvault.KeyVaultClient#getKeyVersionsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeyVersions'
      - 'azure-keyvault.KeyVaultClient#getKeysWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeys'
      - 'azure-keyvault.KeyVaultClient#backupKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#backupKey'
      - 'azure-keyvault.KeyVaultClient#restoreKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#restoreKey'
      - 'azure-keyvault.KeyVaultClient#encryptWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#encrypt'
      - 'azure-keyvault.KeyVaultClient#decryptWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#decrypt'
      - 'azure-keyvault.KeyVaultClient#signWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#sign'
      - 'azure-keyvault.KeyVaultClient#verifyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#verify'
      - 'azure-keyvault.KeyVaultClient#wrapKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#wrapKey'
      - 'azure-keyvault.KeyVaultClient#unwrapKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#unwrapKey'
      - 'azure-keyvault.KeyVaultClient#getDeletedKeysWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getDeletedKeys'
      - 'azure-keyvault.KeyVaultClient#getDeletedKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getDeletedKey'
      - 'azure-keyvault.KeyVaultClient#purgeDeletedKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#purgeDeletedKey'
      - 'azure-keyvault.KeyVaultClient#recoverDeletedKeyWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#recoverDeletedKey'
      - 'azure-keyvault.KeyVaultClient#setSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#setSecret'
      - 'azure-keyvault.KeyVaultClient#deleteSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteSecret'
      - 'azure-keyvault.KeyVaultClient#updateSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateSecret'
      - 'azure-keyvault.KeyVaultClient#getSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecret'
      - 'azure-keyvault.KeyVaultClient#getSecretsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecrets'
      - 'azure-keyvault.KeyVaultClient#getSecretVersionsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecretVersions'
      - 'azure-keyvault.KeyVaultClient#getDeletedSecretsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getDeletedSecrets'
      - 'azure-keyvault.KeyVaultClient#getDeletedSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getDeletedSecret'
      - >-
        azure-keyvault.KeyVaultClient#purgeDeletedSecretWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#purgeDeletedSecret'
      - >-
        azure-keyvault.KeyVaultClient#recoverDeletedSecretWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#recoverDeletedSecret'
      - 'azure-keyvault.KeyVaultClient#backupSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#backupSecret'
      - 'azure-keyvault.KeyVaultClient#restoreSecretWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#restoreSecret'
      - 'azure-keyvault.KeyVaultClient#getCertificatesWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getCertificates'
      - 'azure-keyvault.KeyVaultClient#deleteCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#deleteCertificate'
      - >-
        azure-keyvault.KeyVaultClient#setCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#setCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateContacts'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuersWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuers'
      - >-
        azure-keyvault.KeyVaultClient#setCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#setCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuer'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateIssuer'
      - 'azure-keyvault.KeyVaultClient#createCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#createCertificate'
      - 'azure-keyvault.KeyVaultClient#importCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#importCertificate'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateVersionsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateVersions'
      - >-
        azure-keyvault.KeyVaultClient#getCertificatePolicyWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificatePolicy'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificatePolicy'
      - 'azure-keyvault.KeyVaultClient#updateCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#updateCertificate'
      - 'azure-keyvault.KeyVaultClient#getCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getCertificate'
      - >-
        azure-keyvault.KeyVaultClient#updateCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateCertificateOperation'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateOperation'
      - >-
        azure-keyvault.KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteCertificateOperation'
      - 'azure-keyvault.KeyVaultClient#mergeCertificateWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#mergeCertificate'
      - >-
        azure-keyvault.KeyVaultClient#getDeletedCertificatesWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getDeletedCertificates'
      - >-
        azure-keyvault.KeyVaultClient#getDeletedCertificateWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getDeletedCertificate'
      - >-
        azure-keyvault.KeyVaultClient#purgeDeletedCertificateWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#purgeDeletedCertificate'
      - >-
        azure-keyvault.KeyVaultClient#recoverDeletedCertificateWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#recoverDeletedCertificate'
      - >-
        azure-keyvault.KeyVaultClient#getStorageAccountsWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getStorageAccounts'
      - >-
        azure-keyvault.KeyVaultClient#deleteStorageAccountWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteStorageAccount'
      - 'azure-keyvault.KeyVaultClient#getStorageAccountWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getStorageAccount'
      - 'azure-keyvault.KeyVaultClient#setStorageAccountWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#setStorageAccount'
      - >-
        azure-keyvault.KeyVaultClient#updateStorageAccountWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateStorageAccount'
      - >-
        azure-keyvault.KeyVaultClient#regenerateStorageAccountKeyWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#regenerateStorageAccountKey'
      - 'azure-keyvault.KeyVaultClient#getSasDefinitionsWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSasDefinitions'
      - >-
        azure-keyvault.KeyVaultClient#deleteSasDefinitionWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#deleteSasDefinition'
      - 'azure-keyvault.KeyVaultClient#getSasDefinitionWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSasDefinition'
      - 'azure-keyvault.KeyVaultClient#setSasDefinitionWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#setSasDefinition'
      - >-
        azure-keyvault.KeyVaultClient#updateSasDefinitionWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#updateSasDefinition'
      - >-
        azure-keyvault.KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getKeyVersionsNext'
      - 'azure-keyvault.KeyVaultClient#getKeysNextWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getKeysNext'
      - >-
        azure-keyvault.KeyVaultClient#getDeletedKeysNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getDeletedKeysNext'
      - 'azure-keyvault.KeyVaultClient#getSecretsNextWithHttpOperationResponse'
      - 'azure-keyvault.KeyVaultClient#getSecretsNext'
      - >-
        azure-keyvault.KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getSecretVersionsNext'
      - >-
        azure-keyvault.KeyVaultClient#getDeletedSecretsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getDeletedSecretsNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificatesNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificatesNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateIssuersNext'
      - >-
        azure-keyvault.KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getCertificateVersionsNext'
      - >-
        azure-keyvault.KeyVaultClient#getDeletedCertificatesNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getDeletedCertificatesNext'
      - >-
        azure-keyvault.KeyVaultClient#getStorageAccountsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getStorageAccountsNext'
      - >-
        azure-keyvault.KeyVaultClient#getSasDefinitionsNextWithHttpOperationResponse
      - 'azure-keyvault.KeyVaultClient#getSasDefinitionsNext'
    langs:
      - js
  - id: 'azure-keyvault.KeyVaultClient.#ctor'
    uid: 'azure-keyvault.KeyVaultClient.#ctor'
    parent: azure-keyvault.KeyVaultClient
    name: 'KeyVaultClient(credentials, options)'
    fullName: 'azure-keyvault.KeyVaultClient.KeyVaultClient(credentials, options)'
    summary: ''
    type: Constructor
    syntax:
      parameters:
        - id: credentials
          type:
            - azure-keyvault.credentials
          description: Credentials needed for the client to connect to Azure.
        - id: options
          type:
            - object
          description: The parameter options
          optional: true
        - id: options.filters
          type:
            - Array
          description: Filters to be added to the request pipeline
          optional: true
        - id: options.requestOptions
          type:
            - object
          description: "Options for the underlying request object\r[Options doc](https://github.com/request/request#requestoptions-callback)"
          optional: true
        - id: options.noRetryPolicy
          type:
            - boolean
          description: 'If set to true, turn off default retry policy'
          optional: true
        - id: options.apiVersion
          type:
            - string
          description: Client Api Version.
          optional: true
        - id: options.acceptLanguage
          type:
            - string
          description: Gets or sets the preferred language for the response.
          optional: true
        - id: options.longRunningOperationRetryTimeout
          type:
            - number
          description: >-
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
          optional: true
        - id: options.generateClientRequestId
          type:
            - boolean
          description: >-
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
          optional: true
      content: 'new KeyVaultClient(credentials, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#createKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#createKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      createKeyWithHttpOperationResponse(vaultBaseUrl, keyName, keyType,
      options)
    summary: "Creates a new key, stores it, then returns key parameters and attributes to\rthe client. The create key operation can be used to create any key type in\rAzure Key Vault. If the named key already exists, Azure Key Vault creates a\rnew version of the key. Authorization: Requires the keys/create permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.createKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, keyType, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
        value: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: "The name for the new key. The system will generate\rthe version name for the new key."
        - id: keyType
          type:
            - string
          description: "The type of key to create. For valid key types, see\rJsonWebKeyType. Supported JsonWebKey key types (kty) for Elliptic Curve,\rRSA, HSM, Octet. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keySize
          type:
            - number
          description: "The key size in bytes. For example, 1024\ror 2048."
          optional: true
        - id: options.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled."
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        keyType, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#createKey'
    id: 'azure-keyvault.KeyVaultClient#createKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'createKey(vaultBaseUrl, keyName, keyType, options, optionalCallback)'
    summary: 'Creates a new, named, key in the specified vault.'
    fullName: >-
      azure-keyvault.KeyVaultClient.createKey(vaultBaseUrl, keyName, keyType,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyBundle} - The deserialized result object.'
        value: '{KeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: keyName
          type:
            - string
          description: The name of the key
        - id: keyType
          type:
            - string
          description: "The type of key to create. Valid key types, see\rJsonWebKeyType. Possible values include: 'EC', 'RSA', 'RSA-HSM', 'oct'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keySize
          type:
            - number
          description: The key size in bytes. e.g. 1024 or 2048.
          optional: true
        - id: options.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled"
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application-specific metadata in the form of\rkey-value pairs"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createKey(vaultBaseUrl, keyName, keyType, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#importKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#importKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'importKeyWithHttpOperationResponse(vaultBaseUrl, keyName, key, options)'
    summary: "Imports an externally created key, stores it, and returns key parameters and\rattributes to the client. The import key operation may be used to import any\rkey type into an Azure Key Vault. If the named key already exists, Azure Key\rVault creates a new version of the key. Authorization: requires the\rkeys/import permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.importKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, key, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
        value: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: Name for the imported key.
        - id: key
          type:
            - object
          description: The Json web key
        - id: key.kid
          type:
            - string
          description: Key identifier.
          optional: true
        - id: key.kty
          type:
            - string
          description: "Supported JsonWebKey key types (kty) for Elliptic\rCurve, RSA, HSM, Octet. Kty is usually set to RSA. Possible values include:\r'EC', 'RSA', 'RSA-HSM', 'oct'"
          optional: true
        - id: key.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: key.n
          type:
            - azure-keyvault.buffer
          description: RSA modulus.
          optional: true
        - id: key.e
          type:
            - azure-keyvault.buffer
          description: RSA public exponent.
          optional: true
        - id: key.d
          type:
            - azure-keyvault.buffer
          description: RSA private exponent.
          optional: true
        - id: key.dp
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.dq
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.qi
          type:
            - azure-keyvault.buffer
          description: RSA private key parameter.
          optional: true
        - id: key.p
          type:
            - azure-keyvault.buffer
          description: RSA secret prime.
          optional: true
        - id: key.q
          type:
            - azure-keyvault.buffer
          description: 'RSA secret prime, with p < q.'
          optional: true
        - id: key.k
          type:
            - azure-keyvault.buffer
          description: Symmetric key.
          optional: true
        - id: key.t
          type:
            - azure-keyvault.buffer
          description: 'HSM Token, used with ''Bring Your Own Key''.'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hsm
          type:
            - boolean
          description: "Whether to import as a hardware key (HSM) or\rsoftware key."
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: The key management attributes.
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled."
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function importKeyWithHttpOperationResponse(vaultBaseUrl, keyName, key,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#importKey'
    id: 'azure-keyvault.KeyVaultClient#importKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'importKey(vaultBaseUrl, keyName, key, options, optionalCallback)'
    summary: Imports a key into the specified vault
    fullName: >-
      azure-keyvault.KeyVaultClient.importKey(vaultBaseUrl, keyName, key,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyBundle} - The deserialized result object.'
        value: '{KeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: keyName
          type:
            - string
          description: The name of the key
        - id: key
          type:
            - object
          description: The Json web key
        - id: key.kid
          type:
            - string
          description: Key Identifier
          optional: true
        - id: key.kty
          type:
            - string
          description: "Key type, usually RSA. Possible values include:\r'EC', 'RSA', 'RSA-HSM', 'oct'"
          optional: true
        - id: key.keyOps
          type:
            - array
          description: ''
          optional: true
        - id: key.n
          type:
            - azure-keyvault.buffer
          description: RSA modulus
          optional: true
        - id: key.e
          type:
            - azure-keyvault.buffer
          description: RSA public exponent
          optional: true
        - id: key.d
          type:
            - azure-keyvault.buffer
          description: RSA private exponent
          optional: true
        - id: key.dp
          type:
            - azure-keyvault.buffer
          description: RSA Private Key Parameter
          optional: true
        - id: key.dq
          type:
            - azure-keyvault.buffer
          description: RSA Private Key Parameter
          optional: true
        - id: key.qi
          type:
            - azure-keyvault.buffer
          description: RSA Private Key Parameter
          optional: true
        - id: key.p
          type:
            - azure-keyvault.buffer
          description: RSA secret prime
          optional: true
        - id: key.q
          type:
            - azure-keyvault.buffer
          description: 'RSA secret prime, with p < q'
          optional: true
        - id: key.k
          type:
            - azure-keyvault.buffer
          description: Symmetric key
          optional: true
        - id: key.t
          type:
            - azure-keyvault.buffer
          description: 'HSM Token, used with Bring Your Own Key'
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.hsm
          type:
            - boolean
          description: "Whether to import as a hardware key (HSM) or\rsoftware key"
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: The key management attributes
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled"
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application-specific metadata in the form of\rkey-value pairs"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function importKey(vaultBaseUrl, keyName, key, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#deleteKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteKeyWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: "Deletes a key of any type from storage in Azure Key Vault. The delete key\roperation cannot be used to remove individual versions of a key. This\roperation removes the cryptographic material associated with the key, which\rmeans the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt\roperations. Authorization: Requires the keys/delete permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
        value: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteKey'
    id: 'azure-keyvault.KeyVaultClient#deleteKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteKey(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: "Deletes a key of any type from storage in Azure Key Vault. The delete key\roperation cannot be used to remove individual versions of a key. This\roperation removes the cryptographic material associated with the key, which\rmeans the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt\roperations. Authorization: Requires the keys/delete permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteKey(vaultBaseUrl, keyName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyBundle} - The deserialized result object.'
        value: '{KeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteKey(vaultBaseUrl, keyName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#updateKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'updateKeyWithHttpOperationResponse(keyIdentifier, options)'
    summary: "The update key operation changes specified attributes of a stored key and\rcan be applied to any key type and key version stored in Azure Key Vault.\rThe cryptographic material of a key itself cannot be changed. In order to\rperform this operation, the key must already exist in the Key Vault.\rAuthorization: requires the keys/update permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.updateKeyWithHttpOperationResponse(keyIdentifier,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
        value: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: >-
            The key identifier. It may or may not contain a version path. If a
            version is not provided, the latest key version is used.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keyOps
          type:
            - array
          description: "Json web key operations. For more\rinformation on possible key operations, see JsonWebKeyOperation."
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled."
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function updateKeyWithHttpOperationResponse(keyIdentifier, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateKey'
    id: 'azure-keyvault.KeyVaultClient#updateKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'updateKey(keyIdentifier, options, optionalCallback)'
    summary: "The update key operation changes specified attributes of a stored key and\rcan be applied to any key type and key version stored in Azure Key Vault.\rThe cryptographic material of a key itself cannot be changed. In order to\rperform this operation, the key must already exist in the Key Vault.\rAuthorization: requires the keys/update permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.updateKey(keyIdentifier, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyBundle} - The deserialized result object.'
        value: '{KeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.keyOps
          type:
            - array
          description: "Json web key operations. For more\rinformation on possible key operations, see JsonWebKeyOperation."
          optional: true
        - id: options.keyAttributes
          type:
            - object
          description: ''
          optional: true
        - id: options.keyAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled"
          optional: true
        - id: options.keyAttributes.notBefore
          type:
            - date
          description: Not before date in UTC
          optional: true
        - id: options.keyAttributes.expires
          type:
            - date
          description: Expiry date in UTC
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application-specific metadata in the form of\rkey-value pairs"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function updateKey(keyIdentifier, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyWithHttpOperationResponse(keyIdentifier, options)'
    summary: "Gets the public part of a stored key. The get key operation is applicable to\rall key types. If the requested key is symmetric, then no key material is\rreleased in the response. Authorization: Requires the keys/get permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyWithHttpOperationResponse(keyIdentifier,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
        value: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getKeyWithHttpOperationResponse(keyIdentifier, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKey'
    id: 'azure-keyvault.KeyVaultClient#getKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKey(keyIdentifier, options, optionalCallback)'
    summary: "Gets the public part of a stored key. The get key operation is applicable to\rall key types. If the requested key is symmetric, then no key material is\rreleased in the response. Authorization: Requires the keys/get permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getKey(keyIdentifier, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyBundle} - The deserialized result object.'
        value: '{KeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getKey(keyIdentifier, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersionsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersionsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersionsWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getKeyVersionsWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersions'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersions'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersions(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: List the versions of the specified key
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersions(vaultBaseUrl, keyName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyListResult} - The deserialized result object.'
        value: '{KeyListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: keyName
          type:
            - string
          description: The name of the key
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getKeyVersions(vaultBaseUrl, keyName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeysWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeysWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeysWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List keys in the specified vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeysWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getKeysWithHttpOperationResponse(vaultBaseUrl, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeys'
    id: 'azure-keyvault.KeyVaultClient#getKeys'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeys(vaultBaseUrl, options, optionalCallback)'
    summary: List keys in the specified vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeys(vaultBaseUrl, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyListResult} - The deserialized result object.'
        value: '{KeyListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getKeys(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#backupKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#backupKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'backupKeyWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: Requests that a backup of the specified key be downloaded to the client.
    fullName: >-
      azure-keyvault.KeyVaultClient.backupKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<BackupKeyResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<BackupKeyResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function backupKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#backupKey'
    id: 'azure-keyvault.KeyVaultClient#backupKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'backupKey(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: Requests that a backup of the specified key be downloaded to the client.
    fullName: >-
      azure-keyvault.KeyVaultClient.backupKey(vaultBaseUrl, keyName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BackupKeyResult} - The deserialized result object.'
        value: '{BackupKeyResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link BackupKeyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link BackupKeyResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function backupKey(vaultBaseUrl, keyName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#restoreKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#restoreKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      restoreKeyWithHttpOperationResponse(vaultBaseUrl, keyBundleBackup,
      options)
    summary: Restores a backed up key to a vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.restoreKeyWithHttpOperationResponse(vaultBaseUrl,
      keyBundleBackup, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
        value: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyBundleBackup
          type:
            - azure-keyvault.buffer
          description: "The backup blob associated with a key\rbundle."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restoreKeyWithHttpOperationResponse(vaultBaseUrl,
        keyBundleBackup, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#restoreKey'
    id: 'azure-keyvault.KeyVaultClient#restoreKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'restoreKey(vaultBaseUrl, keyBundleBackup, options, optionalCallback)'
    summary: Restores a backed up key to a vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.restoreKey(vaultBaseUrl, keyBundleBackup,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyBundle} - The deserialized result object.'
        value: '{KeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyBundleBackup
          type:
            - azure-keyvault.buffer
          description: "The backup blob associated with a key\rbundle."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function restoreKey(vaultBaseUrl, keyBundleBackup, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#encryptWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#encryptWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'encryptWithHttpOperationResponse(keyIdentifier, algorithm, value, options)'
    summary: "Encrypts an arbitrary sequence of bytes using an encryption key that is\rstored in a key vault."
    fullName: >-
      azure-keyvault.KeyVaultClient.encryptWithHttpOperationResponse(keyIdentifier,
      algorithm, value, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function encryptWithHttpOperationResponse(keyIdentifier, algorithm,
        value, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#encrypt'
    id: 'azure-keyvault.KeyVaultClient#encrypt'
    parent: azure-keyvault.KeyVaultClient
    name: 'encrypt(keyIdentifier, algorithm, value, options, optionalCallback)'
    summary: "Encrypts an arbitrary sequence of bytes using an encryption key that is\rstored in Azure Key Vault."
    fullName: >-
      azure-keyvault.KeyVaultClient.encrypt(keyIdentifier, algorithm, value,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyOperationResult} - The deserialized result object.'
        value: '{KeyOperationResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: >-
            The key identifier. It may or may not contain a version path. If a
            version is not provided, the latest key version is used.
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function encrypt(keyIdentifier, algorithm, value, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#decryptWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#decryptWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'decryptWithHttpOperationResponse(keyIdentifier, algorithm, value, options)'
    summary: Decrypts a single block of encrypted data.
    fullName: >-
      azure-keyvault.KeyVaultClient.decryptWithHttpOperationResponse(keyIdentifier,
      algorithm, value, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function decryptWithHttpOperationResponse(keyIdentifier, algorithm,
        value, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#decrypt'
    id: 'azure-keyvault.KeyVaultClient#decrypt'
    parent: azure-keyvault.KeyVaultClient
    name: 'decrypt(keyIdentifier, algorithm, value, options, optionalCallback)'
    summary: Decrypts a single block of encrypted data
    fullName: >-
      azure-keyvault.KeyVaultClient.decrypt(keyIdentifier, algorithm, value,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyOperationResult} - The deserialized result object.'
        value: '{KeyOperationResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function decrypt(keyIdentifier, algorithm, value, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#signWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#signWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'signWithHttpOperationResponse(keyIdentifier, algorithm, value, options)'
    summary: Creates a signature from a digest using the specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.signWithHttpOperationResponse(keyIdentifier,
      algorithm, value, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "The signing/verification algorithm identifier. For\rmore information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function signWithHttpOperationResponse(keyIdentifier, algorithm, value,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#sign'
    id: 'azure-keyvault.KeyVaultClient#sign'
    parent: azure-keyvault.KeyVaultClient
    name: 'sign(keyIdentifier, algorithm, value, options, callback)'
    summary: Creates a signature from a digest using the specified key in the vault
    fullName: >-
      azure-keyvault.KeyVaultClient.sign(keyIdentifier, algorithm, value,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "The signing/verification algorithm identifier.\rFor more information on possible algorithm types, see\rJsonWebKeySignatureAlgorithm. Possible values include: 'RS256', 'RS384',\r'RS512', 'RSNULL'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See <xref:azure-keyvault.KeyOperationResult> for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function sign(keyIdentifier, algorithm, value, options, callback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#verifyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#verifyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      verifyWithHttpOperationResponse(keyIdentifier, algorithm, digest,
      signature, options)
    summary: Verifies a signature using a specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.verifyWithHttpOperationResponse(keyIdentifier,
      algorithm, digest, signature, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyVerifyResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyVerifyResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'"
        - id: digest
          type:
            - azure-keyvault.buffer
          description: The digest used for signing.
        - id: signature
          type:
            - azure-keyvault.buffer
          description: The signature to be verified.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function verifyWithHttpOperationResponse(keyIdentifier, algorithm,
        digest, signature, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#verify'
    id: 'azure-keyvault.KeyVaultClient#verify'
    parent: azure-keyvault.KeyVaultClient
    name: 'verify(keyIdentifier, algorithm, digest, signature, options, callback)'
    summary: Verifies a signature using the specified key
    fullName: >-
      azure-keyvault.KeyVaultClient.verify(keyIdentifier, algorithm, digest,
      signature, options, callback)
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "The signing/verification algorithm. For more\rinformation on possible algorithm types, see JsonWebKeySignatureAlgorithm.\rPossible values include: 'RS256', 'RS384', 'RS512', 'RSNULL'"
        - id: digest
          type:
            - azure-keyvault.buffer
          description: The digest used for signing
        - id: signature
          type:
            - azure-keyvault.buffer
          description: The signature to be verified
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See <xref:azure-keyvault.KeyVerifyResult> for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: >-
        function verify(keyIdentifier, algorithm, digest, signature, options,
        callback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#wrapKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#wrapKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'wrapKeyWithHttpOperationResponse(keyIdentifier, algorithm, value, options)'
    summary: Wraps a symmetric key using a specified key.
    fullName: >-
      azure-keyvault.KeyVaultClient.wrapKeyWithHttpOperationResponse(keyIdentifier,
      algorithm, value, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function wrapKeyWithHttpOperationResponse(keyIdentifier, algorithm,
        value, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#wrapKey'
    id: 'azure-keyvault.KeyVaultClient#wrapKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'wrapKey(keyIdentifier, algorithm, value, options, callback)'
    summary: Wraps a symmetric key using the specified key
    fullName: >-
      azure-keyvault.KeyVaultClient.wrapKey(keyIdentifier, algorithm, value,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path.\rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See <xref:azure-keyvault.KeyOperationResult> for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function wrapKey(keyIdentifier, algorithm, value, options, callback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#unwrapKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#unwrapKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      unwrapKeyWithHttpOperationResponse(keyIdentifier, algorithm, value,
      options)
    summary: "Unwraps a symmetric key using the specified key that was initially used for\rwrapping that key."
    fullName: >-
      azure-keyvault.KeyVaultClient.unwrapKeyWithHttpOperationResponse(keyIdentifier,
      algorithm, value, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function unwrapKeyWithHttpOperationResponse(keyIdentifier, algorithm,
        value, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#unwrapKey'
    id: 'azure-keyvault.KeyVaultClient#unwrapKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'unwrapKey(keyIdentifier, algorithm, value, options, callback)'
    summary: "Unwraps a symmetric key using the specified key in the vault that has\rinitially been used for wrapping the key."
    fullName: >-
      azure-keyvault.KeyVaultClient.unwrapKey(keyIdentifier, algorithm, value,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: keyIdentifier
          type:
            - string
          description: "The key identifier. It may or may not contain a version path. \rIf a version is not provided, the latest key version is used."
        - id: algorithm
          type:
            - string
          description: "algorithm identifier. Possible values include:\r'RSA-OAEP', 'RSA1_5'"
        - id: value
          type:
            - azure-keyvault.buffer
          description: ''
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See <xref:azure-keyvault.KeyOperationResult> for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function unwrapKey(keyIdentifier, algorithm, value, options, callback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#setSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setSecretWithHttpOperationResponse(vaultBaseUrl, secretName, value,
      options)
    summary: Sets a secret in a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, value, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: value
          type:
            - string
          description: The value of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.contentType
          type:
            - string
          description: "Type of the secret value such as a\rpassword."
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes.
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled."
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
        value, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setSecret'
    id: 'azure-keyvault.KeyVaultClient#setSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'setSecret(vaultBaseUrl, secretName, value, options, optionalCallback)'
    summary: Sets a secret in a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setSecret(vaultBaseUrl, secretName, value,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretBundle} - The deserialized result object.'
        value: '{SecretBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: value
          type:
            - string
          description: The value of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.contentType
          type:
            - string
          description: "Type of the secret value such as a\rpassword."
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes.
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled."
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function setSecret(vaultBaseUrl, secretName, value, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#deleteSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteSecretWithHttpOperationResponse(vaultBaseUrl, secretName, options)'
    summary: Deletes a secret from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteSecret'
    id: 'azure-keyvault.KeyVaultClient#deleteSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteSecret(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: Deletes a secret from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteSecret(vaultBaseUrl, secretName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretBundle} - The deserialized result object.'
        value: '{SecretBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteSecret(vaultBaseUrl, secretName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#updateSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'updateSecretWithHttpOperationResponse(secretIdentifier, options)'
    summary: "Updates the attributes associated with a specified secret in a given key\rvault."
    fullName: >-
      azure-keyvault.KeyVaultClient.updateSecretWithHttpOperationResponse(secretIdentifier,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: secretIdentifier
          type:
            - string
          description: "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.contentType
          type:
            - string
          description: "Type of the secret value such as a\rpassword."
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes.
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled."
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC.
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateSecretWithHttpOperationResponse(secretIdentifier,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateSecret'
    id: 'azure-keyvault.KeyVaultClient#updateSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'updateSecret(secretIdentifier, options, optionalCallback)'
    summary: "Updates the attributes associated with a specified secret in a given key\rvault."
    fullName: >-
      azure-keyvault.KeyVaultClient.updateSecret(secretIdentifier, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretBundle} - The deserialized result object.'
        value: '{SecretBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: secretIdentifier
          type:
            - string
          description: "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.contentType
          type:
            - string
          description: "Type of the secret value such as a\rpassword"
          optional: true
        - id: options.secretAttributes
          type:
            - object
          description: The secret management attributes
          optional: true
        - id: options.secretAttributes.enabled
          type:
            - boolean
          description: "Determines whether the\robject is enabled"
          optional: true
        - id: options.secretAttributes.notBefore
          type:
            - date
          description: Not before date in UTC
          optional: true
        - id: options.secretAttributes.expires
          type:
            - date
          description: Expiry date in UTC
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application-specific metadata in the form of\rkey-value pairs"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function updateSecret(secretIdentifier, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretWithHttpOperationResponse(secretIdentifier, options)'
    summary: Get a specified secret from a given key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretWithHttpOperationResponse(secretIdentifier,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: secretIdentifier
          type:
            - string
          description: "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getSecretWithHttpOperationResponse(secretIdentifier, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecret'
    id: 'azure-keyvault.KeyVaultClient#getSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecret(secretIdentifier, options, callback)'
    summary: Get a specified secret from a given key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecret(secretIdentifier, options,
      callback)
    type: Function
    syntax:
      parameters:
        - id: secretIdentifier
          type:
            - string
          description: "The secret identifier. It may or may not contain a version path. \rIf a version is not provided, the latest secret version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See <xref:azure-keyvault.SecretBundle> for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getSecret(secretIdentifier, options, callback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecretsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List secrets in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretsWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getSecretsWithHttpOperationResponse(vaultBaseUrl, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecrets'
    id: 'azure-keyvault.KeyVaultClient#getSecrets'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecrets(vaultBaseUrl, options, optionalCallback)'
    summary: List secrets in the specified vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecrets(vaultBaseUrl, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretListResult} - The deserialized result object.'
        value: '{SecretListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getSecrets(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecretVersionsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretVersionsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSecretVersionsWithHttpOperationResponse(vaultBaseUrl, secretName,
      options)
    summary: List the versions of the specified secret.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSecretVersionsWithHttpOperationResponse(vaultBaseUrl,
        secretName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecretVersions'
    id: 'azure-keyvault.KeyVaultClient#getSecretVersions'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretVersions(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: List the versions of the specified secret
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersions(vaultBaseUrl, secretName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretListResult} - The deserialized result object.'
        value: '{SecretListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: secretName
          type:
            - string
          description: The name of the secret in the given vault
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getSecretVersions(vaultBaseUrl, secretName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatesWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getCertificatesWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificatesWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatesWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getCertificatesWithHttpOperationResponse(vaultBaseUrl, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificates'
    id: 'azure-keyvault.KeyVaultClient#getCertificates'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificates(vaultBaseUrl, options, optionalCallback)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificates(vaultBaseUrl, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateListResult} - The deserialized result object.'
        value: '{CertificateListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getCertificates(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      options)
    summary: Deletes a certificate from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificate'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificate(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Deletes a certificate from a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificate(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateBundle} - The deserialized result object.'
        value: '{CertificateBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteCertificate(vaultBaseUrl, certificateName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#setCertificateContactsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#setCertificateContactsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setCertificateContactsWithHttpOperationResponse(vaultBaseUrl, contacts,
      options)
    summary: Sets the certificate contacts for the specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
      contacts, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Contacts>} - The deserialized result object.'
        value: '{HttpOperationResponse<Contacts>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error|ServiceError} - The error object.'
        value: '{Error|ServiceError} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: contacts
          type:
            - object
          description: The contacts for the key vault certificate.
        - id: contacts.contactList
          type:
            - array
          description: "The contact list for the vault\rcertificates."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
        contacts, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#setCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: 'setCertificateContacts(vaultBaseUrl, contacts, options, optionalCallback)'
    summary: Sets the certificate contacts for the specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateContacts(vaultBaseUrl,
      contacts, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Contacts} - The deserialized result object.'
        value: '{Contacts} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: contacts
          type:
            - object
          description: The contacts for the key vault certificate.
        - id: contacts.contactList
          type:
            - array
          description: "The contact list for the vault\rcertificates."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function setCertificateContacts(vaultBaseUrl, contacts, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateContactsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateContactsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateContactsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: Lists the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Contacts>} - The deserialized result object.'
        value: '{HttpOperationResponse<Contacts>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#getCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateContacts(vaultBaseUrl, options, optionalCallback)'
    summary: Lists the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateContacts(vaultBaseUrl,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Contacts} - The deserialized result object.'
        value: '{Contacts} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getCertificateContacts(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#deleteCertificateContactsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: Deletes the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Contacts>} - The deserialized result object.'
        value: '{HttpOperationResponse<Contacts>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteCertificateContactsWithHttpOperationResponse(vaultBaseUrl,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateContacts'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateContacts'
    parent: azure-keyvault.KeyVaultClient
    name: 'deleteCertificateContacts(vaultBaseUrl, options, optionalCallback)'
    summary: Deletes the certificate contacts for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateContacts(vaultBaseUrl,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Contacts} - The deserialized result object.'
        value: '{Contacts} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link Contacts} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteCertificateContacts(vaultBaseUrl, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateIssuerListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<CertificateIssuerListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateIssuersWithHttpOperationResponse(vaultBaseUrl,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateIssuers'
    id: 'azure-keyvault.KeyVaultClient#getCertificateIssuers'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuers(vaultBaseUrl, options, optionalCallback)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuers(vaultBaseUrl, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateIssuerListResult} - The deserialized result object.'
        value: '{CertificateIssuerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getCertificateIssuers(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#setCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#setCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      provider, options)
    summary: Sets the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, provider, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: provider
          type:
            - string
          description: The issuer provider.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.credentials
          type:
            - object
          description: "The credentials to be used for the\rissuer."
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: "The user name/account\rname/account id."
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: "The password/secret/account\rkey."
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: "Details of the organization as\rprovided to the issuer."
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: "Details of the\rorganization administrator."
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: "Determines whether the issuer\ris enabled."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, provider, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#setCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setCertificateIssuer(vaultBaseUrl, issuerName, provider, options,
      optionalCallback)
    summary: Sets the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.setCertificateIssuer(vaultBaseUrl,
      issuerName, provider, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{IssuerBundle} - The deserialized result object.'
        value: '{IssuerBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: provider
          type:
            - string
          description: The issuer provider.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.credentials
          type:
            - object
          description: "The credentials to be used for the\rissuer."
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: "The user name/account\rname/account id."
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: "The password/secret/account\rkey."
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: "Details of the organization as\rprovided to the issuer."
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: "Details of the\rorganization administrator."
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: "Determines whether the issuer\ris enabled."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function setCertificateIssuer(vaultBaseUrl, issuerName, provider,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#updateCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      options)
    summary: Updates the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.provider
          type:
            - string
          description: The issuer provider.
          optional: true
        - id: options.credentials
          type:
            - object
          description: "The credentials to be used for the\rissuer."
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: "The user name/account\rname/account id."
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: "The password/secret/account\rkey."
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: "Details of the organization as\rprovided to the issuer."
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: "Details of the\rorganization administrator."
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: "Determines whether the issuer\ris enabled."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#updateCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateIssuer(vaultBaseUrl, issuerName, options,
      optionalCallback)
    summary: Updates the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateIssuer(vaultBaseUrl,
      issuerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{IssuerBundle} - The deserialized result object.'
        value: '{IssuerBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.provider
          type:
            - string
          description: The issuer provider.
          optional: true
        - id: options.credentials
          type:
            - object
          description: "The credentials to be used for the\rissuer."
          optional: true
        - id: options.credentials.accountId
          type:
            - string
          description: "The user name/account\rname/account id."
          optional: true
        - id: options.credentials.password
          type:
            - string
          description: "The password/secret/account\rkey."
          optional: true
        - id: options.organizationDetails
          type:
            - object
          description: "Details of the organization as\rprovided to the issuer."
          optional: true
        - id: options.organizationDetails.id
          type:
            - string
          description: Id of the organization.
          optional: true
        - id: options.organizationDetails.adminDetails
          type:
            - array
          description: "Details of the\rorganization administrator."
          optional: true
        - id: options.attributes
          type:
            - object
          description: Attributes of the issuer object.
          optional: true
        - id: options.attributes.enabled
          type:
            - boolean
          description: "Determines whether the issuer\ris enabled."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateCertificateIssuer(vaultBaseUrl, issuerName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      options)
    summary: Lists the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#getCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuer(vaultBaseUrl, issuerName, options, optionalCallback)'
    summary: Lists the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuer(vaultBaseUrl,
      issuerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{IssuerBundle} - The deserialized result object.'
        value: '{IssuerBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getCertificateIssuer(vaultBaseUrl, issuerName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#deleteCertificateIssuerWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl, issuerName,
      options)
    summary: Deletes the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
      issuerName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<IssuerBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteCertificateIssuerWithHttpOperationResponse(vaultBaseUrl,
        issuerName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateIssuer'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateIssuer'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateIssuer(vaultBaseUrl, issuerName, options,
      optionalCallback)
    summary: Deletes the specified certificate issuer.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateIssuer(vaultBaseUrl,
      issuerName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{IssuerBundle} - The deserialized result object.'
        value: '{IssuerBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link IssuerBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: issuerName
          type:
            - string
          description: The name of the issuer.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteCertificateIssuer(vaultBaseUrl, issuerName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#createCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#createCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      createCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      options)
    summary: "Creates a new certificate. If this is the first version, the certificate\rresource is created."
    fullName: >-
      azure-keyvault.KeyVaultClient.createCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: "The management policy for the\rcertificate."
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the\rkey backing a certificate."
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: "The key\rtype."
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key\rsize in bytes. For example;  1024 or 2048."
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of\rthe secret backing a certificate."
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: "The\rmedia type (MIME type)."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The subject\rname. Should be a valid X509 distinguished Name."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List of key\rusages."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The\rduration that the ceritifcate is valid in months."
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that will\rbe performed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for\rthe issuer of the X509 component of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'."
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: "The certificate\rattributes."
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)."
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#createCertificate'
    id: 'azure-keyvault.KeyVaultClient#createCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      createCertificate(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: "Creates a new certificate. If this is the first version, the certificate\rresource is created."
    fullName: >-
      azure-keyvault.KeyVaultClient.createCertificate(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateOperation} - The deserialized result object.'
        value: '{CertificateOperation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: "The management policy for the\rcertificate."
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the\rkey backing a certificate."
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: "The key\rtype."
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key\rsize in bytes. For example;  1024 or 2048."
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of\rthe secret backing a certificate."
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: "The\rmedia type (MIME type)."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The subject\rname. Should be a valid X509 distinguished Name."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List of key\rusages."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The\rduration that the ceritifcate is valid in months."
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that will\rbe performed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for\rthe issuer of the X509 component of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'."
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: "The certificate\rattributes."
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)."
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createCertificate(vaultBaseUrl, certificateName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#importCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#importCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      importCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      base64EncodedCertificate, options)
    summary: Imports a certificate into a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.importCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, base64EncodedCertificate, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: base64EncodedCertificate
          type:
            - string
          description: "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.password
          type:
            - string
          description: "If the private key in\rbase64EncodedCertificate is encrypted, the password used for encryption."
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: "The management policy for the\rcertificate."
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the\rkey backing a certificate."
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: "The key\rtype."
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key\rsize in bytes. For example;  1024 or 2048."
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of\rthe secret backing a certificate."
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: "The\rmedia type (MIME type)."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The subject\rname. Should be a valid X509 distinguished Name."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List of key\rusages."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The\rduration that the ceritifcate is valid in months."
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that will\rbe performed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for\rthe issuer of the X509 component of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'."
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: "The certificate\rattributes."
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)."
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function importCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, base64EncodedCertificate, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#importCertificate'
    id: 'azure-keyvault.KeyVaultClient#importCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      importCertificate(vaultBaseUrl, certificateName, base64EncodedCertificate,
      options, optionalCallback)
    summary: Imports a certificate into a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.importCertificate(vaultBaseUrl,
      certificateName, base64EncodedCertificate, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateBundle} - The deserialized result object.'
        value: '{CertificateBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: base64EncodedCertificate
          type:
            - string
          description: "Base64 encoded representation of\rthe certificate object to import. This certificate needs to contain the\rprivate key."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.password
          type:
            - string
          description: "If the private key in\rbase64EncodedCertificate is encrypted, the password used for encryption."
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: "The management policy for the\rcertificate."
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the\rkey backing a certificate."
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: "The key\rtype."
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key\rsize in bytes. For example;  1024 or 2048."
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of\rthe secret backing a certificate."
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: "The\rmedia type (MIME type)."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The subject\rname. Should be a valid X509 distinguished Name."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List of key\rusages."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The\rduration that the ceritifcate is valid in months."
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that will\rbe performed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for\rthe issuer of the X509 component of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'."
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: "The certificate\rattributes."
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)."
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function importCertificate(vaultBaseUrl, certificateName,
        base64EncodedCertificate, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateVersionsWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateVersions'
    id: 'azure-keyvault.KeyVaultClient#getCertificateVersions'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateVersions(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersions(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateListResult} - The deserialized result object.'
        value: '{CertificateListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getCertificateVersions(vaultBaseUrl, certificateName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificatePolicyWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificatePolicyWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: Lists the policy for a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificatePolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificatePolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: "The name of the certificate in a given key\rvault."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatePolicy'
    id: 'azure-keyvault.KeyVaultClient#getCertificatePolicy'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificatePolicy(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Lists the policy for a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatePolicy(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificatePolicy} - The deserialized result object.'
        value: '{CertificatePolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: "The name of the certificate in a given key\rvault."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getCertificatePolicy(vaultBaseUrl, certificateName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#updateCertificatePolicyWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, certificatePolicy, options)
    summary: "Updates the policy for a certificate. Set specified members in the\rcertificate policy. Leave others as null."
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
      certificateName, certificatePolicy, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificatePolicy>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificatePolicy>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: "The name of the certificate in the given\rvault."
        - id: certificatePolicy
          type:
            - object
          description: The policy for the certificate.
        - id: certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the key\rbacking a certificate."
          optional: true
        - id: certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: "Indicates if\rthe private key can be exported."
          optional: true
        - id: certificatePolicy.keyProperties.keyType
          type:
            - string
          description: The key type.
          optional: true
        - id: certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key size in\rbytes. For example;  1024 or 2048."
          optional: true
        - id: certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: "Indicates if the\rsame key pair will be used on certificate renewal."
          optional: true
        - id: certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of the\rsecret backing a certificate."
          optional: true
        - id: certificatePolicy.secretProperties.contentType
          type:
            - string
          description: "The media\rtype (MIME type)."
          optional: true
        - id: certificatePolicy.x509CertificateProperties
          type:
            - object
          description: "Properties of\rthe X509 component of a certificate."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The\rsubject name. Should be a valid X509 distinguished Name."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: "The\renhanced key usage."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: "The\rsubject alternative names."
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List\rof key usages."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The duration\rthat the ceritifcate is valid in months."
          optional: true
        - id: certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that will be\rperformed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for the\rissuer of the X509 component of a certificate."
          optional: true
        - id: certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of the\rreferenced issuer object or reserved names; for example, 'Self' or\r'Unknown'."
          optional: true
        - id: certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: "Type of\rcertificate to be requested from the issuer provider."
          optional: true
        - id: certificatePolicy.attributes
          type:
            - object
          description: The certificate attributes.
          optional: true
        - id: certificatePolicy.attributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: certificatePolicy.attributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: certificatePolicy.attributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateCertificatePolicyWithHttpOperationResponse(vaultBaseUrl,
        certificateName, certificatePolicy, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificatePolicy'
    id: 'azure-keyvault.KeyVaultClient#updateCertificatePolicy'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificatePolicy(vaultBaseUrl, certificateName, certificatePolicy,
      options, optionalCallback)
    summary: "Updates the policy for a certificate. Set specified members in the\rcertificate policy. Leave others as null."
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificatePolicy(vaultBaseUrl,
      certificateName, certificatePolicy, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificatePolicy} - The deserialized result object.'
        value: '{CertificatePolicy} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificatePolicy} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: "The name of the certificate in the given\rvault."
        - id: certificatePolicy
          type:
            - object
          description: The policy for the certificate.
        - id: certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the key\rbacking a certificate."
          optional: true
        - id: certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: "Indicates if\rthe private key can be exported."
          optional: true
        - id: certificatePolicy.keyProperties.keyType
          type:
            - string
          description: The key type.
          optional: true
        - id: certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key size in\rbytes. For example;  1024 or 2048."
          optional: true
        - id: certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: "Indicates if the\rsame key pair will be used on certificate renewal."
          optional: true
        - id: certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of the\rsecret backing a certificate."
          optional: true
        - id: certificatePolicy.secretProperties.contentType
          type:
            - string
          description: "The media\rtype (MIME type)."
          optional: true
        - id: certificatePolicy.x509CertificateProperties
          type:
            - object
          description: "Properties of\rthe X509 component of a certificate."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The\rsubject name. Should be a valid X509 distinguished Name."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: "The\renhanced key usage."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: "The\rsubject alternative names."
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List\rof key usages."
          optional: true
        - id: certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The duration\rthat the ceritifcate is valid in months."
          optional: true
        - id: certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that will be\rperformed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for the\rissuer of the X509 component of a certificate."
          optional: true
        - id: certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of the\rreferenced issuer object or reserved names; for example, 'Self' or\r'Unknown'."
          optional: true
        - id: certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: "Type of\rcertificate to be requested from the issuer provider."
          optional: true
        - id: certificatePolicy.attributes
          type:
            - object
          description: The certificate attributes.
          optional: true
        - id: certificatePolicy.attributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: certificatePolicy.attributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: certificatePolicy.attributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateCertificatePolicy(vaultBaseUrl, certificateName,
        certificatePolicy, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#updateCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'updateCertificateWithHttpOperationResponse(certificateIdentifier, options)'
    summary: Updates the specified attributes associated with the given certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateWithHttpOperationResponse(certificateIdentifier,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: certificateIdentifier
          type:
            - string
          description: "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: "The management policy for the\rcertificate."
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the\rkey backing a certificate."
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: "The key\rtype."
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key\rsize in bytes. For example;  1024 or 2048."
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of\rthe secret backing a certificate."
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: "The\rmedia type (MIME type)."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The subject\rname. Should be a valid X509 distinguished Name."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List of key\rusages."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The\rduration that the ceritifcate is valid in months."
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that will\rbe performed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for\rthe issuer of the X509 component of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of\rthe referenced issuer object or reserved names; for example, 'Self' or\r'Unknown'."
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: Type of certificate to be requested from the issuer provider.
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: "The certificate\rattributes."
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)."
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateCertificateWithHttpOperationResponse(certificateIdentifier,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificate'
    id: 'azure-keyvault.KeyVaultClient#updateCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: 'updateCertificate(certificateIdentifier, options, callback)'
    summary: Updates the attributes associated with the specified certificate
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificate(certificateIdentifier,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: certificateIdentifier
          type:
            - string
          description: "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificatePolicy
          type:
            - object
          description: "The management policy for the\rcertificate"
          optional: true
        - id: options.certificatePolicy.keyProperties
          type:
            - object
          description: "Properties of the\rkey backing a certificate."
          optional: true
        - id: options.certificatePolicy.keyProperties.exportable
          type:
            - boolean
          description: Indicates if the private key can be exported.
          optional: true
        - id: options.certificatePolicy.keyProperties.keyType
          type:
            - string
          description: "The key\rtype."
          optional: true
        - id: options.certificatePolicy.keyProperties.keySize
          type:
            - number
          description: "The key\rsize in bytes. e.g. 2048."
          optional: true
        - id: options.certificatePolicy.keyProperties.reuseKey
          type:
            - boolean
          description: Indicates if the same key pair will be used on certificate renewal.
          optional: true
        - id: options.certificatePolicy.secretProperties
          type:
            - object
          description: "Properties of\rthe secret backing a certificate."
          optional: true
        - id: options.certificatePolicy.secretProperties.contentType
          type:
            - string
          description: The media type (MIME type).
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties
          type:
            - object
          description: Properties of the X509 component of a certificate.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.subject
          type:
            - string
          description: "The subject\rname. Should be a valid X509 Distinguished Name."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.ekus
          type:
            - array
          description: The enhanced key usage.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames
          type:
            - object
          description: The subject alternative names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.emails
          type:
            - array
          description: Email addresses.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.dnsNames
          type:
            - array
          description: Domain names.
          optional: true
        - id: >-
            options.certificatePolicy.x509CertificateProperties.subjectAlternativeNames.upns
          type:
            - array
          description: User principal names.
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.keyUsage
          type:
            - array
          description: "List of key\rusages."
          optional: true
        - id: options.certificatePolicy.x509CertificateProperties.validityInMonths
          type:
            - number
          description: "The\rduration that the ceritifcate is valid in months."
          optional: true
        - id: options.certificatePolicy.lifetimeActions
          type:
            - array
          description: "Actions that\rwill be performed by Key Vault over the lifetime of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters
          type:
            - object
          description: "Parameters for\rthe issuer of the X509 component of a certificate."
          optional: true
        - id: options.certificatePolicy.issuerParameters.name
          type:
            - string
          description: "Name of\rthe referenced issuer object or reserved names e.g. 'Self', 'Unknown'."
          optional: true
        - id: options.certificatePolicy.issuerParameters.certificateType
          type:
            - string
          description: "Type of\rcertificate to be requested from the issuer provider."
          optional: true
        - id: options.certificatePolicy.attributes
          type:
            - object
          description: "The certificate\rattributes."
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)"
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled"
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC"
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application-specific metadata in the form of\rkey-value pairs"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See <xref:azure-keyvault.CertificateBundle> for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function updateCertificate(certificateIdentifier, options, callback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateWithHttpOperationResponse(certificateIdentifier, options)'
    summary: Gets information about a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateWithHttpOperationResponse(certificateIdentifier,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: certificateIdentifier
          type:
            - string
          description: "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateWithHttpOperationResponse(certificateIdentifier,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificate'
    id: 'azure-keyvault.KeyVaultClient#getCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificate(certificateIdentifier, options, callback)'
    summary: Gets information about a specified certificate..
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificate(certificateIdentifier,
      options, callback)
    type: Function
    syntax:
      parameters:
        - id: certificateIdentifier
          type:
            - string
          description: "The certificate identifier. It may or may not contain a version path. \rIf a version is not provided, the latest certificate version is used."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: callback
          type:
            - function
          description: ''
      return:
        type:
          - function
        description: "callback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object.\r                     See <xref:azure-keyvault.CertificateBundle> for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
      content: 'function getCertificate(certificateIdentifier, options, callback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#updateCertificateOperationWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#updateCertificateOperationWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, cancellationRequested, options)
    summary: Updates a certificate operation.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, cancellationRequested, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: cancellationRequested
          type:
            - boolean
          description: "Indicates if cancellation was\rrequested on the certificate operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        updateCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
        certificateName, cancellationRequested, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#updateCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateCertificateOperation(vaultBaseUrl, certificateName,
      cancellationRequested, options, optionalCallback)
    summary: Updates a certificate operation.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateCertificateOperation(vaultBaseUrl,
      certificateName, cancellationRequested, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateOperation} - The deserialized result object.'
        value: '{CertificateOperation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: cancellationRequested
          type:
            - boolean
          description: "Indicates if cancellation was\rrequested on the certificate operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateCertificateOperation(vaultBaseUrl, certificateName,
        cancellationRequested, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateOperationWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateOperationWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: Gets the operation associated with a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#getCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getCertificateOperation(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Gets the operation associated with a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateOperation(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateOperation} - The deserialized result object.'
        value: '{CertificateOperation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getCertificateOperation(vaultBaseUrl, certificateName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#deleteCertificateOperationWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: Deletes the operation for a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateOperation>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        deleteCertificateOperationWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteCertificateOperation'
    id: 'azure-keyvault.KeyVaultClient#deleteCertificateOperation'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteCertificateOperation(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: Deletes the operation for a specified certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteCertificateOperation(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateOperation} - The deserialized result object.'
        value: '{CertificateOperation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteCertificateOperation(vaultBaseUrl, certificateName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#mergeCertificateWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#mergeCertificateWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      mergeCertificateWithHttpOperationResponse(vaultBaseUrl, certificateName,
      x509Certificates, options)
    summary: "Merges a certificate or a certificate chain with a key pair existing on the\rserver."
    fullName: >-
      azure-keyvault.KeyVaultClient.mergeCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, x509Certificates, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: x509Certificates
          type:
            - array
          description: "The certificate or the certificate chain to\rmerge."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)."
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function mergeCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, x509Certificates, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#mergeCertificate'
    id: 'azure-keyvault.KeyVaultClient#mergeCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      mergeCertificate(vaultBaseUrl, certificateName, x509Certificates, options,
      optionalCallback)
    summary: "Merges a certificate or a certificate chain with a key pair existing on the\rserver."
    fullName: >-
      azure-keyvault.KeyVaultClient.mergeCertificate(vaultBaseUrl,
      certificateName, x509Certificates, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateBundle} - The deserialized result object.'
        value: '{CertificateBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate.
        - id: x509Certificates
          type:
            - array
          description: "The certificate or the certificate chain to\rmerge."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.certificateAttributes
          type:
            - object
          description: "The attributes of the\rcertificate (optional)."
          optional: true
        - id: options.certificateAttributes.enabled
          type:
            - boolean
          description: "Determines whether\rthe object is enabled."
          optional: true
        - id: options.certificateAttributes.notBefore
          type:
            - date
          description: "Not before date in\rUTC."
          optional: true
        - id: options.certificateAttributes.expires
          type:
            - date
          description: Expiry date in UTC.
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function mergeCertificate(vaultBaseUrl, certificateName,
        x509Certificates, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersionsNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getKeyVersionsNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeyVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#getKeyVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeyVersionsNext(nextPageLink, options, optionalCallback)'
    summary: "Retrieves a list of individual key versions with the same key name. The full\rkey identifier, attributes, and tags are provided in the response.\rAuthorization: Requires the keys/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeyVersionsNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyListResult} - The deserialized result object.'
        value: '{KeyListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getKeyVersionsNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeysNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getKeysNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeysNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List keys in the specified vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeysNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<KeyListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getKeysNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getKeysNext'
    id: 'azure-keyvault.KeyVaultClient#getKeysNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getKeysNext(nextPageLink, options, optionalCallback)'
    summary: List keys in the specified vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getKeysNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyListResult} - The deserialized result object.'
        value: '{KeyListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getKeysNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecretsNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSecretsNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List secrets in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getSecretsNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecretsNext'
    id: 'azure-keyvault.KeyVaultClient#getSecretsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretsNext(nextPageLink, options, optionalCallback)'
    summary: List secrets in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretsNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretListResult} - The deserialized result object.'
        value: '{SecretListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getSecretsNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getSecretVersionsNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretVersionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List the versions of the specified secret.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSecretVersionsNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSecretVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#getSecretVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSecretVersionsNext(nextPageLink, options, optionalCallback)'
    summary: List the versions of the specified secret.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSecretVersionsNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretListResult} - The deserialized result object.'
        value: '{SecretListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getSecretVersionsNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatesNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getCertificatesNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificatesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatesNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getCertificatesNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificatesNext'
    id: 'azure-keyvault.KeyVaultClient#getCertificatesNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificatesNext(nextPageLink, options, optionalCallback)'
    summary: List certificates in a specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificatesNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateListResult} - The deserialized result object.'
        value: '{CertificateListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getCertificatesNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateIssuersNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuersNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateIssuerListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<CertificateIssuerListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getCertificateIssuersNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateIssuersNext'
    id: 'azure-keyvault.KeyVaultClient#getCertificateIssuersNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateIssuersNext(nextPageLink, options, optionalCallback)'
    summary: List certificate issuers for a specified key vault.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateIssuersNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateIssuerListResult} - The deserialized result object.'
        value: '{CertificateIssuerListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateIssuerListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getCertificateIssuersNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getCertificateVersionsNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateVersionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getCertificateVersionsNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getCertificateVersionsNext'
    id: 'azure-keyvault.KeyVaultClient#getCertificateVersionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getCertificateVersionsNext(nextPageLink, options, optionalCallback)'
    summary: List the versions of a certificate.
    fullName: >-
      azure-keyvault.KeyVaultClient.getCertificateVersionsNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateListResult} - The deserialized result object.'
        value: '{CertificateListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getCertificateVersionsNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getPendingCertificateSigningRequestWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getPendingCertificateSigningRequestWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getPendingCertificateSigningRequestWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: Gets the certificate operation response.
    fullName: >-
      azure-keyvault.KeyVaultClient.getPendingCertificateSigningRequestWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CertificateListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: certificateName
          type:
            - string
          description: The name of the certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: Headers that will be added to the request
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getPendingCertificateSigningRequestWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getPendingCertificateSigningRequest'
    id: 'azure-keyvault.KeyVaultClient#getPendingCertificateSigningRequest'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getPendingCertificateSigningRequest(vaultBaseUrl, certificateName,
      options, optionalCallback)
    summary: Gets the certificate operation response.
    fullName: >-
      azure-keyvault.KeyVaultClient.getPendingCertificateSigningRequest(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateOperation} - The deserialized result object.'
        value: '{CertificateOperation} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateOperation} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, e.g.\rhttps://myvault.vault.azure.net"
        - id: certificateName
          type:
            - string
          description: The name of the certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getPendingCertificateSigningRequest(vaultBaseUrl,
        certificateName, options, optionalCallback)
    langs:
      - js
  - id: 'azure-keyvault.KeyVaultClient.#ctor'
    uid: 'azure-keyvault.KeyVaultClient.#ctor'
    parent: azure-keyvault.KeyVaultClient
    name: 'KeyVaultClient(credentials, options)'
    fullName: 'azure-keyvault.KeyVaultClient.KeyVaultClient(credentials, options)'
    summary: Create a KeyVaultClient.
    type: Constructor
    syntax:
      parameters:
        - id: credentials
          type:
            - azure-keyvault.credentials
          description: Credentials needed for the client to connect to Azure.
        - id: options
          type:
            - object
          description: The parameter options
          optional: true
        - id: options.filters
          type:
            - Array
          description: Filters to be added to the request pipeline
          optional: true
        - id: options.requestOptions
          type:
            - object
          description: "Options for the underlying request object\r[Options doc](https://github.com/request/request#requestoptions-callback)"
          optional: true
        - id: options.noRetryPolicy
          type:
            - boolean
          description: 'If set to true, turn off default retry policy'
          optional: true
        - id: options.acceptLanguage
          type:
            - string
          description: Gets or sets the preferred language for the response.
          optional: true
        - id: options.longRunningOperationRetryTimeout
          type:
            - number
          description: >-
            Gets or sets the retry timeout in seconds for Long Running
            Operations. Default value is 30.
          optional: true
        - id: options.generateClientRequestId
          type:
            - boolean
          description: >-
            When set to true a unique x-ms-client-request-id value is generated
            and included in each request. Default is true.
          optional: true
      content: 'new KeyVaultClient(credentials, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedKeysWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getDeletedKeysWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedKeysWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: "List deleted keys in the specified vault. Authorization: Requires the\rkeys/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedKeysWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedKeyListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeletedKeyListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getDeletedKeysWithHttpOperationResponse(vaultBaseUrl, options)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedKeys'
    id: 'azure-keyvault.KeyVaultClient#getDeletedKeys'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedKeys(vaultBaseUrl, options, optionalCallback)'
    summary: "List deleted keys in the specified vault. Authorization: Requires the\rkeys/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedKeys(vaultBaseUrl, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedKeyListResult} - The deserialized result object.'
        value: '{DeletedKeyListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedKeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedKeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getDeletedKeys(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getDeletedKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedKeyWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: "Retrieves the deleted key information plus its attributes. Authorization:\rRequires the keys/get permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedKeyBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DeletedKeyBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedKey'
    id: 'azure-keyvault.KeyVaultClient#getDeletedKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedKey(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: "Retrieves the deleted key information plus its attributes. Authorization:\rRequires the keys/get permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedKey(vaultBaseUrl, keyName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedKeyBundle} - The deserialized result object.'
        value: '{DeletedKeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedKeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedKeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getDeletedKey(vaultBaseUrl, keyName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#purgeDeletedKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#purgeDeletedKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'purgeDeletedKeyWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: "Permanently deletes the specified key. aka purges the key. Authorization:\rRequires the keys/purge permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.purgeDeletedKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function purgeDeletedKeyWithHttpOperationResponse(vaultBaseUrl, keyName,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#purgeDeletedKey'
    id: 'azure-keyvault.KeyVaultClient#purgeDeletedKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'purgeDeletedKey(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: "Permanently deletes the specified key. aka purges the key. Authorization:\rRequires the keys/purge permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.purgeDeletedKey(vaultBaseUrl, keyName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the key
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function purgeDeletedKey(vaultBaseUrl, keyName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#recoverDeletedKeyWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#recoverDeletedKeyWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'recoverDeletedKeyWithHttpOperationResponse(vaultBaseUrl, keyName, options)'
    summary: "Recovers the deleted key back to its current version under /keys.\rAuthorization: Requires the keys/recover permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.recoverDeletedKeyWithHttpOperationResponse(vaultBaseUrl,
      keyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
        value: '{HttpOperationResponse<KeyBundle>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the deleted key
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function recoverDeletedKeyWithHttpOperationResponse(vaultBaseUrl,
        keyName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#recoverDeletedKey'
    id: 'azure-keyvault.KeyVaultClient#recoverDeletedKey'
    parent: azure-keyvault.KeyVaultClient
    name: 'recoverDeletedKey(vaultBaseUrl, keyName, options, optionalCallback)'
    summary: "Recovers the deleted key back to its current version under /keys.\rAuthorization: Requires the keys/recover permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.recoverDeletedKey(vaultBaseUrl, keyName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{KeyBundle} - The deserialized result object.'
        value: '{KeyBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link KeyBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: keyName
          type:
            - string
          description: The name of the deleted key
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function recoverDeletedKey(vaultBaseUrl, keyName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedSecretsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getDeletedSecretsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedSecretsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: "List deleted secrets in the specified vault. Authorization: requires the\rsecrets/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretsWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedSecretListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeletedSecretListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedSecretsWithHttpOperationResponse(vaultBaseUrl,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedSecrets'
    id: 'azure-keyvault.KeyVaultClient#getDeletedSecrets'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedSecrets(vaultBaseUrl, options, optionalCallback)'
    summary: "List deleted secrets in the specified vault. Authorization: requires the\rsecrets/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedSecrets(vaultBaseUrl, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedSecretListResult} - The deserialized result object.'
        value: '{DeletedSecretListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedSecretListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedSecretListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getDeletedSecrets(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getDeletedSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getDeletedSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
      options)
    summary: "Retrieves the deleted secret information plus its attributes. Authorization:\rrequires the secrets/get permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedSecretBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<DeletedSecretBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedSecretWithHttpOperationResponse(vaultBaseUrl,
        secretName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedSecret'
    id: 'azure-keyvault.KeyVaultClient#getDeletedSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedSecret(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: "Retrieves the deleted secret information plus its attributes. Authorization:\rrequires the secrets/get permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedSecret(vaultBaseUrl, secretName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedSecretBundle} - The deserialized result object.'
        value: '{DeletedSecretBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedSecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedSecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeletedSecret(vaultBaseUrl, secretName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#purgeDeletedSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#purgeDeletedSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      purgeDeletedSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
      options)
    summary: "Permanently deletes the specified secret. aka purges the secret.\rAuthorization: requires the secrets/purge permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.purgeDeletedSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function purgeDeletedSecretWithHttpOperationResponse(vaultBaseUrl,
        secretName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#purgeDeletedSecret'
    id: 'azure-keyvault.KeyVaultClient#purgeDeletedSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'purgeDeletedSecret(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: "Permanently deletes the specified secret. aka purges the secret.\rAuthorization: requires the secrets/purge permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.purgeDeletedSecret(vaultBaseUrl, secretName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function purgeDeletedSecret(vaultBaseUrl, secretName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#recoverDeletedSecretWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#recoverDeletedSecretWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      recoverDeletedSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
      options)
    summary: "Recovers the deleted secret back to its current version under /secrets.\rAuthorization: requires the secrets/recover permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.recoverDeletedSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the deleted secret
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function recoverDeletedSecretWithHttpOperationResponse(vaultBaseUrl,
        secretName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#recoverDeletedSecret'
    id: 'azure-keyvault.KeyVaultClient#recoverDeletedSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'recoverDeletedSecret(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: "Recovers the deleted secret back to its current version under /secrets.\rAuthorization: requires the secrets/recover permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.recoverDeletedSecret(vaultBaseUrl,
      secretName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretBundle} - The deserialized result object.'
        value: '{SecretBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the deleted secret
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function recoverDeletedSecret(vaultBaseUrl, secretName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#backupSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#backupSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'backupSecretWithHttpOperationResponse(vaultBaseUrl, secretName, options)'
    summary: "Requests that a backup of the specified secret be downloaded to the client.\rAuthorization: requires the secrets/backup permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.backupSecretWithHttpOperationResponse(vaultBaseUrl,
      secretName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<BackupSecretResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<BackupSecretResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function backupSecretWithHttpOperationResponse(vaultBaseUrl, secretName,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#backupSecret'
    id: 'azure-keyvault.KeyVaultClient#backupSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'backupSecret(vaultBaseUrl, secretName, options, optionalCallback)'
    summary: "Requests that a backup of the specified secret be downloaded to the client.\rAuthorization: requires the secrets/backup permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.backupSecret(vaultBaseUrl, secretName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{BackupSecretResult} - The deserialized result object.'
        value: '{BackupSecretResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link BackupSecretResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link BackupSecretResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretName
          type:
            - string
          description: The name of the secret.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function backupSecret(vaultBaseUrl, secretName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#restoreSecretWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#restoreSecretWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      restoreSecretWithHttpOperationResponse(vaultBaseUrl, secretBundleBackup,
      options)
    summary: "Restores a backed up secret to a vault. Authorization: requires the\rsecrets/restore permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.restoreSecretWithHttpOperationResponse(vaultBaseUrl,
      secretBundleBackup, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SecretBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretBundleBackup
          type:
            - azure-keyvault.buffer
          description: "The backup blob associated with a secret\rbundle."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function restoreSecretWithHttpOperationResponse(vaultBaseUrl,
        secretBundleBackup, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#restoreSecret'
    id: 'azure-keyvault.KeyVaultClient#restoreSecret'
    parent: azure-keyvault.KeyVaultClient
    name: 'restoreSecret(vaultBaseUrl, secretBundleBackup, options, optionalCallback)'
    summary: "Restores a backed up secret to a vault. Authorization: requires the\rsecrets/restore permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.restoreSecret(vaultBaseUrl,
      secretBundleBackup, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SecretBundle} - The deserialized result object.'
        value: '{SecretBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SecretBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: secretBundleBackup
          type:
            - azure-keyvault.buffer
          description: "The backup blob associated with a secret\rbundle."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function restoreSecret(vaultBaseUrl, secretBundleBackup, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getDeletedCertificatesWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getDeletedCertificatesWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedCertificatesWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: "Lists the deleted certificates in the specified vault, currently\ravailable for recovery.\r\rThe GetDeletedCertificates operation retrieves the certificates in the\rcurrent vault which are in a deleted state and ready for recovery or\rpurging."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificatesWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedCertificateListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<DeletedCertificateListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedCertificatesWithHttpOperationResponse(vaultBaseUrl,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedCertificates'
    id: 'azure-keyvault.KeyVaultClient#getDeletedCertificates'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedCertificates(vaultBaseUrl, options, optionalCallback)'
    summary: "Lists the deleted certificates in the specified vault, currently\ravailable for recovery.\r\rThe GetDeletedCertificates operation retrieves the certificates in the\rcurrent vault which are in a deleted state and ready for recovery or\rpurging."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificates(vaultBaseUrl,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedCertificateListResult} - The deserialized result object.'
        value: '{DeletedCertificateListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedCertificateListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedCertificateListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getDeletedCertificates(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getDeletedCertificateWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getDeletedCertificateWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: "Retrieves information about the specified deleted certificate.\r\rThe GetDeletedCertificate operation retrieves the deleted certificate\rinformation plus its attributes, such as retention interval, scheduled\rpermanent deletion and the current deletion recovery level."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedCertificateBundle>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeletedCertificateBundle>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedCertificate'
    id: 'azure-keyvault.KeyVaultClient#getDeletedCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getDeletedCertificate(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: "Retrieves information about the specified deleted certificate.\r\rThe GetDeletedCertificate operation retrieves the deleted certificate\rinformation plus its attributes, such as retention interval, scheduled\rpermanent deletion and the current deletion recovery level."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificate(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedCertificateBundle} - The deserialized result object.'
        value: '{DeletedCertificateBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedCertificateBundle} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedCertificateBundle} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeletedCertificate(vaultBaseUrl, certificateName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#purgeDeletedCertificateWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#purgeDeletedCertificateWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      purgeDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: "Permanently deletes the specified deleted certificate.\r\rThe PurgeDeletedCertificate operation performs an irreversible deletion of\rthe specified certificate, without possibility for recovery. The operation\ris not available if the recovery level does not specify 'Purgeable'.\rRequires the explicit granting of the 'purge' permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.purgeDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function purgeDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#purgeDeletedCertificate'
    id: 'azure-keyvault.KeyVaultClient#purgeDeletedCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      purgeDeletedCertificate(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: "Permanently deletes the specified deleted certificate.\r\rThe PurgeDeletedCertificate operation performs an irreversible deletion of\rthe specified certificate, without possibility for recovery. The operation\ris not available if the recovery level does not specify 'Purgeable'.\rRequires the explicit granting of the 'purge' permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.purgeDeletedCertificate(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function purgeDeletedCertificate(vaultBaseUrl, certificateName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#recoverDeletedCertificateWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#recoverDeletedCertificateWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      recoverDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    summary: "Recovers the deleted certificate back to its current version under\r/certificates.\r\rThe RecoverDeletedCertificate operation performs the reversal of the Delete\roperation. The operation is applicable in vaults enabled for soft-delete,\rand must be issued during the retention interval (available in the deleted\rcertificate's attributes)."
    fullName: >-
      azure-keyvault.KeyVaultClient.recoverDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
      certificateName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CertificateBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the deleted certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        recoverDeletedCertificateWithHttpOperationResponse(vaultBaseUrl,
        certificateName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#recoverDeletedCertificate'
    id: 'azure-keyvault.KeyVaultClient#recoverDeletedCertificate'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      recoverDeletedCertificate(vaultBaseUrl, certificateName, options,
      optionalCallback)
    summary: "Recovers the deleted certificate back to its current version under\r/certificates.\r\rThe RecoverDeletedCertificate operation performs the reversal of the Delete\roperation. The operation is applicable in vaults enabled for soft-delete,\rand must be issued during the retention interval (available in the deleted\rcertificate's attributes)."
    fullName: >-
      azure-keyvault.KeyVaultClient.recoverDeletedCertificate(vaultBaseUrl,
      certificateName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CertificateBundle} - The deserialized result object.'
        value: '{CertificateBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CertificateBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: certificateName
          type:
            - string
          description: The name of the deleted certificate
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function recoverDeletedCertificate(vaultBaseUrl, certificateName,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getStorageAccountsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getStorageAccountsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getStorageAccountsWithHttpOperationResponse(vaultBaseUrl, options)'
    summary: List storage accounts managed by specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getStorageAccountsWithHttpOperationResponse(vaultBaseUrl,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StorageListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StorageListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getStorageAccountsWithHttpOperationResponse(vaultBaseUrl,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getStorageAccounts'
    id: 'azure-keyvault.KeyVaultClient#getStorageAccounts'
    parent: azure-keyvault.KeyVaultClient
    name: 'getStorageAccounts(vaultBaseUrl, options, optionalCallback)'
    summary: List storage accounts managed by specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getStorageAccounts(vaultBaseUrl, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StorageListResult} - The deserialized result object.'
        value: '{StorageListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getStorageAccounts(vaultBaseUrl, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#deleteStorageAccountWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#deleteStorageAccountWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    summary: Deletes a storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteStorageAccountWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteStorageAccount'
    id: 'azure-keyvault.KeyVaultClient#deleteStorageAccount'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteStorageAccount(vaultBaseUrl, storageAccountName, options,
      optionalCallback)
    summary: Deletes a storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteStorageAccount(vaultBaseUrl,
      storageAccountName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StorageBundle} - The deserialized result object.'
        value: '{StorageBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteStorageAccount(vaultBaseUrl, storageAccountName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getStorageAccountWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getStorageAccountWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    summary: Gets information about a specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getStorageAccountWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getStorageAccount'
    id: 'azure-keyvault.KeyVaultClient#getStorageAccount'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getStorageAccount(vaultBaseUrl, storageAccountName, options,
      optionalCallback)
    summary: Gets information about a specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getStorageAccount(vaultBaseUrl,
      storageAccountName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StorageBundle} - The deserialized result object.'
        value: '{StorageBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getStorageAccount(vaultBaseUrl, storageAccountName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setStorageAccountWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#setStorageAccountWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, resourceId, activeKeyName, autoRegenerateKey, options)
    summary: Creates or updates a new storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.setStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, resourceId, activeKeyName, autoRegenerateKey, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: resourceId
          type:
            - string
          description: Storage account resource id.
        - id: activeKeyName
          type:
            - string
          description: Current active storage account key name.
        - id: autoRegenerateKey
          type:
            - boolean
          description: "whether keyvault should manage the\rstorage account for the user."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.regenerationPeriod
          type:
            - string
          description: "The key regeneration time\rduration specified in ISO-8601 format."
          optional: true
        - id: options.storageAccountAttributes
          type:
            - object
          description: "The attributes of the\rstorage account."
          optional: true
        - id: options.storageAccountAttributes.enabled
          type:
            - boolean
          description: "the enabled\rstate of the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setStorageAccountWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, resourceId, activeKeyName, autoRegenerateKey,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setStorageAccount'
    id: 'azure-keyvault.KeyVaultClient#setStorageAccount'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setStorageAccount(vaultBaseUrl, storageAccountName, resourceId,
      activeKeyName, autoRegenerateKey, options, optionalCallback)
    summary: Creates or updates a new storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.setStorageAccount(vaultBaseUrl,
      storageAccountName, resourceId, activeKeyName, autoRegenerateKey, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StorageBundle} - The deserialized result object.'
        value: '{StorageBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: resourceId
          type:
            - string
          description: Storage account resource id.
        - id: activeKeyName
          type:
            - string
          description: Current active storage account key name.
        - id: autoRegenerateKey
          type:
            - boolean
          description: "whether keyvault should manage the\rstorage account for the user."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.regenerationPeriod
          type:
            - string
          description: "The key regeneration time\rduration specified in ISO-8601 format."
          optional: true
        - id: options.storageAccountAttributes
          type:
            - object
          description: "The attributes of the\rstorage account."
          optional: true
        - id: options.storageAccountAttributes.enabled
          type:
            - boolean
          description: "the enabled\rstate of the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function setStorageAccount(vaultBaseUrl, storageAccountName, resourceId,
        activeKeyName, autoRegenerateKey, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#updateStorageAccountWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#updateStorageAccountWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    summary: >-
      Updates the specified attributes associated with the given storage
      account.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateStorageAccountWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.activeKeyName
          type:
            - string
          description: "The current active storage account\rkey name."
          optional: true
        - id: options.autoRegenerateKey
          type:
            - boolean
          description: "whether keyvault should manage\rthe storage account for the user."
          optional: true
        - id: options.regenerationPeriod
          type:
            - string
          description: "The key regeneration time\rduration specified in ISO-8601 format."
          optional: true
        - id: options.storageAccountAttributes
          type:
            - object
          description: "The attributes of the\rstorage account."
          optional: true
        - id: options.storageAccountAttributes.enabled
          type:
            - boolean
          description: "the enabled\rstate of the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateStorageAccountWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateStorageAccount'
    id: 'azure-keyvault.KeyVaultClient#updateStorageAccount'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateStorageAccount(vaultBaseUrl, storageAccountName, options,
      optionalCallback)
    summary: >-
      Updates the specified attributes associated with the given storage
      account.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateStorageAccount(vaultBaseUrl,
      storageAccountName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StorageBundle} - The deserialized result object.'
        value: '{StorageBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.activeKeyName
          type:
            - string
          description: "The current active storage account\rkey name."
          optional: true
        - id: options.autoRegenerateKey
          type:
            - boolean
          description: "whether keyvault should manage\rthe storage account for the user."
          optional: true
        - id: options.regenerationPeriod
          type:
            - string
          description: "The key regeneration time\rduration specified in ISO-8601 format."
          optional: true
        - id: options.storageAccountAttributes
          type:
            - object
          description: "The attributes of the\rstorage account."
          optional: true
        - id: options.storageAccountAttributes.enabled
          type:
            - boolean
          description: "the enabled\rstate of the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateStorageAccount(vaultBaseUrl, storageAccountName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#regenerateStorageAccountKeyWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#regenerateStorageAccountKeyWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: >-
      regenerateStorageAccountKeyWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, keyName, options)
    summary: Regenerates the specified key value for the given storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.regenerateStorageAccountKeyWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, keyName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StorageBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: keyName
          type:
            - string
          description: The storage account key name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        regenerateStorageAccountKeyWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, keyName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#regenerateStorageAccountKey'
    id: 'azure-keyvault.KeyVaultClient#regenerateStorageAccountKey'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      regenerateStorageAccountKey(vaultBaseUrl, storageAccountName, keyName,
      options, optionalCallback)
    summary: Regenerates the specified key value for the given storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.regenerateStorageAccountKey(vaultBaseUrl,
      storageAccountName, keyName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StorageBundle} - The deserialized result object.'
        value: '{StorageBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: keyName
          type:
            - string
          description: The storage account key name.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function regenerateStorageAccountKey(vaultBaseUrl, storageAccountName,
        keyName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSasDefinitionsWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSasDefinitionsWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSasDefinitionsWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    summary: List storage SAS definitions for the given storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionsWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SasDefinitionListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<SasDefinitionListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSasDefinitionsWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSasDefinitions'
    id: 'azure-keyvault.KeyVaultClient#getSasDefinitions'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSasDefinitions(vaultBaseUrl, storageAccountName, options,
      optionalCallback)
    summary: List storage SAS definitions for the given storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSasDefinitions(vaultBaseUrl,
      storageAccountName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SasDefinitionListResult} - The deserialized result object.'
        value: '{SasDefinitionListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.maxresults
          type:
            - number
          description: "Maximum number of results to return in\ra page. If not specified the service will return up to 25 results."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getSasDefinitions(vaultBaseUrl, storageAccountName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteSasDefinitionWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#deleteSasDefinitionWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options)
    summary: Deletes a SAS definition from a specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, sasDefinitionName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#deleteSasDefinition'
    id: 'azure-keyvault.KeyVaultClient#deleteSasDefinition'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      deleteSasDefinition(vaultBaseUrl, storageAccountName, sasDefinitionName,
      options, optionalCallback)
    summary: Deletes a SAS definition from a specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.deleteSasDefinition(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SasDefinitionBundle} - The deserialized result object.'
        value: '{SasDefinitionBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteSasDefinition(vaultBaseUrl, storageAccountName,
        sasDefinitionName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSasDefinitionWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getSasDefinitionWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options)
    summary: Gets information about a SAS definition for the specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, sasDefinitionName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSasDefinition'
    id: 'azure-keyvault.KeyVaultClient#getSasDefinition'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      getSasDefinition(vaultBaseUrl, storageAccountName, sasDefinitionName,
      options, optionalCallback)
    summary: Gets information about a SAS definition for the specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSasDefinition(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SasDefinitionBundle} - The deserialized result object.'
        value: '{SasDefinitionBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getSasDefinition(vaultBaseUrl, storageAccountName,
        sasDefinitionName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setSasDefinitionWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#setSasDefinitionWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, parameters, options)
    summary: Creates or updates a new SAS definition for the specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.setSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: parameters
          type:
            - object
          description: "Sas definition creation metadata in the form of\rkey-value pairs."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.sasDefinitionAttributes
          type:
            - object
          description: "The attributes of the SAS\rdefinition."
          optional: true
        - id: options.sasDefinitionAttributes.enabled
          type:
            - boolean
          description: "the enabled state\rof the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, sasDefinitionName, parameters, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#setSasDefinition'
    id: 'azure-keyvault.KeyVaultClient#setSasDefinition'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      setSasDefinition(vaultBaseUrl, storageAccountName, sasDefinitionName,
      parameters, options, optionalCallback)
    summary: Creates or updates a new SAS definition for the specified storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.setSasDefinition(vaultBaseUrl,
      storageAccountName, sasDefinitionName, parameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SasDefinitionBundle} - The deserialized result object.'
        value: '{SasDefinitionBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: parameters
          type:
            - object
          description: "Sas definition creation metadata in the form of\rkey-value pairs."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.sasDefinitionAttributes
          type:
            - object
          description: "The attributes of the SAS\rdefinition."
          optional: true
        - id: options.sasDefinitionAttributes.enabled
          type:
            - boolean
          description: "the enabled state\rof the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function setSasDefinition(vaultBaseUrl, storageAccountName,
        sasDefinitionName, parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateSasDefinitionWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#updateSasDefinitionWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options)
    summary: Updates the specified attributes associated with the given SAS definition.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<SasDefinitionBundle>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.parameters
          type:
            - object
          description: "Sas definition update metadata in the\rform of key-value pairs."
          optional: true
        - id: options.sasDefinitionAttributes
          type:
            - object
          description: "The attributes of the SAS\rdefinition."
          optional: true
        - id: options.sasDefinitionAttributes.enabled
          type:
            - boolean
          description: "the enabled state\rof the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateSasDefinitionWithHttpOperationResponse(vaultBaseUrl,
        storageAccountName, sasDefinitionName, options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#updateSasDefinition'
    id: 'azure-keyvault.KeyVaultClient#updateSasDefinition'
    parent: azure-keyvault.KeyVaultClient
    name: >-
      updateSasDefinition(vaultBaseUrl, storageAccountName, sasDefinitionName,
      options, optionalCallback)
    summary: Updates the specified attributes associated with the given SAS definition.
    fullName: >-
      azure-keyvault.KeyVaultClient.updateSasDefinition(vaultBaseUrl,
      storageAccountName, sasDefinitionName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SasDefinitionBundle} - The deserialized result object.'
        value: '{SasDefinitionBundle} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionBundle} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: vaultBaseUrl
          type:
            - string
          description: "The vault name, for example\rhttps://myvault.vault.azure.net."
        - id: storageAccountName
          type:
            - string
          description: The name of the storage account.
        - id: sasDefinitionName
          type:
            - string
          description: The name of the SAS definition.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.parameters
          type:
            - object
          description: "Sas definition update metadata in the\rform of key-value pairs."
          optional: true
        - id: options.sasDefinitionAttributes
          type:
            - object
          description: "The attributes of the SAS\rdefinition."
          optional: true
        - id: options.sasDefinitionAttributes.enabled
          type:
            - boolean
          description: "the enabled state\rof the object."
          optional: true
        - id: options.tags
          type:
            - object
          description: "Application specific metadata in the form of\rkey-value pairs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateSasDefinition(vaultBaseUrl, storageAccountName,
        sasDefinitionName, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedKeysNextWithHttpOperationResponse'
    id: 'azure-keyvault.KeyVaultClient#getDeletedKeysNextWithHttpOperationResponse'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedKeysNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "List deleted keys in the specified vault. Authorization: Requires the\rkeys/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedKeysNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedKeyListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeletedKeyListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedKeysNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedKeysNext'
    id: 'azure-keyvault.KeyVaultClient#getDeletedKeysNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedKeysNext(nextPageLink, options, optionalCallback)'
    summary: "List deleted keys in the specified vault. Authorization: Requires the\rkeys/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedKeysNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedKeyListResult} - The deserialized result object.'
        value: '{DeletedKeyListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedKeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedKeyListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getDeletedKeysNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getDeletedSecretsNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getDeletedSecretsNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedSecretsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "List deleted secrets in the specified vault. Authorization: requires the\rsecrets/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedSecretListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<DeletedSecretListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getDeletedSecretsNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedSecretsNext'
    id: 'azure-keyvault.KeyVaultClient#getDeletedSecretsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedSecretsNext(nextPageLink, options, optionalCallback)'
    summary: "List deleted secrets in the specified vault. Authorization: requires the\rsecrets/list permission."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedSecretsNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedSecretListResult} - The deserialized result object.'
        value: '{DeletedSecretListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedSecretListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedSecretListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getDeletedSecretsNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getDeletedCertificatesNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getDeletedCertificatesNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedCertificatesNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Lists the deleted certificates in the specified vault, currently\ravailable for recovery.\r\rThe GetDeletedCertificates operation retrieves the certificates in the\rcurrent vault which are in a deleted state and ready for recovery or\rpurging."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificatesNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<DeletedCertificateListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<DeletedCertificateListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        getDeletedCertificatesNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getDeletedCertificatesNext'
    id: 'azure-keyvault.KeyVaultClient#getDeletedCertificatesNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getDeletedCertificatesNext(nextPageLink, options, optionalCallback)'
    summary: "Lists the deleted certificates in the specified vault, currently\ravailable for recovery.\r\rThe GetDeletedCertificates operation retrieves the certificates in the\rcurrent vault which are in a deleted state and ready for recovery or\rpurging."
    fullName: >-
      azure-keyvault.KeyVaultClient.getDeletedCertificatesNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{DeletedCertificateListResult} - The deserialized result object.'
        value: '{DeletedCertificateListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedCertificateListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link DeletedCertificateListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getDeletedCertificatesNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getStorageAccountsNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getStorageAccountsNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getStorageAccountsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List storage accounts managed by specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getStorageAccountsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<StorageListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<StorageListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getStorageAccountsNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getStorageAccountsNext'
    id: 'azure-keyvault.KeyVaultClient#getStorageAccountsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getStorageAccountsNext(nextPageLink, options, optionalCallback)'
    summary: List storage accounts managed by specified key vault
    fullName: >-
      azure-keyvault.KeyVaultClient.getStorageAccountsNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{StorageListResult} - The deserialized result object.'
        value: '{StorageListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link StorageListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getStorageAccountsNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-keyvault.KeyVaultClient#getSasDefinitionsNextWithHttpOperationResponse
    id: >-
      azure-keyvault.KeyVaultClient#getSasDefinitionsNextWithHttpOperationResponse
    parent: azure-keyvault.KeyVaultClient
    name: 'getSasDefinitionsNextWithHttpOperationResponse(nextPageLink, options)'
    summary: List storage SAS definitions for the given storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionsNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<SasDefinitionListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<SasDefinitionListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getSasDefinitionsNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-keyvault.KeyVaultClient#getSasDefinitionsNext'
    id: 'azure-keyvault.KeyVaultClient#getSasDefinitionsNext'
    parent: azure-keyvault.KeyVaultClient
    name: 'getSasDefinitionsNext(nextPageLink, options, optionalCallback)'
    summary: List storage SAS definitions for the given storage account.
    fullName: >-
      azure-keyvault.KeyVaultClient.getSasDefinitionsNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{SasDefinitionListResult} - The deserialized result object.'
        value: '{SasDefinitionListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link SasDefinitionListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getSasDefinitionsNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
