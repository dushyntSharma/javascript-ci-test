### YamlMime:UniversalReference
items:
  - uid: azure-arm-eventgrid.EventSubscriptions
    id: azure-arm-eventgrid.EventSubscriptions
    name: EventSubscriptions
    summary: Class representing a EventSubscriptions.
    fullName: azure-arm-eventgrid.EventSubscriptions
    source:
      id: azure-arm-eventgrid.EventSubscriptions
      path: lib\services\eventgridManagement\lib\operations\eventSubscriptions.js
      startLine: 2544
      remote:
        branch: master
        path: lib\services\eventgridManagement\lib\operations\eventSubscriptions.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-eventgrid.EventSubscriptions.#ctor'
      - 'azure-arm-eventgrid.EventSubscriptions#getWithHttpOperationResponse'
      - 'azure-arm-eventgrid.EventSubscriptions#get'
      - 'azure-arm-eventgrid.EventSubscriptions#createWithHttpOperationResponse'
      - 'azure-arm-eventgrid.EventSubscriptions#create'
      - >-
        azure-arm-eventgrid.EventSubscriptions#deleteMethodWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#deleteMethod'
      - 'azure-arm-eventgrid.EventSubscriptions#updateWithHttpOperationResponse'
      - 'azure-arm-eventgrid.EventSubscriptions#update'
      - >-
        azure-arm-eventgrid.EventSubscriptions#getFullUrlWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#getFullUrl'
      - >-
        azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscription'
      - >-
        azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroup'
      - >-
        azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscription'
      - >-
        azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroup'
      - >-
        azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
      - >-
        azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupForTopicType
      - >-
        azure-arm-eventgrid.EventSubscriptions#listByResourceWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#listByResource'
      - >-
        azure-arm-eventgrid.EventSubscriptions#beginCreateWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#beginCreate'
      - >-
        azure-arm-eventgrid.EventSubscriptions#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#beginDeleteMethod'
      - >-
        azure-arm-eventgrid.EventSubscriptions#beginUpdateWithHttpOperationResponse
      - 'azure-arm-eventgrid.EventSubscriptions#beginUpdate'
    langs:
      - js
  - id: 'azure-arm-eventgrid.EventSubscriptions.#ctor'
    uid: 'azure-arm-eventgrid.EventSubscriptions.#ctor'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: EventSubscriptions(client)
    fullName: azure-arm-eventgrid.EventSubscriptions.EventSubscriptions(client)
    summary: Create a EventSubscriptions.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-eventgrid.EventGridManagementClient
          description: Reference to the service client.
      content: new EventSubscriptions(client)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#getWithHttpOperationResponse'
    id: 'azure-arm-eventgrid.EventSubscriptions#getWithHttpOperationResponse'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'getWithHttpOperationResponse(scope, eventSubscriptionName, options)'
    summary: "Get an event subscription\r\rGet properties of an event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse(scope,
      eventSubscriptionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(scope, eventSubscriptionName,
        options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#get'
    id: 'azure-arm-eventgrid.EventSubscriptions#get'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'get(scope, eventSubscriptionName, options, optionalCallback)'
    summary: "Get an event subscription\r\rGet properties of an event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.get(scope, eventSubscriptionName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscription} - The deserialized result object.'
        value: '{EventSubscription} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(scope, eventSubscriptionName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#createWithHttpOperationResponse'
    id: 'azure-arm-eventgrid.EventSubscriptions#createWithHttpOperationResponse'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      createWithHttpOperationResponse(scope, eventSubscriptionName,
      eventSubscriptionInfo, options)
    summary: "Create an event subscription\r\rAsynchronously creates a new event subscription to the specified scope.\rExisting event subscriptions cannot be updated with this API and should\rinstead use the Update event subscription API."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.createWithHttpOperationResponse(scope,
      eventSubscriptionName, eventSubscriptionInfo, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the resource to which the event\rsubscription needs to be created. The scope can be a subscription, or a\rresource group, or a top level resource belonging to a resource provider\rnamespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated. Event subscription names must be between 3 and 64 characters in\rlength and use alphanumeric letters only."
        - id: eventSubscriptionInfo
          type:
            - object
          description: "Event subscription properties\rcontaining the destination and filter information"
        - id: eventSubscriptionInfo.destination
          type:
            - object
          description: "Information about the\rdestination where events have to be delivered for the event subscription."
          optional: true
        - id: eventSubscriptionInfo.destination.endpointType
          type:
            - string
          description: "Polymorphic\rDiscriminator"
        - id: eventSubscriptionInfo.filter
          type:
            - object
          description: "Information about the filter\rfor the event subscription."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectBeginsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rprefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectEndsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rsuffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.includedEventTypes
          type:
            - array
          description: "A list of\rapplicable event types that need to be part of the event subscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionInfo.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the\rfilter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionInfo.labels
          type:
            - array
          description: List of user defined labels.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createWithHttpOperationResponse(scope, eventSubscriptionName,
        eventSubscriptionInfo, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#create'
    id: 'azure-arm-eventgrid.EventSubscriptions#create'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      create(scope, eventSubscriptionName, eventSubscriptionInfo, options,
      optionalCallback)
    summary: "Create an event subscription\r\rAsynchronously creates a new event subscription to the specified scope.\rExisting event subscriptions cannot be updated with this API and should\rinstead use the Update event subscription API."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.create(scope,
      eventSubscriptionName, eventSubscriptionInfo, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscription} - The deserialized result object.'
        value: '{EventSubscription} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the resource to which the event\rsubscription needs to be created. The scope can be a subscription, or a\rresource group, or a top level resource belonging to a resource provider\rnamespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated. Event subscription names must be between 3 and 64 characters in\rlength and use alphanumeric letters only."
        - id: eventSubscriptionInfo
          type:
            - object
          description: "Event subscription properties\rcontaining the destination and filter information"
        - id: eventSubscriptionInfo.destination
          type:
            - object
          description: "Information about the\rdestination where events have to be delivered for the event subscription."
          optional: true
        - id: eventSubscriptionInfo.destination.endpointType
          type:
            - string
          description: "Polymorphic\rDiscriminator"
        - id: eventSubscriptionInfo.filter
          type:
            - object
          description: "Information about the filter\rfor the event subscription."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectBeginsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rprefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectEndsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rsuffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.includedEventTypes
          type:
            - array
          description: "A list of\rapplicable event types that need to be part of the event subscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionInfo.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the\rfilter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionInfo.labels
          type:
            - array
          description: List of user defined labels.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function create(scope, eventSubscriptionName, eventSubscriptionInfo,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#deleteMethodWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      deleteMethodWithHttpOperationResponse(scope, eventSubscriptionName,
      options)
    summary: "Delete an event subscription\r\rDelete an existing event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse(scope,
      eventSubscriptionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(scope,
        eventSubscriptionName, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#deleteMethod'
    id: 'azure-arm-eventgrid.EventSubscriptions#deleteMethod'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'deleteMethod(scope, eventSubscriptionName, options, optionalCallback)'
    summary: "Delete an event subscription\r\rDelete an existing event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.deleteMethod(scope,
      eventSubscriptionName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(scope, eventSubscriptionName, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#updateWithHttpOperationResponse'
    id: 'azure-arm-eventgrid.EventSubscriptions#updateWithHttpOperationResponse'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      updateWithHttpOperationResponse(scope, eventSubscriptionName,
      eventSubscriptionUpdateParameters, options)
    summary: "Update an event subscription\r\rAsynchronously updates an existing event subscription."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse(scope,
      eventSubscriptionName, eventSubscriptionUpdateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of existing event subscription. The scope\rcan be a subscription, or a resource group, or a top level resource\rbelonging to a resource provider namespace, or an EventGrid topic. For\rexample, use '/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated"
        - id: eventSubscriptionUpdateParameters
          type:
            - object
          description: "Updated event subscription\rinformation"
        - id: eventSubscriptionUpdateParameters.destination
          type:
            - object
          description: "Information\rabout the destination where events have to be delivered for the event\rsubscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.destination.endpointType
          type:
            - string
          description: Polymorphic Discriminator
        - id: eventSubscriptionUpdateParameters.filter
          type:
            - object
          description: "Information about\rthe filter for the event subscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectBeginsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path prefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectEndsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path suffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.includedEventTypes
          type:
            - array
          description: "A list of applicable event types that need to be part of the event\rsubscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies\rif the SubjectBeginsWith and SubjectEndsWith properties of the filter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionUpdateParameters.labels
          type:
            - array
          description: "List of user\rdefined labels."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(scope, eventSubscriptionName,
        eventSubscriptionUpdateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#update'
    id: 'azure-arm-eventgrid.EventSubscriptions#update'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      update(scope, eventSubscriptionName, eventSubscriptionUpdateParameters,
      options, optionalCallback)
    summary: "Update an event subscription\r\rAsynchronously updates an existing event subscription."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.update(scope,
      eventSubscriptionName, eventSubscriptionUpdateParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscription} - The deserialized result object.'
        value: '{EventSubscription} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of existing event subscription. The scope\rcan be a subscription, or a resource group, or a top level resource\rbelonging to a resource provider namespace, or an EventGrid topic. For\rexample, use '/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated"
        - id: eventSubscriptionUpdateParameters
          type:
            - object
          description: "Updated event subscription\rinformation"
        - id: eventSubscriptionUpdateParameters.destination
          type:
            - object
          description: "Information\rabout the destination where events have to be delivered for the event\rsubscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.destination.endpointType
          type:
            - string
          description: Polymorphic Discriminator
        - id: eventSubscriptionUpdateParameters.filter
          type:
            - object
          description: "Information about\rthe filter for the event subscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectBeginsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path prefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectEndsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path suffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.includedEventTypes
          type:
            - array
          description: "A list of applicable event types that need to be part of the event\rsubscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies\rif the SubjectBeginsWith and SubjectEndsWith properties of the filter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionUpdateParameters.labels
          type:
            - array
          description: "List of user\rdefined labels."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function update(scope, eventSubscriptionName,
        eventSubscriptionUpdateParameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#getFullUrlWithHttpOperationResponse'
    id: 'azure-arm-eventgrid.EventSubscriptions#getFullUrlWithHttpOperationResponse'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'getFullUrlWithHttpOperationResponse(scope, eventSubscriptionName, options)'
    summary: "Get full URL of an event subscription\r\rGet the full endpoint URL for an event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse(scope,
      eventSubscriptionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionFullUrl>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionFullUrl>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getFullUrlWithHttpOperationResponse(scope,
        eventSubscriptionName, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#getFullUrl'
    id: 'azure-arm-eventgrid.EventSubscriptions#getFullUrl'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'getFullUrl(scope, eventSubscriptionName, options, optionalCallback)'
    summary: "Get full URL of an event subscription\r\rGet the full endpoint URL for an event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.getFullUrl(scope,
      eventSubscriptionName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionFullUrl} - The deserialized result object.'
        value: '{EventSubscriptionFullUrl} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionFullUrl} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionFullUrl} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getFullUrl(scope, eventSubscriptionName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: listGlobalBySubscriptionWithHttpOperationResponse(options)
    summary: "Get an aggregated list of all global event subscriptions under an\rAzure subscription\r\rList all aggregated global event subscriptions under a specific Azure\rsubscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listGlobalBySubscriptionWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscription'
    id: 'azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscription'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'listGlobalBySubscription(options, optionalCallback)'
    summary: "Get an aggregated list of all global event subscriptions under an\rAzure subscription\r\rList all aggregated global event subscriptions under a specific Azure\rsubscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listGlobalBySubscription(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(topicTypeName,
      options)
    summary: "List all global event subscriptions for a topic type\r\rList all global event subscriptions under an Azure subscription for a topic\rtype."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(topicTypeName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(topicTypeName,
        options)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionForTopicType
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalBySubscriptionForTopicType
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listGlobalBySubscriptionForTopicType(topicTypeName, options,
      optionalCallback)
    summary: "List all global event subscriptions for a topic type\r\rList all global event subscriptions under an Azure subscription for a topic\rtype."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType(topicTypeName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listGlobalBySubscriptionForTopicType(topicTypeName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listGlobalByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    summary: "List all global event subscriptions under an Azure subscription and\rresource group\r\rList all global event subscriptions under a specific Azure subscription and\rresource group"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listGlobalByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroup'
    id: 'azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroup'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'listGlobalByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: "List all global event subscriptions under an Azure subscription and\rresource group\r\rList all global event subscriptions under a specific Azure subscription and\rresource group"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listGlobalByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName,
      topicTypeName, options)
    summary: "List all global event subscriptions under a resource group for a\rtopic type\r\rList all global event subscriptions under a resource group for a specific\rtopic type."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName,
      topicTypeName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName,
        topicTypeName, options)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupForTopicType
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listGlobalByResourceGroupForTopicType
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listGlobalByResourceGroupForTopicType(resourceGroupName, topicTypeName,
      options, optionalCallback)
    summary: "List all global event subscriptions under a resource group for a\rtopic type\r\rList all global event subscriptions under a resource group for a specific\rtopic type."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType(resourceGroupName,
      topicTypeName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listGlobalByResourceGroupForTopicType(resourceGroupName,
        topicTypeName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'listRegionalBySubscriptionWithHttpOperationResponse(location, options)'
    summary: "List all regional event subscriptions under an Azure subscription\r\rList all event subscriptions from the given location under a specific Azure\rsubscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse(location,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: Name of the location
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listRegionalBySubscriptionWithHttpOperationResponse(location,
        options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscription'
    id: 'azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscription'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'listRegionalBySubscription(location, options, optionalCallback)'
    summary: "List all regional event subscriptions under an Azure subscription\r\rList all event subscriptions from the given location under a specific Azure\rsubscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription(location,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: Name of the location
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listRegionalBySubscription(location, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listRegionalByResourceGroupWithHttpOperationResponse(resourceGroupName,
      location, options)
    summary: "List all regional event subscriptions under an Azure subscription\rand resource group\r\rList all event subscriptions from the given location under a specific Azure\rsubscription and resource group"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse(resourceGroupName,
      location, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: location
          type:
            - string
          description: Name of the location
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRegionalByResourceGroupWithHttpOperationResponse(resourceGroupName,
        location, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroup'
    id: 'azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroup'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listRegionalByResourceGroup(resourceGroupName, location, options,
      optionalCallback)
    summary: "List all regional event subscriptions under an Azure subscription\rand resource group\r\rList all event subscriptions from the given location under a specific Azure\rsubscription and resource group"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup(resourceGroupName,
      location, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: location
          type:
            - string
          description: Name of the location
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listRegionalByResourceGroup(resourceGroupName, location,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(location,
      topicTypeName, options)
    summary: "List all regional event subscriptions under an Azure subscription\rfor a topic type\r\rList all event subscriptions from the given location under a specific Azure\rsubscription and topic type."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(location,
      topicTypeName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: Name of the location
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(location,
        topicTypeName, options)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionForTopicType
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalBySubscriptionForTopicType
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listRegionalBySubscriptionForTopicType(location, topicTypeName, options,
      optionalCallback)
    summary: "List all regional event subscriptions under an Azure subscription\rfor a topic type\r\rList all event subscriptions from the given location under a specific Azure\rsubscription and topic type."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType(location,
      topicTypeName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: Name of the location
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listRegionalBySubscriptionForTopicType(location, topicTypeName,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName,
      location, topicTypeName, options)
    summary: "List all regional event subscriptions under an Azure subscription\rand resource group for a topic type\r\rList all event subscriptions from the given location under a specific Azure\rsubscription and resource group and topic type"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName,
      location, topicTypeName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: location
          type:
            - string
          description: Name of the location
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function
        listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName,
        location, topicTypeName, options)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupForTopicType
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listRegionalByResourceGroupForTopicType
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listRegionalByResourceGroupForTopicType(resourceGroupName, location,
      topicTypeName, options, optionalCallback)
    summary: "List all regional event subscriptions under an Azure subscription\rand resource group for a topic type\r\rList all event subscriptions from the given location under a specific Azure\rsubscription and resource group and topic type"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType(resourceGroupName,
      location, topicTypeName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: location
          type:
            - string
          description: Name of the location
        - id: topicTypeName
          type:
            - string
          description: Name of the topic type
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listRegionalByResourceGroupForTopicType(resourceGroupName,
        location, topicTypeName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#listByResourceWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#listByResourceWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listByResourceWithHttpOperationResponse(resourceGroupName,
      providerNamespace, resourceTypeName, resourceName, options)
    summary: "List all event subscriptions for a specific topic\r\rList all event subscriptions that have been created for a specific topic"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse(resourceGroupName,
      providerNamespace, resourceTypeName, resourceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<EventSubscriptionsListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic
        - id: resourceTypeName
          type:
            - string
          description: Name of the resource type
        - id: resourceName
          type:
            - string
          description: Name of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceWithHttpOperationResponse(resourceGroupName,
        providerNamespace, resourceTypeName, resourceName, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#listByResource'
    id: 'azure-arm-eventgrid.EventSubscriptions#listByResource'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      listByResource(resourceGroupName, providerNamespace, resourceTypeName,
      resourceName, options, optionalCallback)
    summary: "List all event subscriptions for a specific topic\r\rList all event subscriptions that have been created for a specific topic"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.listByResource(resourceGroupName,
      providerNamespace, resourceTypeName, resourceName, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscriptionsListResult} - The deserialized result object.'
        value: '{EventSubscriptionsListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscriptionsListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: "The name of the resource group within the\ruser's subscription."
        - id: providerNamespace
          type:
            - string
          description: Namespace of the provider of the topic
        - id: resourceTypeName
          type:
            - string
          description: Name of the resource type
        - id: resourceName
          type:
            - string
          description: Name of the resource
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResource(resourceGroupName, providerNamespace,
        resourceTypeName, resourceName, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#beginCreateWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#beginCreateWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      beginCreateWithHttpOperationResponse(scope, eventSubscriptionName,
      eventSubscriptionInfo, options)
    summary: "Create an event subscription\r\rAsynchronously creates a new event subscription to the specified scope.\rExisting event subscriptions cannot be updated with this API and should\rinstead use the Update event subscription API."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.beginCreateWithHttpOperationResponse(scope,
      eventSubscriptionName, eventSubscriptionInfo, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the resource to which the event\rsubscription needs to be created. The scope can be a subscription, or a\rresource group, or a top level resource belonging to a resource provider\rnamespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated. Event subscription names must be between 3 and 64 characters in\rlength and use alphanumeric letters only."
        - id: eventSubscriptionInfo
          type:
            - object
          description: "Event subscription properties\rcontaining the destination and filter information"
        - id: eventSubscriptionInfo.destination
          type:
            - object
          description: "Information about the\rdestination where events have to be delivered for the event subscription."
          optional: true
        - id: eventSubscriptionInfo.destination.endpointType
          type:
            - string
          description: "Polymorphic\rDiscriminator"
        - id: eventSubscriptionInfo.filter
          type:
            - object
          description: "Information about the filter\rfor the event subscription."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectBeginsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rprefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectEndsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rsuffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.includedEventTypes
          type:
            - array
          description: "A list of\rapplicable event types that need to be part of the event subscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionInfo.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the\rfilter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionInfo.labels
          type:
            - array
          description: List of user defined labels.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateWithHttpOperationResponse(scope,
        eventSubscriptionName, eventSubscriptionInfo, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#beginCreate'
    id: 'azure-arm-eventgrid.EventSubscriptions#beginCreate'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      beginCreate(scope, eventSubscriptionName, eventSubscriptionInfo, options,
      optionalCallback)
    summary: "Create an event subscription\r\rAsynchronously creates a new event subscription to the specified scope.\rExisting event subscriptions cannot be updated with this API and should\rinstead use the Update event subscription API."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.beginCreate(scope,
      eventSubscriptionName, eventSubscriptionInfo, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscription} - The deserialized result object.'
        value: '{EventSubscription} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the resource to which the event\rsubscription needs to be created. The scope can be a subscription, or a\rresource group, or a top level resource belonging to a resource provider\rnamespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated. Event subscription names must be between 3 and 64 characters in\rlength and use alphanumeric letters only."
        - id: eventSubscriptionInfo
          type:
            - object
          description: "Event subscription properties\rcontaining the destination and filter information"
        - id: eventSubscriptionInfo.destination
          type:
            - object
          description: "Information about the\rdestination where events have to be delivered for the event subscription."
          optional: true
        - id: eventSubscriptionInfo.destination.endpointType
          type:
            - string
          description: "Polymorphic\rDiscriminator"
        - id: eventSubscriptionInfo.filter
          type:
            - object
          description: "Information about the filter\rfor the event subscription."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectBeginsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rprefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.subjectEndsWith
          type:
            - string
          description: "An optional\rstring to filter events for an event subscription based on a resource path\rsuffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionInfo.filter.includedEventTypes
          type:
            - array
          description: "A list of\rapplicable event types that need to be part of the event subscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionInfo.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the\rfilter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionInfo.labels
          type:
            - array
          description: List of user defined labels.
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreate(scope, eventSubscriptionName,
        eventSubscriptionInfo, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      beginDeleteMethodWithHttpOperationResponse(scope, eventSubscriptionName,
      options)
    summary: "Delete an event subscription\r\rDelete an existing event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse(scope,
      eventSubscriptionName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(scope,
        eventSubscriptionName, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#beginDeleteMethod'
    id: 'azure-arm-eventgrid.EventSubscriptions#beginDeleteMethod'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: 'beginDeleteMethod(scope, eventSubscriptionName, options, optionalCallback)'
    summary: "Delete an event subscription\r\rDelete an existing event subscription"
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod(scope,
      eventSubscriptionName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of the event subscription. The scope can be\ra subscription, or a resource group, or a top level resource belonging to a\rresource provider namespace, or an EventGrid topic. For example, use\r'/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: Name of the event subscription
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(scope, eventSubscriptionName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-eventgrid.EventSubscriptions#beginUpdateWithHttpOperationResponse
    id: >-
      azure-arm-eventgrid.EventSubscriptions#beginUpdateWithHttpOperationResponse
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      beginUpdateWithHttpOperationResponse(scope, eventSubscriptionName,
      eventSubscriptionUpdateParameters, options)
    summary: "Update an event subscription\r\rAsynchronously updates an existing event subscription."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse(scope,
      eventSubscriptionName, eventSubscriptionUpdateParameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<EventSubscription>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of existing event subscription. The scope\rcan be a subscription, or a resource group, or a top level resource\rbelonging to a resource provider namespace, or an EventGrid topic. For\rexample, use '/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated"
        - id: eventSubscriptionUpdateParameters
          type:
            - object
          description: "Updated event subscription\rinformation"
        - id: eventSubscriptionUpdateParameters.destination
          type:
            - object
          description: "Information\rabout the destination where events have to be delivered for the event\rsubscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.destination.endpointType
          type:
            - string
          description: Polymorphic Discriminator
        - id: eventSubscriptionUpdateParameters.filter
          type:
            - object
          description: "Information about\rthe filter for the event subscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectBeginsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path prefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectEndsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path suffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.includedEventTypes
          type:
            - array
          description: "A list of applicable event types that need to be part of the event\rsubscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies\rif the SubjectBeginsWith and SubjectEndsWith properties of the filter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionUpdateParameters.labels
          type:
            - array
          description: "List of user\rdefined labels."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginUpdateWithHttpOperationResponse(scope,
        eventSubscriptionName, eventSubscriptionUpdateParameters, options)
    langs:
      - js
  - uid: 'azure-arm-eventgrid.EventSubscriptions#beginUpdate'
    id: 'azure-arm-eventgrid.EventSubscriptions#beginUpdate'
    parent: azure-arm-eventgrid.EventSubscriptions
    name: >-
      beginUpdate(scope, eventSubscriptionName,
      eventSubscriptionUpdateParameters, options, optionalCallback)
    summary: "Update an event subscription\r\rAsynchronously updates an existing event subscription."
    fullName: >-
      azure-arm-eventgrid.EventSubscriptions.beginUpdate(scope,
      eventSubscriptionName, eventSubscriptionUpdateParameters, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{EventSubscription} - The deserialized result object.'
        value: '{EventSubscription} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link EventSubscription} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: "The scope of existing event subscription. The scope\rcan be a subscription, or a resource group, or a top level resource\rbelonging to a resource provider namespace, or an EventGrid topic. For\rexample, use '/subscriptions/{subscriptionId}/' for a subscription,\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a\rresource group, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\rfor a resource, and\r'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}'\rfor an EventGrid topic."
        - id: eventSubscriptionName
          type:
            - string
          description: "Name of the event subscription to be\rcreated"
        - id: eventSubscriptionUpdateParameters
          type:
            - object
          description: "Updated event subscription\rinformation"
        - id: eventSubscriptionUpdateParameters.destination
          type:
            - object
          description: "Information\rabout the destination where events have to be delivered for the event\rsubscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.destination.endpointType
          type:
            - string
          description: Polymorphic Discriminator
        - id: eventSubscriptionUpdateParameters.filter
          type:
            - object
          description: "Information about\rthe filter for the event subscription."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectBeginsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path prefix.\rThe format of this depends on the publisher of the events.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.subjectEndsWith
          type:
            - string
          description: "An optional string to filter events for an event subscription based on a\rresource path suffix.\rWildcard characters are not supported in this path."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.includedEventTypes
          type:
            - array
          description: "A list of applicable event types that need to be part of the event\rsubscription.\rIf it is desired to subscribe to all event types, the string \"all\" needs to\rbe specified as an element in this list."
          optional: true
        - id: eventSubscriptionUpdateParameters.filter.isSubjectCaseSensitive
          type:
            - boolean
          description: "Specifies\rif the SubjectBeginsWith and SubjectEndsWith properties of the filter\rshould be compared in a case sensitive manner."
          optional: true
        - id: eventSubscriptionUpdateParameters.labels
          type:
            - array
          description: "List of user\rdefined labels."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginUpdate(scope, eventSubscriptionName,
        eventSubscriptionUpdateParameters, options, optionalCallback)
    langs:
      - js
references:
  - uid: azure-arm-eventgrid.EventGridManagementClient
    name: EventGridManagementClient
    fullName: azure-arm-eventgrid.EventGridManagementClient
    isExternal: false
