### YamlMime:UniversalReference
items:
  - uid: azure-batch.JobSchedule
    id: azure-batch.JobSchedule
    name: JobSchedule
    summary: Class representing a JobSchedule.
    fullName: azure-batch.JobSchedule
    source:
      id: azure-batch.JobSchedule
      path: lib\services\batch\lib\operations\jobSchedule.js
      startLine: 5583
      remote:
        branch: master
        path: lib\services\batch\lib\operations\jobSchedule.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-batch.JobSchedule.#ctor'
      - 'azure-batch.JobSchedule#existsWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#exists'
      - 'azure-batch.JobSchedule#deleteMethodWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#deleteMethod'
      - 'azure-batch.JobSchedule#getWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#get'
      - 'azure-batch.JobSchedule#patchWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#patch'
      - 'azure-batch.JobSchedule#updateWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#update'
      - 'azure-batch.JobSchedule#disableWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#disable'
      - 'azure-batch.JobSchedule#enableWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#enable'
      - 'azure-batch.JobSchedule#terminateWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#terminate'
      - 'azure-batch.JobSchedule#addWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#add'
      - 'azure-batch.JobSchedule#listWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#list'
      - 'azure-batch.JobSchedule#listNextWithHttpOperationResponse'
      - 'azure-batch.JobSchedule#listNext'
    langs:
      - js
  - id: 'azure-batch.JobSchedule.#ctor'
    uid: 'azure-batch.JobSchedule.#ctor'
    parent: azure-batch.JobSchedule
    name: JobSchedule(client)
    fullName: azure-batch.JobSchedule.JobSchedule(client)
    summary: Create a JobSchedule.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-batch.BatchServiceClient
          description: Reference to the service client.
      content: new JobSchedule(client)
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#existsWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#existsWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'existsWithHttpOperationResponse(jobScheduleId, options)'
    summary: Checks the specified job schedule exists.
    fullName: >-
      azure-batch.JobSchedule.existsWithHttpOperationResponse(jobScheduleId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
        value: '{HttpOperationResponse<Boolean>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: "The ID of the job schedule which you want to\rcheck."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleExistsOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleExistsOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleExistsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleExistsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleExistsOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleExistsOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleExistsOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleExistsOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleExistsOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function existsWithHttpOperationResponse(jobScheduleId, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#exists'
    id: 'azure-batch.JobSchedule#exists'
    parent: azure-batch.JobSchedule
    name: 'exists(jobScheduleId, options, optionalCallback)'
    summary: Checks the specified job schedule exists.
    fullName: 'azure-batch.JobSchedule.exists(jobScheduleId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Boolean} - The deserialized result object.'
        value: '{Boolean} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {boolean} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: "The ID of the job schedule which you want to\rcheck."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleExistsOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleExistsOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleExistsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleExistsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleExistsOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleExistsOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleExistsOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleExistsOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleExistsOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function exists(jobScheduleId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#deleteMethodWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#deleteMethodWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'deleteMethodWithHttpOperationResponse(jobScheduleId, options)'
    summary: "Deletes a job schedule from the specified account.\r\rWhen you delete a job schedule, this also deletes all jobs and tasks under\rthat schedule. When tasks are deleted, all the files in their working\rdirectories on the compute nodes are also deleted (the retention period is\rignored). The job schedule statistics are no longer accessible once the job\rschedule is deleted, though they are still counted towards account lifetime\rstatistics."
    fullName: >-
      azure-batch.JobSchedule.deleteMethodWithHttpOperationResponse(jobScheduleId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function deleteMethodWithHttpOperationResponse(jobScheduleId, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#deleteMethod'
    id: 'azure-batch.JobSchedule#deleteMethod'
    parent: azure-batch.JobSchedule
    name: 'deleteMethod(jobScheduleId, options, optionalCallback)'
    summary: "Deletes a job schedule from the specified account.\r\rWhen you delete a job schedule, this also deletes all jobs and tasks under\rthat schedule. When tasks are deleted, all the files in their working\rdirectories on the compute nodes are also deleted (the retention period is\rignored). The job schedule statistics are no longer accessible once the job\rschedule is deleted, though they are still counted towards account lifetime\rstatistics."
    fullName: >-
      azure-batch.JobSchedule.deleteMethod(jobScheduleId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDeleteMethodOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.jobScheduleDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteMethod(jobScheduleId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#getWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#getWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'getWithHttpOperationResponse(jobScheduleId, options)'
    summary: Gets information about the specified job schedule.
    fullName: >-
      azure-batch.JobSchedule.getWithHttpOperationResponse(jobScheduleId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudJobSchedule>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CloudJobSchedule>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleGetOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleGetOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.jobScheduleGetOptions.expand
          type:
            - string
          description: "An OData $expand\rclause."
          optional: true
        - id: options.jobScheduleGetOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleGetOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleGetOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.jobScheduleGetOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleGetOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleGetOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleGetOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(jobScheduleId, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#get'
    id: 'azure-batch.JobSchedule#get'
    parent: azure-batch.JobSchedule
    name: 'get(jobScheduleId, options, optionalCallback)'
    summary: Gets information about the specified job schedule.
    fullName: 'azure-batch.JobSchedule.get(jobScheduleId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudJobSchedule} - The deserialized result object.'
        value: '{CloudJobSchedule} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudJobSchedule} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudJobSchedule} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to get.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleGetOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleGetOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.jobScheduleGetOptions.expand
          type:
            - string
          description: "An OData $expand\rclause."
          optional: true
        - id: options.jobScheduleGetOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleGetOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleGetOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.jobScheduleGetOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleGetOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleGetOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleGetOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(jobScheduleId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#patchWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#patchWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: >-
      patchWithHttpOperationResponse(jobScheduleId, jobSchedulePatchParameter,
      options)
    summary: "Updates the properties of the specified job schedule.\r\rThis replaces only the job schedule properties specified in the request. For\rexample, if the schedule property is not specified with this request, then\rthe Batch service will keep the existing schedule. Changes to a job schedule\ronly impact jobs created by the schedule after the update has taken place;\rcurrently running jobs are unaffected."
    fullName: >-
      azure-batch.JobSchedule.patchWithHttpOperationResponse(jobScheduleId,
      jobSchedulePatchParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobSchedulePatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobSchedulePatchParameter.schedule
          type:
            - object
          description: "The schedule according\rto which jobs will be created. If you do not specify this element, the\rexisting schedule is left unchanged."
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunUntil
          type:
            - date
          description: "The\rearliest time at which any job may be created under this job schedule. If\ryou do not specify a doNotRunUntil time, the schedule becomes ready to\rcreate jobs immediately."
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunAfter
          type:
            - date
          description: "A time\rafter which no job will be created under this job schedule. The schedule\rwill move to the completed state as soon as this deadline is past and there\ris no active job under this job schedule. If you do not specify a\rdoNotRunAfter time, and you are creating a recurring job schedule, the job\rschedule will remain active until you explicitly terminate it."
          optional: true
        - id: jobSchedulePatchParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: "The time interval, starting from the time at which the schedule indicates a\rjob should be created, within which a job must be created. If a job is not\rcreated within the startWindow interval, then the 'opportunity' is lost; no\rjob will be created until the next recurrence of the schedule. If the\rschedule is recurring, and the startWindow is longer than the recurrence\rinterval, then this is equivalent to an infinite startWindow, because the\rjob that is 'due' in one recurrenceInterval is not carried forward into the\rnext recurrence interval. The default is infinite. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: jobSchedulePatchParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval\rbetween the start times of two successive jobs under the job schedule. A job\rschedule can have at most one active job under it at any given time. Because\ra job schedule can have at most one active job under it at any given time,\rif it is time to create a new job under a job schedule, but the previous job\ris still running, the Batch service will not create the new job until the\rprevious job finishes. If the previous job does not finish within the\rstartWindow period of the new recurrenceInterval, then no new job will be\rscheduled for that interval. For recurring jobs, you should normally specify\ra jobManagerTask in the jobSpecification. If you do not use jobManagerTask,\ryou will need an external process to monitor when jobs are created, add\rtasks to the jobs and terminate the jobs ready for the next recurrence. The\rdefault is that the schedule does not recur: one job is created, within the\rstartWindow after the doNotRunUntil time, and the schedule is complete as\rsoon as that job finishes. The minimum value is 1 minute. If you specify a\rlower value, the Batch service rejects the schedule with an error; if you\rare calling the REST API directly, the HTTP status code is 400 (Bad\rRequest)."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification
          type:
            - object
          description: "The details of\rthe jobs to be created on this schedule. Updates affect only jobs that are\rstarted after the update has taken place. Any currently active job continues\rwith the older specification."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.priority
          type:
            - number
          description: "The\rpriority of jobs created under this schedule. Priority values can range from\r-1000 to 1000, with -1000 being the lowest priority and 1000 being the\rhighest priority. The default value is 0. This priority is used as the\rdefault for all jobs under the job schedule. You can update a job's priority\rafter it has been created using by using the update job API."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.displayName
          type:
            - string
          description: "The\rdisplay name for jobs created under this schedule. The name need not be\runique and can contain any Unicode characters up to a maximum length of\r1024."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: "Whether\rtasks in the job can define dependencies on each other. The default is\rfalse."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: "The action\rthe Batch service should take when all tasks in a job created under this\rschedule are in the completed state. Note that if a job contains no tasks,\rthen all tasks are considered complete. This option is therefore most\rcommonly used with a Job Manager task; if you want to use automatic job\rtermination without a Job Manager, you should initially set\ronAllTasksComplete to noAction and update the job properties to set\ronAllTasksComplete to terminateJob once you have finished adding tasks. The\rdefault is noAction. Possible values include: 'noAction', 'terminateJob'"
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: "The action the Batch service should take when any task fails in a job\rcreated under this schedule. A task is considered to have failed if it have\rfailed if has a failureInfo. A failureInfo is set if the task completes with\ra non-zero exit code after exhausting its retry count, or if there was an\rerror starting the task, for example due to a resource file download error.\rThe default is noAction. Possible values include: 'noAction',\r'performExitOptionsJobAction'"
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.constraints
          type:
            - object
          description: "The\rexecution constraints for jobs created under this schedule."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the job may run, measured from the time the\rjob is created. If the job does not complete within the time limit, the\rBatch service terminates it and any tasks that are still running. In this\rcase, the termination reason will be MaxWallClockTimeExpiry. If this\rproperty is not specified, there is no time limit on how long the job may\rrun."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times each task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try each\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries a task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rtasks. If the maximum retry count is -1, the Batch service retries tasks\rwithout limit. The default value is 0 (no retries)."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: "The details of a Job Manager task to be launched when a job is started under\rthis schedule. If the job does not specify a Job Manager task, the user must\rexplicitly add tasks to the job using the Task API. If the job does specify\ra Job Manager task, the Batch service creates the Job Manager task when the\rjob is created, and will try to schedule the Job Manager task before\rscheduling other tasks in the job."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: "A string that uniquely identifies the Job Manager task within the job. The\rID can contain any combination of alphanumeric characters including hyphens\rand underscores and cannot contain more than 64 characters."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: "The\rdisplay name of the Job Manager task. It need not be unique and can contain\rany Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Manager task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Manager task runs. If the\rpool that will run this task has containerConfiguration set, this must be\rset as well. If the pool that will run this task doesn't have\rcontainerConfiguration set, this must not be set. When this is specified,\rall directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\rAzure Batch directories on the node) are mapped into the container, all task\renvironment variables are mapped into the container, and the task command\rline is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.outputFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will upload from the compute node after\rrunning the command line. For multi-instance tasks, the files will only be\ruploaded from the compute node on which the primary task is executed."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job. If true, when the Job Manager task completes, the Batch service\rmarks the job as complete. If any tasks are still running at this time\r(other than Job Release), those tasks are terminated. If false, the\rcompletion of the Job Manager task does not affect the job status. In this\rcase, you should either use the onAllTasksComplete attribute to terminate\rthe job, or have a client or user terminate the job explicitly. An example\rof this is if the Job Manager creates a set of tasks but then takes no\rfurther role in their execution. The default value is true. If you are using\rthe onAllTasksComplete and onTaskFailure attributes to control job lifetime,\rand using the Job Manager task only to create the tasks for the job (not to\rmonitor progress), then it is important to set killJobOnCompletion to false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: "The\ruser identity under which the Job Manager task runs. If omitted, the task\rruns as a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: "Whether the Job Manager task requires exclusive use of the compute node\rwhere it runs. If true, no other tasks will run on the same compute node for\ras long as the Job Manager is running. If false, other tasks can run\rsimultaneously with the Job Manager on a compute node. The Job Manager task\rcounts normally against the node's concurrent task limit, so this is only\rrelevant if the node allows multiple concurrent tasks. The default value is\rtrue."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: "A list of application packages that the Batch service will deploy to the\rcompute node before running the command line. Application packages are\rdownloaded and deployed to a shared directory, not the task working\rdirectory. Therefore, if a referenced package is already on the compute\rnode, and is up to date, then it is not re-downloaded; the existing copy on\rthe compute node is used. If a referenced application package cannot be\rinstalled, for example because the package has been deleted or because\rdownload failed, the task fails."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: "The settings for an authentication token that the task can use to perform\rBatch service operations. If this property is set, the Batch service\rprovides the task with an authentication token which can be used to\rauthenticate Batch service operations without requiring an account access\rkey. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\rvariable. The operations that the task can carry out using the token depend\ron the settings. For example, a task can request job permissions in order to\radd other tasks to the job, or check the status of the job or of other tasks\runder the job."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources to which the token grants access. The authentication\rtoken grants access to a limited set of Batch service operations. Currently\rthe only supported value for the access property is 'job', which grants\raccess to all operations related to the job which contains the task."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.allowLowPriorityNode
          type:
            - boolean
          description: "Whether the Job Manager task may run on a low-priority compute node. The\rdefault value is false."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: "The Job\rPreparation task for jobs created under this schedule. If a job has a Job\rPreparation task, the Batch service will run the Job Preparation task on a\rcompute node before starting any tasks of that job on that compute node."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Preparation task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobpreparation'. No other task in the job can have the same ID as the Job\rPreparation task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobPreparationTask;\rif you are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: "The command line of the Job Preparation task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Preparation task runs.\rWhen this is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the Batch\rservice terminates it. If this is not specified, there is no time limit on\rhow long the task may run."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory on the compute node where it\rran, from the time it completes execution. After this time, the Batch\rservice may delete the task directory and all its contents. The default is\rinfinite, i.e. the task directory will be retained until the compute node is\rremoved or reimaged."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node. A Job Preparation task has completed successfully if it exits\rwith exit code 0. If true and the Job Preparation task fails on a compute\rnode, the Batch service retries the Job Preparation task up to its maximum\rretry count (as specified in the constraints element). If the task has still\rnot completed successfully after all retries, then the Batch service will\rnot schedule tasks of the job to the compute node. The compute node remains\ractive and eligible to run tasks of other jobs. If false, the Batch service\rwill not wait for the Job Preparation task to complete. In this case, other\rtasks of the job can start executing on the compute node while the Job\rPreparation task is still running; and even if the Job Preparation task\rfails, new tasks will continue to be scheduled on the node. The default\rvalue is true."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Preparation task runs. If omitted, the\rtask runs as a non-administrative user unique to the task on Windows nodes,\ror a a non-administrative user unique to the pool on Linux nodes."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. The Job Preparation task is always rerun if a compute\rnode is reimaged, or if the Job Preparation task did not complete (e.g.\rbecause the reboot occurred while the task was running). Therefore, you\rshould always write a Job Preparation task to be idempotent and to behave\rcorrectly if run multiple times. The default value is true."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: "The Job Release task for jobs created under this schedule. The primary\rpurpose of the Job Release task is to undo changes to compute nodes made by\rthe Job Preparation task. Example activities include deleting local files,\ror shutting down services that were started as part of job preparation. A\rJob Release task cannot be specified without also specifying a Job\rPreparation task for the job. The Batch service runs the Job Release task on\rthe compute nodes that have run the Job Preparation task."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: "A string that\runiquely identifies the Job Release task within the job. The ID can contain\rany combination of alphanumeric characters including hyphens and underscores\rand cannot contain more than 64 characters. If you do not specify this\rproperty, the Batch service assigns a default value of 'jobrelease'. No\rother task in the job can have the same ID as the Job Release task. If you\rtry to submit a task with the same id, the Batch service rejects the request\rwith error code TaskIdSameAsJobReleaseTask; if you are calling the REST API\rdirectly, the HTTP status code is 409 (Conflict)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Release task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Release task runs. When\rthis is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the Job Release task may run on a given\rcompute node, measured from the time the task starts. If the task does not\rcomplete within the time limit, the Batch service terminates it. The default\rvalue is 15 minutes. You may not specify a timeout longer than 15 minutes.\rIf you do, the Batch service rejects it with an error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory for the Job Release task on\rthe compute node. After this time, the Batch service may delete the task\rdirectory and all its contents. The default is infinite, i.e. the task\rdirectory will be retained until the compute node is removed or reimaged."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: "The\ruser identity under which the Job Release task runs. If omitted, the task\rruns as a non-administrative user unique to the task."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: "A\rlist of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the Job\rManager, Job Preparation and Job Release tasks). Individual tasks can\roverride an environment setting specified here by specifying the same\rsetting name with a different value."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo
          type:
            - object
          description: "The pool\ron which the Batch service runs the tasks of jobs created under this\rschedule."
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: "The ID of an existing pool. All the tasks of the job will run on the\rspecified pool. You must ensure that the pool referenced by this property\rexists. If the pool does not exist at the time the Batch service tries to\rschedule a job, no tasks for the job will run until you create a pool with\rthat id. Note that the Batch service will not reject the job request; it\rwill simply not run tasks until the pool exists. You must specify either the\rpool ID or the auto pool specification, but not both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool when the job is submitted. If auto pool creation fails, the\rBatch service moves the job to a completed state, and the pool creation\rerror is set in the job's scheduling error property. The Batch service\rmanages the lifetime (both creation and, unless keepAlive is specified,\rdeletion) of the auto pool. Any user actions that affect the lifetime of the\rauto pool while the job is active will result in unexpected behavior. You\rmust specify either the pool ID or the auto pool specification, but not\rboth."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The Batch service assigns each auto pool a unique identifier on\rcreation. To distinguish between pools created for different purposes, you\rcan specify this element to add a prefix to the ID that is assigned. The\rprefix can be up to 20 characters long."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. When the pool lifetime is jobSchedule the\rpool exists for the lifetime of the job schedule. The Batch Service creates\rthe pool when it creates the first job on the schedule. You may apply this\roption only to job schedules, not to jobs. When the pool lifetime is job the\rpool exists for the lifetime of the job to which it is dedicated. The Batch\rservice creates the pool when it creates the job. If the 'job' option is\rapplied to a job schedule, the Batch service creates a new auto pool for\revery job created on the schedule. Possible values include: 'jobSchedule',\r'job'"
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: "Whether to keep an auto pool alive after its lifetime expires. If false, the\rBatch service deletes the pool once its lifetime (as determined by the\rpoolLifetimeOption setting) expires; that is, when the job or job schedule\rcompletes. If true, the Batch service does not delete the pool\rautomatically. It is up to the user to delete auto pools created with this\roption."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: "The display name for the pool. The display name need not be unique and can\rcontain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: "The size of the virtual machines in the pool. All virtual machines in a pool\rare the same size. For information about available sizes of virtual machines\rfor Cloud Services pools (pools created with cloudServiceConfiguration), see\rSizes for Cloud Services\r(http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\rBatch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.\rFor information about available VM sizes for pools using images from the\rVirtual Machines Marketplace (pools created with\rvirtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\ror Sizes for Virtual Machines (Windows)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\rBatch supports all Azure VM sizes except STANDARD_A0 and those with premium\rstorage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: "The cloud service configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure PaaS VMs. This property\rand virtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request). This property cannot be specified if the Batch\raccount was created with its poolAllocationMode property set to\r'UserSubscription'."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool. Possible values are: 2 - OS Family 2, equivalent to Windows Server\r2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS\rFamily 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent\rto Windows Server 2016. For more information, see Azure Guest OS Releases\r(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: "The virtual machine configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure IaaS VMs. This property\rand cloudServiceConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: "A reference to the Azure Virtual Machines Marketplace image or the custom\rVirtual Machine image to use."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For example,\rCanonical or MicrosoftWindowsServer."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For example,\rUbuntuServer or WindowsServer."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: "The ARM resource identifier of the virtual machine image. Computes nodes of\rthe pool will be created using this custom image. This is of the form\r/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}\rThis property is mutually exclusive with other ImageReference properties.\rThe virtual machine image must be in the same region and subscription as the\rAzure Batch account. For information about the firewall settings for the\rBatch node agent to communicate with the Batch service see\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: Settings for the operating system disk of the Virtual Machine.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: "The type of caching to enable for the OS disk. Values are:\r\rnone - The caching mode for the disk is not enabled.\rreadOnly - The caching mode for the disk is read only.\rreadWrite - The caching mode for the disk is read and write.\r\rThe default value for caching is none. For information about the caching\roptions see:\rhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\rPossible values include: 'none', 'readOnly', 'readWrite'"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: "The SKU of the Batch node agent to be provisioned on compute nodes in the\rpool. The Batch node agent is a program that runs on each node in the pool,\rand provides the command-and-control interface between the node and the\rBatch service. There are different implementations of the node agent, known\ras SKUs, for different operating systems. You must specify a node agent SKU\rwhich matches the selected image reference. To get the list of supported\rnode agent SKUs along with their list of verified image references, see the\r'List supported node agent SKUs' operation."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: "Windows operating system settings on the virtual machine. This property must\rnot be specified if the imageReference or osDisk property specifies a Linux\rOS image."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: "The configuration for data disks attached to the comptue nodes in the pool.\rThis property must be specified if the compute nodes in the pool need to\rhave empty data disks attached to them. This cannot be updated."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: "The type of on-premises license to be used when deploying the operating\rsystem. This only applies to images that contain the Windows operating\rsystem, and should only be used when you hold valid on-premises licenses for\rthe nodes which will be deployed. If omitted, no on-premises licensing\rdiscount is applied. Values are:\r\rWindows_Server - The on-premises license is for Windows Server.\rWindows_Client - The on-premises license is for Windows Client."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: "The container configuration for the pool. If specified, setup is performed\ron each node in the pool to allow tasks to run in containers. All regular\rtasks and job manager tasks run on this pool must specify the\rcontainerSettings property, and all other tasks may specify it."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: "The collection of container image names. This is the full image reference,\ras would be specified to \"docker pull\". An image will be sourced from the\rdefault Docker registry unless the image is fully qualified with an\ralternative registry."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: "Additional private registries from which containers can be pulled. If any\rimages must be downloaded from a private registry which requires\rcredentials, then those credentials must be provided here."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool. The default value is 1. The maximum value of this setting\rdepends on the size of the compute nodes in the pool (the vmSize setting)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed across compute nodes in a pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: "How tasks are distributed across compute nodes in a pool. Values are:\r\rpack - As many tasks as possible (maxTasksPerNode) should be assigned to\reach node in the pool before any tasks are assigned to the next node in the\rpool.\rspread - Tasks should be assigned evenly across all nodes in the pool.\rPossible values include: 'spread', 'pack'"
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: "The timeout for allocation of compute nodes to the pool. This timeout\rapplies only to manual scaling; it has no effect when enableAutoScale is set\rto true. The default value is 15 minutes. The minimum value is 5 minutes. If\ryou specify a value less than 5 minutes, the Batch service rejects the\rrequest with an error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicatedNodes
          type:
            - number
          description: "The desired number of dedicated compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetLowPriorityNodes
          type:
            - number
          description: "The desired number of low-priority compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: "Whether the pool size should automatically adjust over time. If false, at\rleast one of targetDedicateNodes and targetLowPriorityNodes must be\rspecified. If true, the autoScaleFormula element is required. The pool\rautomatically resizes according to the formula. The default value is false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: "The formula for the desired number of compute nodes in the pool. This\rproperty must not be specified if enableAutoScale is set to false. It is\rrequired if enableAutoScale is set to true. The formula is checked for\rvalidity before the pool is created. If the formula is not valid, the Batch\rservice rejects the request with detailed error information."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval at which to automatically adjust the pool size according\rto the autoscale formula. The default value is 15 minutes. The minimum and\rmaximum value are 5 minutes and 168 hours respectively. If you specify a\rvalue less than 5 minutes or greater than 168 hours, the Batch service\rrejects the request with an invalid property value error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: "Whether the pool permits direct communication between nodes. Enabling\rinter-node communication limits the maximum size of the pool due to\rdeployment restrictions on the nodes of the pool. This may result in the\rpool not reaching its desired size. The default value is false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: "The ARM resource identifier of the virtual network subnet which the compute\rnodes of the pool will join. This is of the form\r/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\rThe virtual network must be in the same region and subscription as the Azure\rBatch account. The specified subnet should have enough free IP addresses to\raccommodate the number of nodes in the pool. If the subnet doesn't have\renough free IP addresses, the pool will partially allocate compute nodes,\rand a resize error will occur. The 'MicrosoftAzureBatch' service principal\rmust have the 'Classic Virtual Machine Contributor' Role-Based Access\rControl (RBAC) role for the specified VNet. The specified subnet must allow\rcommunication from the Azure Batch service to be able to schedule tasks on\rthe compute nodes. This can be verified by checking if the specified VNet\rhas any associated Network Security Groups (NSG). If communication to the\rcompute nodes in the specified subnet is denied by an NSG, then the Batch\rservice will set the state of the compute nodes to unusable. For pools\rcreated with virtualMachineConfiguration only ARM virtual networks\r('Microsoft.Network/virtualNetworks') are supported, but for pools created\rwith cloudServiceConfiguration both ARM and classic virtual networks are\rsupported. If the specified VNet has any associated Network Security Groups\r(NSG), then a few reserved system ports must be enabled for inbound\rcommunication. For pools created with a virtual machine configuration,\renable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\rWindows. For pools created with a cloud service configuration, enable ports\r10100, 20100, and 30100. Also enable outbound connections to Azure Storage\ron port 443. For more details see:\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: "The configuration for endpoints on compute nodes in the Batch pool. Pool\rendpoint configuration is only supported on pools with the\rvirtualMachineConfiguration property."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: "A list of inbound NAT pools that can be used to address specific ports on an\rindividual compute node externally. The maximum number of inbound NAT pools\rper Batch pool is 5. If the maximum number of inbound NAT pools is exceeded\rthe request fails with HTTP status code 400."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: "A task to run on each compute node as it joins the pool. The task runs when\rthe node is added to the pool or when the node is restarted."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: "The command line of the start task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the start task runs. When this is\rspecified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the\rroot of Azure Batch directories on the node) are mapped into the container,\rall task environment variables are mapped into the container, and the task\rcommand line is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional options to the container create command. These additional options\rare supplied as arguments to the \"docker create\" command, in addition to\rthose controlled by the Batch Service."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.imageName
          type:
            - string
          description: "The image to use to create the container in which the task will run. This is\rthe full image reference, as would be specified to \"docker pull\". If no tag\ris provided as part of the image name, the tag \":latest\" is used as a\rdefault."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry
          type:
            - object
          description: "The private registry which contains the container image. This setting can be\romitted if was already provided at pool creation."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: "The user identity under which the start task runs. If omitted, the task runs\ras a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: "The name of the user identity under which the task is run. The userName and\rautoUser properties are mutually exclusive; you must specify one but not\rboth."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the task is run. The userName and autoUser\rproperties are mutually exclusive; you must specify one but not both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto user Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation level of the auto user. nonAdmin - The auto user is a standard\ruser without elevated access. admin - The auto user is a user with elevated\raccess and operates with full Administrator permissions. The default value\ris nonAdmin. Possible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any tasks\ron the compute node. If true and the start task fails on a compute node, the\rBatch service retries the start task up to its maximum retry count\r(maxTaskRetryCount). If the task has still not completed successfully after\rall retries, then the Batch service marks the compute node unusable, and\rwill not schedule tasks to it. This condition can be detected via the node\rstate and failure info details. If false, the Batch service will not wait\rfor the start task to complete. In this case, other tasks can start\rexecuting on the compute node while the start task is still running; and\reven if the start task fails, new tasks will continue to be scheduled on the\rnode. The default is false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: "A list of certificates to be installed on each compute node in the pool. For\rWindows compute nodes, the Batch service installs the certificates to the\rspecified certificate store and location. For Linux compute nodes, the\rcertificates are stored in a directory inside the task working directory and\ran environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to\rquery for this location. For certificates with visibility of 'remoteUser', a\r'certs' directory is created in the user's home directory (e.g.,\r/home/{user-name}/certs) and certificates are placed in that directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: "The list of application packages to be installed on each compute node in the\rpool."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationLicenses
          type:
            - array
          description: "The list of application licenses the Batch service will make available on\reach compute node in the pool. The list of application licenses must be a\rsubset of available Batch service application licenses. If a license is\rrequested which is not supported, pool creation will fail."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: "A list of name-value pairs associated with the pool as metadata. The Batch\rservice does not assign any meaning to metadata; it is solely for the use of\ruser code."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.metadata
          type:
            - array
          description: "A list\rof name-value pairs associated with each job created under this schedule as\rmetadata. The Batch service does not assign any meaning to metadata; it is\rsolely for the use of user code."
          optional: true
        - id: jobSchedulePatchParameter.metadata
          type:
            - array
          description: "A list of name-value\rpairs associated with the job schedule as metadata. If you do not specify\rthis element, existing metadata is left unchanged."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobSchedulePatchOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobSchedulePatchOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobSchedulePatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobSchedulePatchOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobSchedulePatchOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.jobSchedulePatchOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobSchedulePatchOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobSchedulePatchOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobSchedulePatchOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function patchWithHttpOperationResponse(jobScheduleId,
        jobSchedulePatchParameter, options)
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#patch'
    id: 'azure-batch.JobSchedule#patch'
    parent: azure-batch.JobSchedule
    name: 'patch(jobScheduleId, jobSchedulePatchParameter, options, optionalCallback)'
    summary: "Updates the properties of the specified job schedule.\r\rThis replaces only the job schedule properties specified in the request. For\rexample, if the schedule property is not specified with this request, then\rthe Batch service will keep the existing schedule. Changes to a job schedule\ronly impact jobs created by the schedule after the update has taken place;\rcurrently running jobs are unaffected."
    fullName: >-
      azure-batch.JobSchedule.patch(jobScheduleId, jobSchedulePatchParameter,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobSchedulePatchParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobSchedulePatchParameter.schedule
          type:
            - object
          description: "The schedule according\rto which jobs will be created. If you do not specify this element, the\rexisting schedule is left unchanged."
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunUntil
          type:
            - date
          description: "The\rearliest time at which any job may be created under this job schedule. If\ryou do not specify a doNotRunUntil time, the schedule becomes ready to\rcreate jobs immediately."
          optional: true
        - id: jobSchedulePatchParameter.schedule.doNotRunAfter
          type:
            - date
          description: "A time\rafter which no job will be created under this job schedule. The schedule\rwill move to the completed state as soon as this deadline is past and there\ris no active job under this job schedule. If you do not specify a\rdoNotRunAfter time, and you are creating a recurring job schedule, the job\rschedule will remain active until you explicitly terminate it."
          optional: true
        - id: jobSchedulePatchParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: "The time interval, starting from the time at which the schedule indicates a\rjob should be created, within which a job must be created. If a job is not\rcreated within the startWindow interval, then the 'opportunity' is lost; no\rjob will be created until the next recurrence of the schedule. If the\rschedule is recurring, and the startWindow is longer than the recurrence\rinterval, then this is equivalent to an infinite startWindow, because the\rjob that is 'due' in one recurrenceInterval is not carried forward into the\rnext recurrence interval. The default is infinite. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: jobSchedulePatchParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval\rbetween the start times of two successive jobs under the job schedule. A job\rschedule can have at most one active job under it at any given time. Because\ra job schedule can have at most one active job under it at any given time,\rif it is time to create a new job under a job schedule, but the previous job\ris still running, the Batch service will not create the new job until the\rprevious job finishes. If the previous job does not finish within the\rstartWindow period of the new recurrenceInterval, then no new job will be\rscheduled for that interval. For recurring jobs, you should normally specify\ra jobManagerTask in the jobSpecification. If you do not use jobManagerTask,\ryou will need an external process to monitor when jobs are created, add\rtasks to the jobs and terminate the jobs ready for the next recurrence. The\rdefault is that the schedule does not recur: one job is created, within the\rstartWindow after the doNotRunUntil time, and the schedule is complete as\rsoon as that job finishes. The minimum value is 1 minute. If you specify a\rlower value, the Batch service rejects the schedule with an error; if you\rare calling the REST API directly, the HTTP status code is 400 (Bad\rRequest)."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification
          type:
            - object
          description: "The details of\rthe jobs to be created on this schedule. Updates affect only jobs that are\rstarted after the update has taken place. Any currently active job continues\rwith the older specification."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.priority
          type:
            - number
          description: "The\rpriority of jobs created under this schedule. Priority values can range from\r-1000 to 1000, with -1000 being the lowest priority and 1000 being the\rhighest priority. The default value is 0. This priority is used as the\rdefault for all jobs under the job schedule. You can update a job's priority\rafter it has been created using by using the update job API."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.displayName
          type:
            - string
          description: "The\rdisplay name for jobs created under this schedule. The name need not be\runique and can contain any Unicode characters up to a maximum length of\r1024."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: "Whether\rtasks in the job can define dependencies on each other. The default is\rfalse."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: "The action\rthe Batch service should take when all tasks in a job created under this\rschedule are in the completed state. Note that if a job contains no tasks,\rthen all tasks are considered complete. This option is therefore most\rcommonly used with a Job Manager task; if you want to use automatic job\rtermination without a Job Manager, you should initially set\ronAllTasksComplete to noAction and update the job properties to set\ronAllTasksComplete to terminateJob once you have finished adding tasks. The\rdefault is noAction. Possible values include: 'noAction', 'terminateJob'"
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: "The action the Batch service should take when any task fails in a job\rcreated under this schedule. A task is considered to have failed if it have\rfailed if has a failureInfo. A failureInfo is set if the task completes with\ra non-zero exit code after exhausting its retry count, or if there was an\rerror starting the task, for example due to a resource file download error.\rThe default is noAction. Possible values include: 'noAction',\r'performExitOptionsJobAction'"
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.constraints
          type:
            - object
          description: "The\rexecution constraints for jobs created under this schedule."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the job may run, measured from the time the\rjob is created. If the job does not complete within the time limit, the\rBatch service terminates it and any tasks that are still running. In this\rcase, the termination reason will be MaxWallClockTimeExpiry. If this\rproperty is not specified, there is no time limit on how long the job may\rrun."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times each task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try each\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries a task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rtasks. If the maximum retry count is -1, the Batch service retries tasks\rwithout limit. The default value is 0 (no retries)."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: "The details of a Job Manager task to be launched when a job is started under\rthis schedule. If the job does not specify a Job Manager task, the user must\rexplicitly add tasks to the job using the Task API. If the job does specify\ra Job Manager task, the Batch service creates the Job Manager task when the\rjob is created, and will try to schedule the Job Manager task before\rscheduling other tasks in the job."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: "A string that uniquely identifies the Job Manager task within the job. The\rID can contain any combination of alphanumeric characters including hyphens\rand underscores and cannot contain more than 64 characters."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: "The\rdisplay name of the Job Manager task. It need not be unique and can contain\rany Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Manager task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Manager task runs. If the\rpool that will run this task has containerConfiguration set, this must be\rset as well. If the pool that will run this task doesn't have\rcontainerConfiguration set, this must not be set. When this is specified,\rall directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\rAzure Batch directories on the node) are mapped into the container, all task\renvironment variables are mapped into the container, and the task command\rline is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.outputFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will upload from the compute node after\rrunning the command line. For multi-instance tasks, the files will only be\ruploaded from the compute node on which the primary task is executed."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job. If true, when the Job Manager task completes, the Batch service\rmarks the job as complete. If any tasks are still running at this time\r(other than Job Release), those tasks are terminated. If false, the\rcompletion of the Job Manager task does not affect the job status. In this\rcase, you should either use the onAllTasksComplete attribute to terminate\rthe job, or have a client or user terminate the job explicitly. An example\rof this is if the Job Manager creates a set of tasks but then takes no\rfurther role in their execution. The default value is true. If you are using\rthe onAllTasksComplete and onTaskFailure attributes to control job lifetime,\rand using the Job Manager task only to create the tasks for the job (not to\rmonitor progress), then it is important to set killJobOnCompletion to false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: "The\ruser identity under which the Job Manager task runs. If omitted, the task\rruns as a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: "Whether the Job Manager task requires exclusive use of the compute node\rwhere it runs. If true, no other tasks will run on the same compute node for\ras long as the Job Manager is running. If false, other tasks can run\rsimultaneously with the Job Manager on a compute node. The Job Manager task\rcounts normally against the node's concurrent task limit, so this is only\rrelevant if the node allows multiple concurrent tasks. The default value is\rtrue."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: "A list of application packages that the Batch service will deploy to the\rcompute node before running the command line. Application packages are\rdownloaded and deployed to a shared directory, not the task working\rdirectory. Therefore, if a referenced package is already on the compute\rnode, and is up to date, then it is not re-downloaded; the existing copy on\rthe compute node is used. If a referenced application package cannot be\rinstalled, for example because the package has been deleted or because\rdownload failed, the task fails."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: "The settings for an authentication token that the task can use to perform\rBatch service operations. If this property is set, the Batch service\rprovides the task with an authentication token which can be used to\rauthenticate Batch service operations without requiring an account access\rkey. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\rvariable. The operations that the task can carry out using the token depend\ron the settings. For example, a task can request job permissions in order to\radd other tasks to the job, or check the status of the job or of other tasks\runder the job."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources to which the token grants access. The authentication\rtoken grants access to a limited set of Batch service operations. Currently\rthe only supported value for the access property is 'job', which grants\raccess to all operations related to the job which contains the task."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobManagerTask.allowLowPriorityNode
          type:
            - boolean
          description: "Whether the Job Manager task may run on a low-priority compute node. The\rdefault value is false."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: "The Job\rPreparation task for jobs created under this schedule. If a job has a Job\rPreparation task, the Batch service will run the Job Preparation task on a\rcompute node before starting any tasks of that job on that compute node."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Preparation task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobpreparation'. No other task in the job can have the same ID as the Job\rPreparation task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobPreparationTask;\rif you are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: "The command line of the Job Preparation task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Preparation task runs.\rWhen this is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the Batch\rservice terminates it. If this is not specified, there is no time limit on\rhow long the task may run."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory on the compute node where it\rran, from the time it completes execution. After this time, the Batch\rservice may delete the task directory and all its contents. The default is\rinfinite, i.e. the task directory will be retained until the compute node is\rremoved or reimaged."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node. A Job Preparation task has completed successfully if it exits\rwith exit code 0. If true and the Job Preparation task fails on a compute\rnode, the Batch service retries the Job Preparation task up to its maximum\rretry count (as specified in the constraints element). If the task has still\rnot completed successfully after all retries, then the Batch service will\rnot schedule tasks of the job to the compute node. The compute node remains\ractive and eligible to run tasks of other jobs. If false, the Batch service\rwill not wait for the Job Preparation task to complete. In this case, other\rtasks of the job can start executing on the compute node while the Job\rPreparation task is still running; and even if the Job Preparation task\rfails, new tasks will continue to be scheduled on the node. The default\rvalue is true."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Preparation task runs. If omitted, the\rtask runs as a non-administrative user unique to the task on Windows nodes,\ror a a non-administrative user unique to the pool on Linux nodes."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. The Job Preparation task is always rerun if a compute\rnode is reimaged, or if the Job Preparation task did not complete (e.g.\rbecause the reboot occurred while the task was running). Therefore, you\rshould always write a Job Preparation task to be idempotent and to behave\rcorrectly if run multiple times. The default value is true."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: "The Job Release task for jobs created under this schedule. The primary\rpurpose of the Job Release task is to undo changes to compute nodes made by\rthe Job Preparation task. Example activities include deleting local files,\ror shutting down services that were started as part of job preparation. A\rJob Release task cannot be specified without also specifying a Job\rPreparation task for the job. The Batch service runs the Job Release task on\rthe compute nodes that have run the Job Preparation task."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: "A string that\runiquely identifies the Job Release task within the job. The ID can contain\rany combination of alphanumeric characters including hyphens and underscores\rand cannot contain more than 64 characters. If you do not specify this\rproperty, the Batch service assigns a default value of 'jobrelease'. No\rother task in the job can have the same ID as the Job Release task. If you\rtry to submit a task with the same id, the Batch service rejects the request\rwith error code TaskIdSameAsJobReleaseTask; if you are calling the REST API\rdirectly, the HTTP status code is 409 (Conflict)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Release task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Release task runs. When\rthis is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the Job Release task may run on a given\rcompute node, measured from the time the task starts. If the task does not\rcomplete within the time limit, the Batch service terminates it. The default\rvalue is 15 minutes. You may not specify a timeout longer than 15 minutes.\rIf you do, the Batch service rejects it with an error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory for the Job Release task on\rthe compute node. After this time, the Batch service may delete the task\rdirectory and all its contents. The default is infinite, i.e. the task\rdirectory will be retained until the compute node is removed or reimaged."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: "The\ruser identity under which the Job Release task runs. If omitted, the task\rruns as a non-administrative user unique to the task."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: "A\rlist of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the Job\rManager, Job Preparation and Job Release tasks). Individual tasks can\roverride an environment setting specified here by specifying the same\rsetting name with a different value."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo
          type:
            - object
          description: "The pool\ron which the Batch service runs the tasks of jobs created under this\rschedule."
        - id: jobSchedulePatchParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: "The ID of an existing pool. All the tasks of the job will run on the\rspecified pool. You must ensure that the pool referenced by this property\rexists. If the pool does not exist at the time the Batch service tries to\rschedule a job, no tasks for the job will run until you create a pool with\rthat id. Note that the Batch service will not reject the job request; it\rwill simply not run tasks until the pool exists. You must specify either the\rpool ID or the auto pool specification, but not both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool when the job is submitted. If auto pool creation fails, the\rBatch service moves the job to a completed state, and the pool creation\rerror is set in the job's scheduling error property. The Batch service\rmanages the lifetime (both creation and, unless keepAlive is specified,\rdeletion) of the auto pool. Any user actions that affect the lifetime of the\rauto pool while the job is active will result in unexpected behavior. You\rmust specify either the pool ID or the auto pool specification, but not\rboth."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The Batch service assigns each auto pool a unique identifier on\rcreation. To distinguish between pools created for different purposes, you\rcan specify this element to add a prefix to the ID that is assigned. The\rprefix can be up to 20 characters long."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. When the pool lifetime is jobSchedule the\rpool exists for the lifetime of the job schedule. The Batch Service creates\rthe pool when it creates the first job on the schedule. You may apply this\roption only to job schedules, not to jobs. When the pool lifetime is job the\rpool exists for the lifetime of the job to which it is dedicated. The Batch\rservice creates the pool when it creates the job. If the 'job' option is\rapplied to a job schedule, the Batch service creates a new auto pool for\revery job created on the schedule. Possible values include: 'jobSchedule',\r'job'"
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: "Whether to keep an auto pool alive after its lifetime expires. If false, the\rBatch service deletes the pool once its lifetime (as determined by the\rpoolLifetimeOption setting) expires; that is, when the job or job schedule\rcompletes. If true, the Batch service does not delete the pool\rautomatically. It is up to the user to delete auto pools created with this\roption."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: "The display name for the pool. The display name need not be unique and can\rcontain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: "The size of the virtual machines in the pool. All virtual machines in a pool\rare the same size. For information about available sizes of virtual machines\rfor Cloud Services pools (pools created with cloudServiceConfiguration), see\rSizes for Cloud Services\r(http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\rBatch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.\rFor information about available VM sizes for pools using images from the\rVirtual Machines Marketplace (pools created with\rvirtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\ror Sizes for Virtual Machines (Windows)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\rBatch supports all Azure VM sizes except STANDARD_A0 and those with premium\rstorage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: "The cloud service configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure PaaS VMs. This property\rand virtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request). This property cannot be specified if the Batch\raccount was created with its poolAllocationMode property set to\r'UserSubscription'."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool. Possible values are: 2 - OS Family 2, equivalent to Windows Server\r2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS\rFamily 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent\rto Windows Server 2016. For more information, see Azure Guest OS Releases\r(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: "The virtual machine configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure IaaS VMs. This property\rand cloudServiceConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: "A reference to the Azure Virtual Machines Marketplace image or the custom\rVirtual Machine image to use."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For example,\rCanonical or MicrosoftWindowsServer."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For example,\rUbuntuServer or WindowsServer."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: "The ARM resource identifier of the virtual machine image. Computes nodes of\rthe pool will be created using this custom image. This is of the form\r/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}\rThis property is mutually exclusive with other ImageReference properties.\rThe virtual machine image must be in the same region and subscription as the\rAzure Batch account. For information about the firewall settings for the\rBatch node agent to communicate with the Batch service see\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: Settings for the operating system disk of the Virtual Machine.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: "The type of caching to enable for the OS disk. Values are:\r\rnone - The caching mode for the disk is not enabled.\rreadOnly - The caching mode for the disk is read only.\rreadWrite - The caching mode for the disk is read and write.\r\rThe default value for caching is none. For information about the caching\roptions see:\rhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\rPossible values include: 'none', 'readOnly', 'readWrite'"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: "The SKU of the Batch node agent to be provisioned on compute nodes in the\rpool. The Batch node agent is a program that runs on each node in the pool,\rand provides the command-and-control interface between the node and the\rBatch service. There are different implementations of the node agent, known\ras SKUs, for different operating systems. You must specify a node agent SKU\rwhich matches the selected image reference. To get the list of supported\rnode agent SKUs along with their list of verified image references, see the\r'List supported node agent SKUs' operation."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: "Windows operating system settings on the virtual machine. This property must\rnot be specified if the imageReference or osDisk property specifies a Linux\rOS image."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: "The configuration for data disks attached to the comptue nodes in the pool.\rThis property must be specified if the compute nodes in the pool need to\rhave empty data disks attached to them. This cannot be updated."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: "The type of on-premises license to be used when deploying the operating\rsystem. This only applies to images that contain the Windows operating\rsystem, and should only be used when you hold valid on-premises licenses for\rthe nodes which will be deployed. If omitted, no on-premises licensing\rdiscount is applied. Values are:\r\rWindows_Server - The on-premises license is for Windows Server.\rWindows_Client - The on-premises license is for Windows Client."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: "The container configuration for the pool. If specified, setup is performed\ron each node in the pool to allow tasks to run in containers. All regular\rtasks and job manager tasks run on this pool must specify the\rcontainerSettings property, and all other tasks may specify it."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: "The collection of container image names. This is the full image reference,\ras would be specified to \"docker pull\". An image will be sourced from the\rdefault Docker registry unless the image is fully qualified with an\ralternative registry."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: "Additional private registries from which containers can be pulled. If any\rimages must be downloaded from a private registry which requires\rcredentials, then those credentials must be provided here."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool. The default value is 1. The maximum value of this setting\rdepends on the size of the compute nodes in the pool (the vmSize setting)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed across compute nodes in a pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: "How tasks are distributed across compute nodes in a pool. Values are:\r\rpack - As many tasks as possible (maxTasksPerNode) should be assigned to\reach node in the pool before any tasks are assigned to the next node in the\rpool.\rspread - Tasks should be assigned evenly across all nodes in the pool.\rPossible values include: 'spread', 'pack'"
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: "The timeout for allocation of compute nodes to the pool. This timeout\rapplies only to manual scaling; it has no effect when enableAutoScale is set\rto true. The default value is 15 minutes. The minimum value is 5 minutes. If\ryou specify a value less than 5 minutes, the Batch service rejects the\rrequest with an error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicatedNodes
          type:
            - number
          description: "The desired number of dedicated compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetLowPriorityNodes
          type:
            - number
          description: "The desired number of low-priority compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: "Whether the pool size should automatically adjust over time. If false, at\rleast one of targetDedicateNodes and targetLowPriorityNodes must be\rspecified. If true, the autoScaleFormula element is required. The pool\rautomatically resizes according to the formula. The default value is false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: "The formula for the desired number of compute nodes in the pool. This\rproperty must not be specified if enableAutoScale is set to false. It is\rrequired if enableAutoScale is set to true. The formula is checked for\rvalidity before the pool is created. If the formula is not valid, the Batch\rservice rejects the request with detailed error information."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval at which to automatically adjust the pool size according\rto the autoscale formula. The default value is 15 minutes. The minimum and\rmaximum value are 5 minutes and 168 hours respectively. If you specify a\rvalue less than 5 minutes or greater than 168 hours, the Batch service\rrejects the request with an invalid property value error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: "Whether the pool permits direct communication between nodes. Enabling\rinter-node communication limits the maximum size of the pool due to\rdeployment restrictions on the nodes of the pool. This may result in the\rpool not reaching its desired size. The default value is false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: "The ARM resource identifier of the virtual network subnet which the compute\rnodes of the pool will join. This is of the form\r/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\rThe virtual network must be in the same region and subscription as the Azure\rBatch account. The specified subnet should have enough free IP addresses to\raccommodate the number of nodes in the pool. If the subnet doesn't have\renough free IP addresses, the pool will partially allocate compute nodes,\rand a resize error will occur. The 'MicrosoftAzureBatch' service principal\rmust have the 'Classic Virtual Machine Contributor' Role-Based Access\rControl (RBAC) role for the specified VNet. The specified subnet must allow\rcommunication from the Azure Batch service to be able to schedule tasks on\rthe compute nodes. This can be verified by checking if the specified VNet\rhas any associated Network Security Groups (NSG). If communication to the\rcompute nodes in the specified subnet is denied by an NSG, then the Batch\rservice will set the state of the compute nodes to unusable. For pools\rcreated with virtualMachineConfiguration only ARM virtual networks\r('Microsoft.Network/virtualNetworks') are supported, but for pools created\rwith cloudServiceConfiguration both ARM and classic virtual networks are\rsupported. If the specified VNet has any associated Network Security Groups\r(NSG), then a few reserved system ports must be enabled for inbound\rcommunication. For pools created with a virtual machine configuration,\renable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\rWindows. For pools created with a cloud service configuration, enable ports\r10100, 20100, and 30100. Also enable outbound connections to Azure Storage\ron port 443. For more details see:\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: "The configuration for endpoints on compute nodes in the Batch pool. Pool\rendpoint configuration is only supported on pools with the\rvirtualMachineConfiguration property."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: "A list of inbound NAT pools that can be used to address specific ports on an\rindividual compute node externally. The maximum number of inbound NAT pools\rper Batch pool is 5. If the maximum number of inbound NAT pools is exceeded\rthe request fails with HTTP status code 400."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: "A task to run on each compute node as it joins the pool. The task runs when\rthe node is added to the pool or when the node is restarted."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: "The command line of the start task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the start task runs. When this is\rspecified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the\rroot of Azure Batch directories on the node) are mapped into the container,\rall task environment variables are mapped into the container, and the task\rcommand line is executed in the container."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional options to the container create command. These additional options\rare supplied as arguments to the \"docker create\" command, in addition to\rthose controlled by the Batch Service."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.imageName
          type:
            - string
          description: "The image to use to create the container in which the task will run. This is\rthe full image reference, as would be specified to \"docker pull\". If no tag\ris provided as part of the image name, the tag \":latest\" is used as a\rdefault."
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry
          type:
            - object
          description: "The private registry which contains the container image. This setting can be\romitted if was already provided at pool creation."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: "The user identity under which the start task runs. If omitted, the task runs\ras a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: "The name of the user identity under which the task is run. The userName and\rautoUser properties are mutually exclusive; you must specify one but not\rboth."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the task is run. The userName and autoUser\rproperties are mutually exclusive; you must specify one but not both."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto user Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation level of the auto user. nonAdmin - The auto user is a standard\ruser without elevated access. admin - The auto user is a user with elevated\raccess and operates with full Administrator permissions. The default value\ris nonAdmin. Possible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any tasks\ron the compute node. If true and the start task fails on a compute node, the\rBatch service retries the start task up to its maximum retry count\r(maxTaskRetryCount). If the task has still not completed successfully after\rall retries, then the Batch service marks the compute node unusable, and\rwill not schedule tasks to it. This condition can be detected via the node\rstate and failure info details. If false, the Batch service will not wait\rfor the start task to complete. In this case, other tasks can start\rexecuting on the compute node while the start task is still running; and\reven if the start task fails, new tasks will continue to be scheduled on the\rnode. The default is false."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: "A list of certificates to be installed on each compute node in the pool. For\rWindows compute nodes, the Batch service installs the certificates to the\rspecified certificate store and location. For Linux compute nodes, the\rcertificates are stored in a directory inside the task working directory and\ran environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to\rquery for this location. For certificates with visibility of 'remoteUser', a\r'certs' directory is created in the user's home directory (e.g.,\r/home/{user-name}/certs) and certificates are placed in that directory."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: "The list of application packages to be installed on each compute node in the\rpool."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationLicenses
          type:
            - array
          description: "The list of application licenses the Batch service will make available on\reach compute node in the pool. The list of application licenses must be a\rsubset of available Batch service application licenses. If a license is\rrequested which is not supported, pool creation will fail."
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobSchedulePatchParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: "A list of name-value pairs associated with the pool as metadata. The Batch\rservice does not assign any meaning to metadata; it is solely for the use of\ruser code."
          optional: true
        - id: jobSchedulePatchParameter.jobSpecification.metadata
          type:
            - array
          description: "A list\rof name-value pairs associated with each job created under this schedule as\rmetadata. The Batch service does not assign any meaning to metadata; it is\rsolely for the use of user code."
          optional: true
        - id: jobSchedulePatchParameter.metadata
          type:
            - array
          description: "A list of name-value\rpairs associated with the job schedule as metadata. If you do not specify\rthis element, existing metadata is left unchanged."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobSchedulePatchOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobSchedulePatchOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobSchedulePatchOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobSchedulePatchOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobSchedulePatchOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.jobSchedulePatchOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobSchedulePatchOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobSchedulePatchOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobSchedulePatchOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function patch(jobScheduleId, jobSchedulePatchParameter, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#updateWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#updateWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: >-
      updateWithHttpOperationResponse(jobScheduleId, jobScheduleUpdateParameter,
      options)
    summary: "Updates the properties of the specified job schedule.\r\rThis fully replaces all the updateable properties of the job schedule. For\rexample, if the schedule property is not specified with this request, then\rthe Batch service will remove the existing schedule. Changes to a job\rschedule only impact jobs created by the schedule after the update has taken\rplace; currently running jobs are unaffected."
    fullName: >-
      azure-batch.JobSchedule.updateWithHttpOperationResponse(jobScheduleId,
      jobScheduleUpdateParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobScheduleUpdateParameter.schedule
          type:
            - object
          description: "The schedule according\rto which jobs will be created. If you do not specify this element, it is\requivalent to passing the default schedule: that is, a single job scheduled\rto run immediately."
        - id: jobScheduleUpdateParameter.schedule.doNotRunUntil
          type:
            - date
          description: "The\rearliest time at which any job may be created under this job schedule. If\ryou do not specify a doNotRunUntil time, the schedule becomes ready to\rcreate jobs immediately."
          optional: true
        - id: jobScheduleUpdateParameter.schedule.doNotRunAfter
          type:
            - date
          description: "A time\rafter which no job will be created under this job schedule. The schedule\rwill move to the completed state as soon as this deadline is past and there\ris no active job under this job schedule. If you do not specify a\rdoNotRunAfter time, and you are creating a recurring job schedule, the job\rschedule will remain active until you explicitly terminate it."
          optional: true
        - id: jobScheduleUpdateParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: "The time interval, starting from the time at which the schedule indicates a\rjob should be created, within which a job must be created. If a job is not\rcreated within the startWindow interval, then the 'opportunity' is lost; no\rjob will be created until the next recurrence of the schedule. If the\rschedule is recurring, and the startWindow is longer than the recurrence\rinterval, then this is equivalent to an infinite startWindow, because the\rjob that is 'due' in one recurrenceInterval is not carried forward into the\rnext recurrence interval. The default is infinite. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: jobScheduleUpdateParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval\rbetween the start times of two successive jobs under the job schedule. A job\rschedule can have at most one active job under it at any given time. Because\ra job schedule can have at most one active job under it at any given time,\rif it is time to create a new job under a job schedule, but the previous job\ris still running, the Batch service will not create the new job until the\rprevious job finishes. If the previous job does not finish within the\rstartWindow period of the new recurrenceInterval, then no new job will be\rscheduled for that interval. For recurring jobs, you should normally specify\ra jobManagerTask in the jobSpecification. If you do not use jobManagerTask,\ryou will need an external process to monitor when jobs are created, add\rtasks to the jobs and terminate the jobs ready for the next recurrence. The\rdefault is that the schedule does not recur: one job is created, within the\rstartWindow after the doNotRunUntil time, and the schedule is complete as\rsoon as that job finishes. The minimum value is 1 minute. If you specify a\rlower value, the Batch service rejects the schedule with an error; if you\rare calling the REST API directly, the HTTP status code is 400 (Bad\rRequest)."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification
          type:
            - object
          description: "Details of the\rjobs to be created on this schedule. Updates affect only jobs that are\rstarted after the update has taken place. Any currently active job continues\rwith the older specification."
        - id: jobScheduleUpdateParameter.jobSpecification.priority
          type:
            - number
          description: "The\rpriority of jobs created under this schedule. Priority values can range from\r-1000 to 1000, with -1000 being the lowest priority and 1000 being the\rhighest priority. The default value is 0. This priority is used as the\rdefault for all jobs under the job schedule. You can update a job's priority\rafter it has been created using by using the update job API."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.displayName
          type:
            - string
          description: "The display name for jobs created under this schedule. The name need not be\runique and can contain any Unicode characters up to a maximum length of\r1024."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: "Whether\rtasks in the job can define dependencies on each other. The default is\rfalse."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: "The action\rthe Batch service should take when all tasks in a job created under this\rschedule are in the completed state. Note that if a job contains no tasks,\rthen all tasks are considered complete. This option is therefore most\rcommonly used with a Job Manager task; if you want to use automatic job\rtermination without a Job Manager, you should initially set\ronAllTasksComplete to noAction and update the job properties to set\ronAllTasksComplete to terminateJob once you have finished adding tasks. The\rdefault is noAction. Possible values include: 'noAction', 'terminateJob'"
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: "The action the Batch service should take when any task fails in a job\rcreated under this schedule. A task is considered to have failed if it have\rfailed if has a failureInfo. A failureInfo is set if the task completes with\ra non-zero exit code after exhausting its retry count, or if there was an\rerror starting the task, for example due to a resource file download error.\rThe default is noAction. Possible values include: 'noAction',\r'performExitOptionsJobAction'"
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.constraints
          type:
            - object
          description: The execution constraints for jobs created under this schedule.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the job may run, measured from the time the\rjob is created. If the job does not complete within the time limit, the\rBatch service terminates it and any tasks that are still running. In this\rcase, the termination reason will be MaxWallClockTimeExpiry. If this\rproperty is not specified, there is no time limit on how long the job may\rrun."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times each task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try each\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries a task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rtasks. If the maximum retry count is -1, the Batch service retries tasks\rwithout limit. The default value is 0 (no retries)."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: "The details of a Job Manager task to be launched when a job is started under\rthis schedule. If the job does not specify a Job Manager task, the user must\rexplicitly add tasks to the job using the Task API. If the job does specify\ra Job Manager task, the Batch service creates the Job Manager task when the\rjob is created, and will try to schedule the Job Manager task before\rscheduling other tasks in the job."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: "A string that\runiquely identifies the Job Manager task within the job. The ID can contain\rany combination of alphanumeric characters including hyphens and underscores\rand cannot contain more than 64 characters."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: "The\rdisplay name of the Job Manager task. It need not be unique and can contain\rany Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Manager task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Manager task runs. If the\rpool that will run this task has containerConfiguration set, this must be\rset as well. If the pool that will run this task doesn't have\rcontainerConfiguration set, this must not be set. When this is specified,\rall directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\rAzure Batch directories on the node) are mapped into the container, all task\renvironment variables are mapped into the container, and the task command\rline is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.outputFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will upload from the compute node after\rrunning the command line. For multi-instance tasks, the files will only be\ruploaded from the compute node on which the primary task is executed."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job. If true, when the Job Manager task completes, the Batch service\rmarks the job as complete. If any tasks are still running at this time\r(other than Job Release), those tasks are terminated. If false, the\rcompletion of the Job Manager task does not affect the job status. In this\rcase, you should either use the onAllTasksComplete attribute to terminate\rthe job, or have a client or user terminate the job explicitly. An example\rof this is if the Job Manager creates a set of tasks but then takes no\rfurther role in their execution. The default value is true. If you are using\rthe onAllTasksComplete and onTaskFailure attributes to control job lifetime,\rand using the Job Manager task only to create the tasks for the job (not to\rmonitor progress), then it is important to set killJobOnCompletion to false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Manager task runs. If omitted, the\rtask runs as a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: "Whether the Job Manager task requires exclusive use of the compute node\rwhere it runs. If true, no other tasks will run on the same compute node for\ras long as the Job Manager is running. If false, other tasks can run\rsimultaneously with the Job Manager on a compute node. The Job Manager task\rcounts normally against the node's concurrent task limit, so this is only\rrelevant if the node allows multiple concurrent tasks. The default value is\rtrue."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: "A list of application packages that the Batch service will deploy to the\rcompute node before running the command line. Application packages are\rdownloaded and deployed to a shared directory, not the task working\rdirectory. Therefore, if a referenced package is already on the compute\rnode, and is up to date, then it is not re-downloaded; the existing copy on\rthe compute node is used. If a referenced application package cannot be\rinstalled, for example because the package has been deleted or because\rdownload failed, the task fails."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: "The settings for an authentication token that the task can use to perform\rBatch service operations. If this property is set, the Batch service\rprovides the task with an authentication token which can be used to\rauthenticate Batch service operations without requiring an account access\rkey. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\rvariable. The operations that the task can carry out using the token depend\ron the settings. For example, a task can request job permissions in order to\radd other tasks to the job, or check the status of the job or of other tasks\runder the job."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources to which the token grants access. The authentication\rtoken grants access to a limited set of Batch service operations. Currently\rthe only supported value for the access property is 'job', which grants\raccess to all operations related to the job which contains the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.allowLowPriorityNode
          type:
            - boolean
          description: "Whether the Job Manager task may run on a low-priority compute node. The\rdefault value is false."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: "The Job\rPreparation task for jobs created under this schedule. If a job has a Job\rPreparation task, the Batch service will run the Job Preparation task on a\rcompute node before starting any tasks of that job on that compute node."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Preparation task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobpreparation'. No other task in the job can have the same ID as the Job\rPreparation task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobPreparationTask;\rif you are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: "The command line of the Job Preparation task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Preparation task runs.\rWhen this is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the Batch\rservice terminates it. If this is not specified, there is no time limit on\rhow long the task may run."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory on the compute node where it\rran, from the time it completes execution. After this time, the Batch\rservice may delete the task directory and all its contents. The default is\rinfinite, i.e. the task directory will be retained until the compute node is\rremoved or reimaged."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node. A Job Preparation task has completed successfully if it exits\rwith exit code 0. If true and the Job Preparation task fails on a compute\rnode, the Batch service retries the Job Preparation task up to its maximum\rretry count (as specified in the constraints element). If the task has still\rnot completed successfully after all retries, then the Batch service will\rnot schedule tasks of the job to the compute node. The compute node remains\ractive and eligible to run tasks of other jobs. If false, the Batch service\rwill not wait for the Job Preparation task to complete. In this case, other\rtasks of the job can start executing on the compute node while the Job\rPreparation task is still running; and even if the Job Preparation task\rfails, new tasks will continue to be scheduled on the node. The default\rvalue is true."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Preparation task runs. If omitted, the\rtask runs as a non-administrative user unique to the task on Windows nodes,\ror a a non-administrative user unique to the pool on Linux nodes."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. The Job Preparation task is always rerun if a compute\rnode is reimaged, or if the Job Preparation task did not complete (e.g.\rbecause the reboot occurred while the task was running). Therefore, you\rshould always write a Job Preparation task to be idempotent and to behave\rcorrectly if run multiple times. The default value is true."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: "The Job Release task for jobs created under this schedule. The primary\rpurpose of the Job Release task is to undo changes to compute nodes made by\rthe Job Preparation task. Example activities include deleting local files,\ror shutting down services that were started as part of job preparation. A\rJob Release task cannot be specified without also specifying a Job\rPreparation task for the job. The Batch service runs the Job Release task on\rthe compute nodes that have run the Job Preparation task."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Release task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobrelease'. No other task in the job can have the same ID as the Job\rRelease task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobReleaseTask; if\ryou are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Release task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Release task runs. When\rthis is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the Job Release task may run on a given\rcompute node, measured from the time the task starts. If the task does not\rcomplete within the time limit, the Batch service terminates it. The default\rvalue is 15 minutes. You may not specify a timeout longer than 15 minutes.\rIf you do, the Batch service rejects it with an error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory for the Job Release task on\rthe compute node. After this time, the Batch service may delete the task\rdirectory and all its contents. The default is infinite, i.e. the task\rdirectory will be retained until the compute node is removed or reimaged."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Release task runs. If omitted, the\rtask runs as a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: "A\rlist of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the Job\rManager, Job Preparation and Job Release tasks). Individual tasks can\roverride an environment setting specified here by specifying the same\rsetting name with a different value."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo
          type:
            - object
          description: "The\rpool on which the Batch service runs the tasks of jobs created under this\rschedule."
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: "The ID of an\rexisting pool. All the tasks of the job will run on the specified pool. You\rmust ensure that the pool referenced by this property exists. If the pool\rdoes not exist at the time the Batch service tries to schedule a job, no\rtasks for the job will run until you create a pool with that id. Note that\rthe Batch service will not reject the job request; it will simply not run\rtasks until the pool exists. You must specify either the pool ID or the auto\rpool specification, but not both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool when the job is submitted. If auto pool creation fails, the\rBatch service moves the job to a completed state, and the pool creation\rerror is set in the job's scheduling error property. The Batch service\rmanages the lifetime (both creation and, unless keepAlive is specified,\rdeletion) of the auto pool. Any user actions that affect the lifetime of the\rauto pool while the job is active will result in unexpected behavior. You\rmust specify either the pool ID or the auto pool specification, but not\rboth."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The Batch service assigns each auto pool a unique identifier on\rcreation. To distinguish between pools created for different purposes, you\rcan specify this element to add a prefix to the ID that is assigned. The\rprefix can be up to 20 characters long."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. When the pool lifetime is jobSchedule the\rpool exists for the lifetime of the job schedule. The Batch Service creates\rthe pool when it creates the first job on the schedule. You may apply this\roption only to job schedules, not to jobs. When the pool lifetime is job the\rpool exists for the lifetime of the job to which it is dedicated. The Batch\rservice creates the pool when it creates the job. If the 'job' option is\rapplied to a job schedule, the Batch service creates a new auto pool for\revery job created on the schedule. Possible values include: 'jobSchedule',\r'job'"
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: "Whether to keep an auto pool alive after its lifetime expires. If false, the\rBatch service deletes the pool once its lifetime (as determined by the\rpoolLifetimeOption setting) expires; that is, when the job or job schedule\rcompletes. If true, the Batch service does not delete the pool\rautomatically. It is up to the user to delete auto pools created with this\roption."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: "The display name for the pool. The display name need not be unique and can\rcontain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: "The size of the virtual machines in the pool. All virtual machines in a pool\rare the same size. For information about available sizes of virtual machines\rfor Cloud Services pools (pools created with cloudServiceConfiguration), see\rSizes for Cloud Services\r(http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\rBatch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.\rFor information about available VM sizes for pools using images from the\rVirtual Machines Marketplace (pools created with\rvirtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\ror Sizes for Virtual Machines (Windows)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\rBatch supports all Azure VM sizes except STANDARD_A0 and those with premium\rstorage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: "The cloud service configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure PaaS VMs. This property\rand virtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request). This property cannot be specified if the Batch\raccount was created with its poolAllocationMode property set to\r'UserSubscription'."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool. Possible values are: 2 - OS Family 2, equivalent to Windows Server\r2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS\rFamily 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent\rto Windows Server 2016. For more information, see Azure Guest OS Releases\r(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: "The virtual machine configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure IaaS VMs. This property\rand cloudServiceConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: "A reference to the Azure Virtual Machines Marketplace image or the custom\rVirtual Machine image to use."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For example,\rCanonical or MicrosoftWindowsServer."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For example,\rUbuntuServer or WindowsServer."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: "The ARM resource identifier of the virtual machine image. Computes nodes of\rthe pool will be created using this custom image. This is of the form\r/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}\rThis property is mutually exclusive with other ImageReference properties.\rThe virtual machine image must be in the same region and subscription as the\rAzure Batch account. For information about the firewall settings for the\rBatch node agent to communicate with the Batch service see\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: Settings for the operating system disk of the Virtual Machine.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: "The type of caching to enable for the OS disk. Values are:\r\rnone - The caching mode for the disk is not enabled.\rreadOnly - The caching mode for the disk is read only.\rreadWrite - The caching mode for the disk is read and write.\r\rThe default value for caching is none. For information about the caching\roptions see:\rhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\rPossible values include: 'none', 'readOnly', 'readWrite'"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: "The SKU of the Batch node agent to be provisioned on compute nodes in the\rpool. The Batch node agent is a program that runs on each node in the pool,\rand provides the command-and-control interface between the node and the\rBatch service. There are different implementations of the node agent, known\ras SKUs, for different operating systems. You must specify a node agent SKU\rwhich matches the selected image reference. To get the list of supported\rnode agent SKUs along with their list of verified image references, see the\r'List supported node agent SKUs' operation."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: "Windows operating system settings on the virtual machine. This property must\rnot be specified if the imageReference or osDisk property specifies a Linux\rOS image."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: "The configuration for data disks attached to the comptue nodes in the pool.\rThis property must be specified if the compute nodes in the pool need to\rhave empty data disks attached to them. This cannot be updated."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: "The type of on-premises license to be used when deploying the operating\rsystem. This only applies to images that contain the Windows operating\rsystem, and should only be used when you hold valid on-premises licenses for\rthe nodes which will be deployed. If omitted, no on-premises licensing\rdiscount is applied. Values are:\r\rWindows_Server - The on-premises license is for Windows Server.\rWindows_Client - The on-premises license is for Windows Client."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: "The container configuration for the pool. If specified, setup is performed\ron each node in the pool to allow tasks to run in containers. All regular\rtasks and job manager tasks run on this pool must specify the\rcontainerSettings property, and all other tasks may specify it."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: "The collection of container image names. This is the full image reference,\ras would be specified to \"docker pull\". An image will be sourced from the\rdefault Docker registry unless the image is fully qualified with an\ralternative registry."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: "Additional private registries from which containers can be pulled. If any\rimages must be downloaded from a private registry which requires\rcredentials, then those credentials must be provided here."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool. The default value is 1. The maximum value of this setting\rdepends on the size of the compute nodes in the pool (the vmSize setting)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed across compute nodes in a pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: "How tasks are distributed across compute nodes in a pool. Values are:\r\rpack - As many tasks as possible (maxTasksPerNode) should be assigned to\reach node in the pool before any tasks are assigned to the next node in the\rpool.\rspread - Tasks should be assigned evenly across all nodes in the pool.\rPossible values include: 'spread', 'pack'"
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: "The timeout for allocation of compute nodes to the pool. This timeout\rapplies only to manual scaling; it has no effect when enableAutoScale is set\rto true. The default value is 15 minutes. The minimum value is 5 minutes. If\ryou specify a value less than 5 minutes, the Batch service rejects the\rrequest with an error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicatedNodes
          type:
            - number
          description: "The desired number of dedicated compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetLowPriorityNodes
          type:
            - number
          description: "The desired number of low-priority compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: "Whether the pool size should automatically adjust over time. If false, at\rleast one of targetDedicateNodes and targetLowPriorityNodes must be\rspecified. If true, the autoScaleFormula element is required. The pool\rautomatically resizes according to the formula. The default value is false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: "The formula for the desired number of compute nodes in the pool. This\rproperty must not be specified if enableAutoScale is set to false. It is\rrequired if enableAutoScale is set to true. The formula is checked for\rvalidity before the pool is created. If the formula is not valid, the Batch\rservice rejects the request with detailed error information."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval at which to automatically adjust the pool size according\rto the autoscale formula. The default value is 15 minutes. The minimum and\rmaximum value are 5 minutes and 168 hours respectively. If you specify a\rvalue less than 5 minutes or greater than 168 hours, the Batch service\rrejects the request with an invalid property value error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: "Whether the pool permits direct communication between nodes. Enabling\rinter-node communication limits the maximum size of the pool due to\rdeployment restrictions on the nodes of the pool. This may result in the\rpool not reaching its desired size. The default value is false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: "The ARM resource identifier of the virtual network subnet which the compute\rnodes of the pool will join. This is of the form\r/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\rThe virtual network must be in the same region and subscription as the Azure\rBatch account. The specified subnet should have enough free IP addresses to\raccommodate the number of nodes in the pool. If the subnet doesn't have\renough free IP addresses, the pool will partially allocate compute nodes,\rand a resize error will occur. The 'MicrosoftAzureBatch' service principal\rmust have the 'Classic Virtual Machine Contributor' Role-Based Access\rControl (RBAC) role for the specified VNet. The specified subnet must allow\rcommunication from the Azure Batch service to be able to schedule tasks on\rthe compute nodes. This can be verified by checking if the specified VNet\rhas any associated Network Security Groups (NSG). If communication to the\rcompute nodes in the specified subnet is denied by an NSG, then the Batch\rservice will set the state of the compute nodes to unusable. For pools\rcreated with virtualMachineConfiguration only ARM virtual networks\r('Microsoft.Network/virtualNetworks') are supported, but for pools created\rwith cloudServiceConfiguration both ARM and classic virtual networks are\rsupported. If the specified VNet has any associated Network Security Groups\r(NSG), then a few reserved system ports must be enabled for inbound\rcommunication. For pools created with a virtual machine configuration,\renable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\rWindows. For pools created with a cloud service configuration, enable ports\r10100, 20100, and 30100. Also enable outbound connections to Azure Storage\ron port 443. For more details see:\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: "The configuration for endpoints on compute nodes in the Batch pool. Pool\rendpoint configuration is only supported on pools with the\rvirtualMachineConfiguration property."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: "A list of inbound NAT pools that can be used to address specific ports on an\rindividual compute node externally. The maximum number of inbound NAT pools\rper Batch pool is 5. If the maximum number of inbound NAT pools is exceeded\rthe request fails with HTTP status code 400."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: "A task to run on each compute node as it joins the pool. The task runs when\rthe node is added to the pool or when the node is restarted."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: "The command line of the start task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the start task runs. When this is\rspecified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the\rroot of Azure Batch directories on the node) are mapped into the container,\rall task environment variables are mapped into the container, and the task\rcommand line is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional options to the container create command. These additional options\rare supplied as arguments to the \"docker create\" command, in addition to\rthose controlled by the Batch Service."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.imageName
          type:
            - string
          description: "The image to use to create the container in which the task will run. This is\rthe full image reference, as would be specified to \"docker pull\". If no tag\ris provided as part of the image name, the tag \":latest\" is used as a\rdefault."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry
          type:
            - object
          description: "The private registry which contains the container image. This setting can be\romitted if was already provided at pool creation."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: "The user identity under which the start task runs. If omitted, the task runs\ras a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: "The name of the user identity under which the task is run. The userName and\rautoUser properties are mutually exclusive; you must specify one but not\rboth."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the task is run. The userName and autoUser\rproperties are mutually exclusive; you must specify one but not both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto user Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation level of the auto user. nonAdmin - The auto user is a standard\ruser without elevated access. admin - The auto user is a user with elevated\raccess and operates with full Administrator permissions. The default value\ris nonAdmin. Possible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any tasks\ron the compute node. If true and the start task fails on a compute node, the\rBatch service retries the start task up to its maximum retry count\r(maxTaskRetryCount). If the task has still not completed successfully after\rall retries, then the Batch service marks the compute node unusable, and\rwill not schedule tasks to it. This condition can be detected via the node\rstate and failure info details. If false, the Batch service will not wait\rfor the start task to complete. In this case, other tasks can start\rexecuting on the compute node while the start task is still running; and\reven if the start task fails, new tasks will continue to be scheduled on the\rnode. The default is false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: "A list of certificates to be installed on each compute node in the pool. For\rWindows compute nodes, the Batch service installs the certificates to the\rspecified certificate store and location. For Linux compute nodes, the\rcertificates are stored in a directory inside the task working directory and\ran environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to\rquery for this location. For certificates with visibility of 'remoteUser', a\r'certs' directory is created in the user's home directory (e.g.,\r/home/{user-name}/certs) and certificates are placed in that directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: "The list of application packages to be installed on each compute node in the\rpool."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationLicenses
          type:
            - array
          description: "The list of application licenses the Batch service will make available on\reach compute node in the pool. The list of application licenses must be a\rsubset of available Batch service application licenses. If a license is\rrequested which is not supported, pool creation will fail."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: "A list of name-value pairs associated with the pool as metadata. The Batch\rservice does not assign any meaning to metadata; it is solely for the use of\ruser code."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.metadata
          type:
            - array
          description: "A list\rof name-value pairs associated with each job created under this schedule as\rmetadata. The Batch service does not assign any meaning to metadata; it is\rsolely for the use of user code."
          optional: true
        - id: jobScheduleUpdateParameter.metadata
          type:
            - array
          description: "A list of name-value\rpairs associated with the job schedule as metadata. If you do not specify\rthis element, it takes the default value of an empty list; in effect, any\rexisting metadata is deleted."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleUpdateOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleUpdateOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleUpdateOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateWithHttpOperationResponse(jobScheduleId,
        jobScheduleUpdateParameter, options)
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#update'
    id: 'azure-batch.JobSchedule#update'
    parent: azure-batch.JobSchedule
    name: >-
      update(jobScheduleId, jobScheduleUpdateParameter, options,
      optionalCallback)
    summary: "Updates the properties of the specified job schedule.\r\rThis fully replaces all the updateable properties of the job schedule. For\rexample, if the schedule property is not specified with this request, then\rthe Batch service will remove the existing schedule. Changes to a job\rschedule only impact jobs created by the schedule after the update has taken\rplace; currently running jobs are unaffected."
    fullName: >-
      azure-batch.JobSchedule.update(jobScheduleId, jobScheduleUpdateParameter,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to update.
        - id: jobScheduleUpdateParameter
          type:
            - object
          description: The parameters for the request.
        - id: jobScheduleUpdateParameter.schedule
          type:
            - object
          description: "The schedule according\rto which jobs will be created. If you do not specify this element, it is\requivalent to passing the default schedule: that is, a single job scheduled\rto run immediately."
        - id: jobScheduleUpdateParameter.schedule.doNotRunUntil
          type:
            - date
          description: "The\rearliest time at which any job may be created under this job schedule. If\ryou do not specify a doNotRunUntil time, the schedule becomes ready to\rcreate jobs immediately."
          optional: true
        - id: jobScheduleUpdateParameter.schedule.doNotRunAfter
          type:
            - date
          description: "A time\rafter which no job will be created under this job schedule. The schedule\rwill move to the completed state as soon as this deadline is past and there\ris no active job under this job schedule. If you do not specify a\rdoNotRunAfter time, and you are creating a recurring job schedule, the job\rschedule will remain active until you explicitly terminate it."
          optional: true
        - id: jobScheduleUpdateParameter.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: "The time interval, starting from the time at which the schedule indicates a\rjob should be created, within which a job must be created. If a job is not\rcreated within the startWindow interval, then the 'opportunity' is lost; no\rjob will be created until the next recurrence of the schedule. If the\rschedule is recurring, and the startWindow is longer than the recurrence\rinterval, then this is equivalent to an infinite startWindow, because the\rjob that is 'due' in one recurrenceInterval is not carried forward into the\rnext recurrence interval. The default is infinite. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: jobScheduleUpdateParameter.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval\rbetween the start times of two successive jobs under the job schedule. A job\rschedule can have at most one active job under it at any given time. Because\ra job schedule can have at most one active job under it at any given time,\rif it is time to create a new job under a job schedule, but the previous job\ris still running, the Batch service will not create the new job until the\rprevious job finishes. If the previous job does not finish within the\rstartWindow period of the new recurrenceInterval, then no new job will be\rscheduled for that interval. For recurring jobs, you should normally specify\ra jobManagerTask in the jobSpecification. If you do not use jobManagerTask,\ryou will need an external process to monitor when jobs are created, add\rtasks to the jobs and terminate the jobs ready for the next recurrence. The\rdefault is that the schedule does not recur: one job is created, within the\rstartWindow after the doNotRunUntil time, and the schedule is complete as\rsoon as that job finishes. The minimum value is 1 minute. If you specify a\rlower value, the Batch service rejects the schedule with an error; if you\rare calling the REST API directly, the HTTP status code is 400 (Bad\rRequest)."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification
          type:
            - object
          description: "Details of the\rjobs to be created on this schedule. Updates affect only jobs that are\rstarted after the update has taken place. Any currently active job continues\rwith the older specification."
        - id: jobScheduleUpdateParameter.jobSpecification.priority
          type:
            - number
          description: "The\rpriority of jobs created under this schedule. Priority values can range from\r-1000 to 1000, with -1000 being the lowest priority and 1000 being the\rhighest priority. The default value is 0. This priority is used as the\rdefault for all jobs under the job schedule. You can update a job's priority\rafter it has been created using by using the update job API."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.displayName
          type:
            - string
          description: "The display name for jobs created under this schedule. The name need not be\runique and can contain any Unicode characters up to a maximum length of\r1024."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: "Whether\rtasks in the job can define dependencies on each other. The default is\rfalse."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onAllTasksComplete
          type:
            - string
          description: "The action\rthe Batch service should take when all tasks in a job created under this\rschedule are in the completed state. Note that if a job contains no tasks,\rthen all tasks are considered complete. This option is therefore most\rcommonly used with a Job Manager task; if you want to use automatic job\rtermination without a Job Manager, you should initially set\ronAllTasksComplete to noAction and update the job properties to set\ronAllTasksComplete to terminateJob once you have finished adding tasks. The\rdefault is noAction. Possible values include: 'noAction', 'terminateJob'"
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.onTaskFailure
          type:
            - string
          description: "The action the Batch service should take when any task fails in a job\rcreated under this schedule. A task is considered to have failed if it have\rfailed if has a failureInfo. A failureInfo is set if the task completes with\ra non-zero exit code after exhausting its retry count, or if there was an\rerror starting the task, for example due to a resource file download error.\rThe default is noAction. Possible values include: 'noAction',\r'performExitOptionsJobAction'"
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.constraints
          type:
            - object
          description: The execution constraints for jobs created under this schedule.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the job may run, measured from the time the\rjob is created. If the job does not complete within the time limit, the\rBatch service terminates it and any tasks that are still running. In this\rcase, the termination reason will be MaxWallClockTimeExpiry. If this\rproperty is not specified, there is no time limit on how long the job may\rrun."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times each task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try each\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries a task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rtasks. If the maximum retry count is -1, the Batch service retries tasks\rwithout limit. The default value is 0 (no retries)."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask
          type:
            - object
          description: "The details of a Job Manager task to be launched when a job is started under\rthis schedule. If the job does not specify a Job Manager task, the user must\rexplicitly add tasks to the job using the Task API. If the job does specify\ra Job Manager task, the Batch service creates the Job Manager task when the\rjob is created, and will try to schedule the Job Manager task before\rscheduling other tasks in the job."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobManagerTask.id
          type:
            - string
          description: "A string that\runiquely identifies the Job Manager task within the job. The ID can contain\rany combination of alphanumeric characters including hyphens and underscores\rand cannot contain more than 64 characters."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: "The\rdisplay name of the Job Manager task. It need not be unique and can contain\rany Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Manager task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Manager task runs. If the\rpool that will run this task has containerConfiguration set, this must be\rset as well. If the pool that will run this task doesn't have\rcontainerConfiguration set, this must not be set. When this is specified,\rall directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\rAzure Batch directories on the node) are mapped into the container, all task\renvironment variables are mapped into the container, and the task command\rline is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.outputFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will upload from the compute node after\rrunning the command line. For multi-instance tasks, the files will only be\ruploaded from the compute node on which the primary task is executed."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Manager task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job. If true, when the Job Manager task completes, the Batch service\rmarks the job as complete. If any tasks are still running at this time\r(other than Job Release), those tasks are terminated. If false, the\rcompletion of the Job Manager task does not affect the job status. In this\rcase, you should either use the onAllTasksComplete attribute to terminate\rthe job, or have a client or user terminate the job explicitly. An example\rof this is if the Job Manager creates a set of tasks but then takes no\rfurther role in their execution. The default value is true. If you are using\rthe onAllTasksComplete and onTaskFailure attributes to control job lifetime,\rand using the Job Manager task only to create the tasks for the job (not to\rmonitor progress), then it is important to set killJobOnCompletion to false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Manager task runs. If omitted, the\rtask runs as a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: "Whether the Job Manager task requires exclusive use of the compute node\rwhere it runs. If true, no other tasks will run on the same compute node for\ras long as the Job Manager is running. If false, other tasks can run\rsimultaneously with the Job Manager on a compute node. The Job Manager task\rcounts normally against the node's concurrent task limit, so this is only\rrelevant if the node allows multiple concurrent tasks. The default value is\rtrue."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: "A list of application packages that the Batch service will deploy to the\rcompute node before running the command line. Application packages are\rdownloaded and deployed to a shared directory, not the task working\rdirectory. Therefore, if a referenced package is already on the compute\rnode, and is up to date, then it is not re-downloaded; the existing copy on\rthe compute node is used. If a referenced application package cannot be\rinstalled, for example because the package has been deleted or because\rdownload failed, the task fails."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: "The settings for an authentication token that the task can use to perform\rBatch service operations. If this property is set, the Batch service\rprovides the task with an authentication token which can be used to\rauthenticate Batch service operations without requiring an account access\rkey. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\rvariable. The operations that the task can carry out using the token depend\ron the settings. For example, a task can request job permissions in order to\radd other tasks to the job, or check the status of the job or of other tasks\runder the job."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources to which the token grants access. The authentication\rtoken grants access to a limited set of Batch service operations. Currently\rthe only supported value for the access property is 'job', which grants\raccess to all operations related to the job which contains the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobManagerTask.allowLowPriorityNode
          type:
            - boolean
          description: "Whether the Job Manager task may run on a low-priority compute node. The\rdefault value is false."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask
          type:
            - object
          description: "The Job\rPreparation task for jobs created under this schedule. If a job has a Job\rPreparation task, the Batch service will run the Job Preparation task on a\rcompute node before starting any tasks of that job on that compute node."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Preparation task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobpreparation'. No other task in the job can have the same ID as the Job\rPreparation task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobPreparationTask;\rif you are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: "The command line of the Job Preparation task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Preparation task runs.\rWhen this is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: >-
            A list of environment variable settings for the Job Preparation
            task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the Batch\rservice terminates it. If this is not specified, there is no time limit on\rhow long the task may run."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory on the compute node where it\rran, from the time it completes execution. After this time, the Batch\rservice may delete the task directory and all its contents. The default is\rinfinite, i.e. the task directory will be retained until the compute node is\rremoved or reimaged."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node. A Job Preparation task has completed successfully if it exits\rwith exit code 0. If true and the Job Preparation task fails on a compute\rnode, the Batch service retries the Job Preparation task up to its maximum\rretry count (as specified in the constraints element). If the task has still\rnot completed successfully after all retries, then the Batch service will\rnot schedule tasks of the job to the compute node. The compute node remains\ractive and eligible to run tasks of other jobs. If false, the Batch service\rwill not wait for the Job Preparation task to complete. In this case, other\rtasks of the job can start executing on the compute node while the Job\rPreparation task is still running; and even if the Job Preparation task\rfails, new tasks will continue to be scheduled on the node. The default\rvalue is true."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Preparation task runs. If omitted, the\rtask runs as a non-administrative user unique to the task on Windows nodes,\ror a a non-administrative user unique to the pool on Linux nodes."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. The Job Preparation task is always rerun if a compute\rnode is reimaged, or if the Job Preparation task did not complete (e.g.\rbecause the reboot occurred while the task was running). Therefore, you\rshould always write a Job Preparation task to be idempotent and to behave\rcorrectly if run multiple times. The default value is true."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask
          type:
            - object
          description: "The Job Release task for jobs created under this schedule. The primary\rpurpose of the Job Release task is to undo changes to compute nodes made by\rthe Job Preparation task. Example activities include deleting local files,\ror shutting down services that were started as part of job preparation. A\rJob Release task cannot be specified without also specifying a Job\rPreparation task for the job. The Batch service runs the Job Release task on\rthe compute nodes that have run the Job Preparation task."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Release task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobrelease'. No other task in the job can have the same ID as the Job\rRelease task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobReleaseTask; if\ryou are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: "The\rcommand line of the Job Release task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the Job Release task runs. When\rthis is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: "A\rlist of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the Job Release task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the Job Release task may run on a given\rcompute node, measured from the time the task starts. If the task does not\rcomplete within the time limit, the Batch service terminates it. The default\rvalue is 15 minutes. You may not specify a timeout longer than 15 minutes.\rIf you do, the Batch service rejects it with an error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory for the Job Release task on\rthe compute node. After this time, the Batch service may delete the task\rdirectory and all its contents. The default is infinite, i.e. the task\rdirectory will be retained until the compute node is removed or reimaged."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: "The user identity under which the Job Release task runs. If omitted, the\rtask runs as a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: "A\rlist of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the Job\rManager, Job Preparation and Job Release tasks). Individual tasks can\roverride an environment setting specified here by specifying the same\rsetting name with a different value."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo
          type:
            - object
          description: "The\rpool on which the Batch service runs the tasks of jobs created under this\rschedule."
        - id: jobScheduleUpdateParameter.jobSpecification.poolInfo.poolId
          type:
            - string
          description: "The ID of an\rexisting pool. All the tasks of the job will run on the specified pool. You\rmust ensure that the pool referenced by this property exists. If the pool\rdoes not exist at the time the Batch service tries to schedule a job, no\rtasks for the job will run until you create a pool with that id. Note that\rthe Batch service will not reject the job request; it will simply not run\rtasks until the pool exists. You must specify either the pool ID or the auto\rpool specification, but not both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool when the job is submitted. If auto pool creation fails, the\rBatch service moves the job to a completed state, and the pool creation\rerror is set in the job's scheduling error property. The Batch service\rmanages the lifetime (both creation and, unless keepAlive is specified,\rdeletion) of the auto pool. Any user actions that affect the lifetime of the\rauto pool while the job is active will result in unexpected behavior. You\rmust specify either the pool ID or the auto pool specification, but not\rboth."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The Batch service assigns each auto pool a unique identifier on\rcreation. To distinguish between pools created for different purposes, you\rcan specify this element to add a prefix to the ID that is assigned. The\rprefix can be up to 20 characters long."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. When the pool lifetime is jobSchedule the\rpool exists for the lifetime of the job schedule. The Batch Service creates\rthe pool when it creates the first job on the schedule. You may apply this\roption only to job schedules, not to jobs. When the pool lifetime is job the\rpool exists for the lifetime of the job to which it is dedicated. The Batch\rservice creates the pool when it creates the job. If the 'job' option is\rapplied to a job schedule, the Batch service creates a new auto pool for\revery job created on the schedule. Possible values include: 'jobSchedule',\r'job'"
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: "Whether to keep an auto pool alive after its lifetime expires. If false, the\rBatch service deletes the pool once its lifetime (as determined by the\rpoolLifetimeOption setting) expires; that is, when the job or job schedule\rcompletes. If true, the Batch service does not delete the pool\rautomatically. It is up to the user to delete auto pools created with this\roption."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: The pool specification for the auto pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: "The display name for the pool. The display name need not be unique and can\rcontain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: "The size of the virtual machines in the pool. All virtual machines in a pool\rare the same size. For information about available sizes of virtual machines\rfor Cloud Services pools (pools created with cloudServiceConfiguration), see\rSizes for Cloud Services\r(http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\rBatch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.\rFor information about available VM sizes for pools using images from the\rVirtual Machines Marketplace (pools created with\rvirtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\ror Sizes for Virtual Machines (Windows)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\rBatch supports all Azure VM sizes except STANDARD_A0 and those with premium\rstorage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: "The cloud service configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure PaaS VMs. This property\rand virtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request). This property cannot be specified if the Batch\raccount was created with its poolAllocationMode property set to\r'UserSubscription'."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool. Possible values are: 2 - OS Family 2, equivalent to Windows Server\r2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS\rFamily 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent\rto Windows Server 2016. For more information, see Azure Guest OS Releases\r(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: "The virtual machine configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure IaaS VMs. This property\rand cloudServiceConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: "A reference to the Azure Virtual Machines Marketplace image or the custom\rVirtual Machine image to use."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For example,\rCanonical or MicrosoftWindowsServer."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For example,\rUbuntuServer or WindowsServer."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: "The ARM resource identifier of the virtual machine image. Computes nodes of\rthe pool will be created using this custom image. This is of the form\r/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}\rThis property is mutually exclusive with other ImageReference properties.\rThe virtual machine image must be in the same region and subscription as the\rAzure Batch account. For information about the firewall settings for the\rBatch node agent to communicate with the Batch service see\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: Settings for the operating system disk of the Virtual Machine.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: "The type of caching to enable for the OS disk. Values are:\r\rnone - The caching mode for the disk is not enabled.\rreadOnly - The caching mode for the disk is read only.\rreadWrite - The caching mode for the disk is read and write.\r\rThe default value for caching is none. For information about the caching\roptions see:\rhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\rPossible values include: 'none', 'readOnly', 'readWrite'"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: "The SKU of the Batch node agent to be provisioned on compute nodes in the\rpool. The Batch node agent is a program that runs on each node in the pool,\rand provides the command-and-control interface between the node and the\rBatch service. There are different implementations of the node agent, known\ras SKUs, for different operating systems. You must specify a node agent SKU\rwhich matches the selected image reference. To get the list of supported\rnode agent SKUs along with their list of verified image references, see the\r'List supported node agent SKUs' operation."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: "Windows operating system settings on the virtual machine. This property must\rnot be specified if the imageReference or osDisk property specifies a Linux\rOS image."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: "The configuration for data disks attached to the comptue nodes in the pool.\rThis property must be specified if the compute nodes in the pool need to\rhave empty data disks attached to them. This cannot be updated."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: "The type of on-premises license to be used when deploying the operating\rsystem. This only applies to images that contain the Windows operating\rsystem, and should only be used when you hold valid on-premises licenses for\rthe nodes which will be deployed. If omitted, no on-premises licensing\rdiscount is applied. Values are:\r\rWindows_Server - The on-premises license is for Windows Server.\rWindows_Client - The on-premises license is for Windows Client."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: "The container configuration for the pool. If specified, setup is performed\ron each node in the pool to allow tasks to run in containers. All regular\rtasks and job manager tasks run on this pool must specify the\rcontainerSettings property, and all other tasks may specify it."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: "The collection of container image names. This is the full image reference,\ras would be specified to \"docker pull\". An image will be sourced from the\rdefault Docker registry unless the image is fully qualified with an\ralternative registry."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: "Additional private registries from which containers can be pulled. If any\rimages must be downloaded from a private registry which requires\rcredentials, then those credentials must be provided here."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool. The default value is 1. The maximum value of this setting\rdepends on the size of the compute nodes in the pool (the vmSize setting)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed across compute nodes in a pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: "How tasks are distributed across compute nodes in a pool. Values are:\r\rpack - As many tasks as possible (maxTasksPerNode) should be assigned to\reach node in the pool before any tasks are assigned to the next node in the\rpool.\rspread - Tasks should be assigned evenly across all nodes in the pool.\rPossible values include: 'spread', 'pack'"
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: "The timeout for allocation of compute nodes to the pool. This timeout\rapplies only to manual scaling; it has no effect when enableAutoScale is set\rto true. The default value is 15 minutes. The minimum value is 5 minutes. If\ryou specify a value less than 5 minutes, the Batch service rejects the\rrequest with an error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicatedNodes
          type:
            - number
          description: "The desired number of dedicated compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.targetLowPriorityNodes
          type:
            - number
          description: "The desired number of low-priority compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: "Whether the pool size should automatically adjust over time. If false, at\rleast one of targetDedicateNodes and targetLowPriorityNodes must be\rspecified. If true, the autoScaleFormula element is required. The pool\rautomatically resizes according to the formula. The default value is false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: "The formula for the desired number of compute nodes in the pool. This\rproperty must not be specified if enableAutoScale is set to false. It is\rrequired if enableAutoScale is set to true. The formula is checked for\rvalidity before the pool is created. If the formula is not valid, the Batch\rservice rejects the request with detailed error information."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval at which to automatically adjust the pool size according\rto the autoscale formula. The default value is 15 minutes. The minimum and\rmaximum value are 5 minutes and 168 hours respectively. If you specify a\rvalue less than 5 minutes or greater than 168 hours, the Batch service\rrejects the request with an invalid property value error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: "Whether the pool permits direct communication between nodes. Enabling\rinter-node communication limits the maximum size of the pool due to\rdeployment restrictions on the nodes of the pool. This may result in the\rpool not reaching its desired size. The default value is false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: "The ARM resource identifier of the virtual network subnet which the compute\rnodes of the pool will join. This is of the form\r/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\rThe virtual network must be in the same region and subscription as the Azure\rBatch account. The specified subnet should have enough free IP addresses to\raccommodate the number of nodes in the pool. If the subnet doesn't have\renough free IP addresses, the pool will partially allocate compute nodes,\rand a resize error will occur. The 'MicrosoftAzureBatch' service principal\rmust have the 'Classic Virtual Machine Contributor' Role-Based Access\rControl (RBAC) role for the specified VNet. The specified subnet must allow\rcommunication from the Azure Batch service to be able to schedule tasks on\rthe compute nodes. This can be verified by checking if the specified VNet\rhas any associated Network Security Groups (NSG). If communication to the\rcompute nodes in the specified subnet is denied by an NSG, then the Batch\rservice will set the state of the compute nodes to unusable. For pools\rcreated with virtualMachineConfiguration only ARM virtual networks\r('Microsoft.Network/virtualNetworks') are supported, but for pools created\rwith cloudServiceConfiguration both ARM and classic virtual networks are\rsupported. If the specified VNet has any associated Network Security Groups\r(NSG), then a few reserved system ports must be enabled for inbound\rcommunication. For pools created with a virtual machine configuration,\renable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\rWindows. For pools created with a cloud service configuration, enable ports\r10100, 20100, and 30100. Also enable outbound connections to Azure Storage\ron port 443. For more details see:\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: "The configuration for endpoints on compute nodes in the Batch pool. Pool\rendpoint configuration is only supported on pools with the\rvirtualMachineConfiguration property."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: "A list of inbound NAT pools that can be used to address specific ports on an\rindividual compute node externally. The maximum number of inbound NAT pools\rper Batch pool is 5. If the maximum number of inbound NAT pools is exceeded\rthe request fails with HTTP status code 400."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: "A task to run on each compute node as it joins the pool. The task runs when\rthe node is added to the pool or when the node is restarted."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: "The command line of the start task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the start task runs. When this is\rspecified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the\rroot of Azure Batch directories on the node) are mapped into the container,\rall task environment variables are mapped into the container, and the task\rcommand line is executed in the container."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional options to the container create command. These additional options\rare supplied as arguments to the \"docker create\" command, in addition to\rthose controlled by the Batch Service."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.imageName
          type:
            - string
          description: "The image to use to create the container in which the task will run. This is\rthe full image reference, as would be specified to \"docker pull\". If no tag\ris provided as part of the image name, the tag \":latest\" is used as a\rdefault."
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry
          type:
            - object
          description: "The private registry which contains the container image. This setting can be\romitted if was already provided at pool creation."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: "The user identity under which the start task runs. If omitted, the task runs\ras a non-administrative user unique to the task."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: "The name of the user identity under which the task is run. The userName and\rautoUser properties are mutually exclusive; you must specify one but not\rboth."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the task is run. The userName and autoUser\rproperties are mutually exclusive; you must specify one but not both."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto user Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation level of the auto user. nonAdmin - The auto user is a standard\ruser without elevated access. admin - The auto user is a user with elevated\raccess and operates with full Administrator permissions. The default value\ris nonAdmin. Possible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any tasks\ron the compute node. If true and the start task fails on a compute node, the\rBatch service retries the start task up to its maximum retry count\r(maxTaskRetryCount). If the task has still not completed successfully after\rall retries, then the Batch service marks the compute node unusable, and\rwill not schedule tasks to it. This condition can be detected via the node\rstate and failure info details. If false, the Batch service will not wait\rfor the start task to complete. In this case, other tasks can start\rexecuting on the compute node while the start task is still running; and\reven if the start task fails, new tasks will continue to be scheduled on the\rnode. The default is false."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: "A list of certificates to be installed on each compute node in the pool. For\rWindows compute nodes, the Batch service installs the certificates to the\rspecified certificate store and location. For Linux compute nodes, the\rcertificates are stored in a directory inside the task working directory and\ran environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to\rquery for this location. For certificates with visibility of 'remoteUser', a\r'certs' directory is created in the user's home directory (e.g.,\r/home/{user-name}/certs) and certificates are placed in that directory."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: "The list of application packages to be installed on each compute node in the\rpool."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationLicenses
          type:
            - array
          description: "The list of application licenses the Batch service will make available on\reach compute node in the pool. The list of application licenses must be a\rsubset of available Batch service application licenses. If a license is\rrequested which is not supported, pool creation will fail."
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            jobScheduleUpdateParameter.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: "A list of name-value pairs associated with the pool as metadata. The Batch\rservice does not assign any meaning to metadata; it is solely for the use of\ruser code."
          optional: true
        - id: jobScheduleUpdateParameter.jobSpecification.metadata
          type:
            - array
          description: "A list\rof name-value pairs associated with each job created under this schedule as\rmetadata. The Batch service does not assign any meaning to metadata; it is\rsolely for the use of user code."
          optional: true
        - id: jobScheduleUpdateParameter.metadata
          type:
            - array
          description: "A list of name-value\rpairs associated with the job schedule as metadata. If you do not specify\rthis element, it takes the default value of an empty list; in effect, any\rexisting metadata is deleted."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleUpdateOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleUpdateOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleUpdateOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function update(jobScheduleId, jobScheduleUpdateParameter, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#disableWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#disableWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'disableWithHttpOperationResponse(jobScheduleId, options)'
    summary: "Disables a job schedule.\r\rNo new jobs will be created until the job schedule is enabled again."
    fullName: >-
      azure-batch.JobSchedule.disableWithHttpOperationResponse(jobScheduleId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to disable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDisableOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.jobScheduleDisableOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleDisableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleDisableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleDisableOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleDisableOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleDisableOptions.ifNoneMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleDisableOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.jobScheduleDisableOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function disableWithHttpOperationResponse(jobScheduleId, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#disable'
    id: 'azure-batch.JobSchedule#disable'
    parent: azure-batch.JobSchedule
    name: 'disable(jobScheduleId, options, optionalCallback)'
    summary: "Disables a job schedule.\r\rNo new jobs will be created until the job schedule is enabled again."
    fullName: 'azure-batch.JobSchedule.disable(jobScheduleId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to disable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleDisableOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.jobScheduleDisableOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleDisableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleDisableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleDisableOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleDisableOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleDisableOptions.ifNoneMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleDisableOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.jobScheduleDisableOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function disable(jobScheduleId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#enableWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#enableWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'enableWithHttpOperationResponse(jobScheduleId, options)'
    summary: Enables a job schedule.
    fullName: >-
      azure-batch.JobSchedule.enableWithHttpOperationResponse(jobScheduleId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to enable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleEnableOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleEnableOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleEnableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleEnableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleEnableOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleEnableOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleEnableOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleEnableOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleEnableOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function enableWithHttpOperationResponse(jobScheduleId, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#enable'
    id: 'azure-batch.JobSchedule#enable'
    parent: azure-batch.JobSchedule
    name: 'enable(jobScheduleId, options, optionalCallback)'
    summary: Enables a job schedule.
    fullName: 'azure-batch.JobSchedule.enable(jobScheduleId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to enable.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleEnableOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleEnableOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleEnableOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleEnableOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleEnableOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleEnableOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleEnableOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleEnableOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.jobScheduleEnableOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function enable(jobScheduleId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#terminateWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#terminateWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'terminateWithHttpOperationResponse(jobScheduleId, options)'
    summary: Terminates a job schedule.
    fullName: >-
      azure-batch.JobSchedule.terminateWithHttpOperationResponse(jobScheduleId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to terminates.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleTerminateOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.jobScheduleTerminateOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.jobScheduleTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleTerminateOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function terminateWithHttpOperationResponse(jobScheduleId, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#terminate'
    id: 'azure-batch.JobSchedule#terminate'
    parent: azure-batch.JobSchedule
    name: 'terminate(jobScheduleId, options, optionalCallback)'
    summary: Terminates a job schedule.
    fullName: >-
      azure-batch.JobSchedule.terminate(jobScheduleId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobScheduleId
          type:
            - string
          description: The ID of the job schedule to terminates.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleTerminateOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.jobScheduleTerminateOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.jobScheduleTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleTerminateOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag\rvalue associated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.jobScheduleTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function terminate(jobScheduleId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#addWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#addWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'addWithHttpOperationResponse(cloudJobSchedule, options)'
    summary: Adds a job schedule to the specified account.
    fullName: >-
      azure-batch.JobSchedule.addWithHttpOperationResponse(cloudJobSchedule,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: cloudJobSchedule
          type:
            - object
          description: The job schedule to be added.
        - id: cloudJobSchedule.id
          type:
            - string
          description: "A string that uniquely identifies the\rschedule within the account. The ID can contain any combination of\ralphanumeric characters including hyphens and underscores, and cannot\rcontain more than 64 characters. The ID is case-preserving and\rcase-insensitive (that is, you may not have two IDs within an account that\rdiffer only by case)."
        - id: cloudJobSchedule.displayName
          type:
            - string
          description: "The display name for the\rschedule. The display name need not be unique and can contain any Unicode\rcharacters up to a maximum length of 1024."
          optional: true
        - id: cloudJobSchedule.schedule
          type:
            - object
          description: "The schedule according to which\rjobs will be created."
        - id: cloudJobSchedule.schedule.doNotRunUntil
          type:
            - date
          description: "The earliest time at\rwhich any job may be created under this job schedule. If you do not specify\ra doNotRunUntil time, the schedule becomes ready to create jobs immediately."
          optional: true
        - id: cloudJobSchedule.schedule.doNotRunAfter
          type:
            - date
          description: "A time after which\rno job will be created under this job schedule. The schedule will move to\rthe completed state as soon as this deadline is past and there is no active\rjob under this job schedule. If you do not specify a doNotRunAfter time, and\ryou are creating a recurring job schedule, the job schedule will remain\ractive until you explicitly terminate it."
          optional: true
        - id: cloudJobSchedule.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: "The time\rinterval, starting from the time at which the schedule indicates a job\rshould be created, within which a job must be created. If a job is not\rcreated within the startWindow interval, then the 'opportunity' is lost; no\rjob will be created until the next recurrence of the schedule. If the\rschedule is recurring, and the startWindow is longer than the recurrence\rinterval, then this is equivalent to an infinite startWindow, because the\rjob that is 'due' in one recurrenceInterval is not carried forward into the\rnext recurrence interval. The default is infinite. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: cloudJobSchedule.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: "The\rtime interval between the start times of two successive jobs under the job\rschedule. A job schedule can have at most one active job under it at any\rgiven time. Because a job schedule can have at most one active job under it\rat any given time, if it is time to create a new job under a job schedule,\rbut the previous job is still running, the Batch service will not create the\rnew job until the previous job finishes. If the previous job does not finish\rwithin the startWindow period of the new recurrenceInterval, then no new job\rwill be scheduled for that interval. For recurring jobs, you should normally\rspecify a jobManagerTask in the jobSpecification. If you do not use\rjobManagerTask, you will need an external process to monitor when jobs are\rcreated, add tasks to the jobs and terminate the jobs ready for the next\rrecurrence. The default is that the schedule does not recur: one job is\rcreated, within the startWindow after the doNotRunUntil time, and the\rschedule is complete as soon as that job finishes. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: cloudJobSchedule.jobSpecification
          type:
            - object
          description: "The details of the jobs to\rbe created on this schedule."
        - id: cloudJobSchedule.jobSpecification.priority
          type:
            - number
          description: "The priority of\rjobs created under this schedule. Priority values can range from -1000 to\r1000, with -1000 being the lowest priority and 1000 being the highest\rpriority. The default value is 0. This priority is used as the default for\rall jobs under the job schedule. You can update a job's priority after it\rhas been created using by using the update job API."
          optional: true
        - id: cloudJobSchedule.jobSpecification.displayName
          type:
            - string
          description: "The display\rname for jobs created under this schedule. The name need not be unique and\rcan contain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: cloudJobSchedule.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: "Whether tasks in the job can define dependencies on each other. The default\ris false."
          optional: true
        - id: cloudJobSchedule.jobSpecification.onAllTasksComplete
          type:
            - string
          description: "The\raction the Batch service should take when all tasks in a job created under\rthis schedule are in the completed state. Note that if a job contains no\rtasks, then all tasks are considered complete. This option is therefore most\rcommonly used with a Job Manager task; if you want to use automatic job\rtermination without a Job Manager, you should initially set\ronAllTasksComplete to noAction and update the job properties to set\ronAllTasksComplete to terminateJob once you have finished adding tasks. The\rdefault is noAction. Possible values include: 'noAction', 'terminateJob'"
          optional: true
        - id: cloudJobSchedule.jobSpecification.onTaskFailure
          type:
            - string
          description: "The action\rthe Batch service should take when any task fails in a job created under\rthis schedule. A task is considered to have failed if it have failed if has\ra failureInfo. A failureInfo is set if the task completes with a non-zero\rexit code after exhausting its retry count, or if there was an error\rstarting the task, for example due to a resource file download error. The\rdefault is noAction. Possible values include: 'noAction',\r'performExitOptionsJobAction'"
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints
          type:
            - object
          description: "The\rexecution constraints for jobs created under this schedule."
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum\relapsed time that the job may run, measured from the time the job is\rcreated. If the job does not complete within the time limit, the Batch\rservice terminates it and any tasks that are still running. In this case,\rthe termination reason will be MaxWallClockTimeExpiry. If this property is\rnot specified, there is no time limit on how long the job may run."
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: "The\rmaximum number of times each task may be retried. The Batch service retries\ra task if its exit code is nonzero. Note that this value specifically\rcontrols the number of retries. The Batch service will try each task once,\rand may then retry up to this limit. For example, if the maximum retry count\ris 3, Batch tries a task up to 4 times (one initial try and 3 retries). If\rthe maximum retry count is 0, the Batch service does not retry tasks. If the\rmaximum retry count is -1, the Batch service retries tasks without limit.\rThe default value is 0 (no retries)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask
          type:
            - object
          description: "The\rdetails of a Job Manager task to be launched when a job is started under\rthis schedule. If the job does not specify a Job Manager task, the user must\rexplicitly add tasks to the job using the Task API. If the job does specify\ra Job Manager task, the Batch service creates the Job Manager task when the\rjob is created, and will try to schedule the Job Manager task before\rscheduling other tasks in the job."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Manager task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: "The display\rname of the Job Manager task. It need not be unique and can contain any\rUnicode characters up to a maximum length of 1024."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: "The command line of the Job Manager task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.containerSettings
          type:
            - object
          description: "The\rsettings for the container under which the Job Manager task runs. If the\rpool that will run this task has containerConfiguration set, this must be\rset as well. If the pool that will run this task doesn't have\rcontainerConfiguration set, this must not be set. When this is specified,\rall directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\rAzure Batch directories on the node) are mapped into the container, all task\renvironment variables are mapped into the container, and the task command\rline is executed in the container."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will download to the compute node before\rrunning the command line. Files listed under this element are located in the\rtask's working directory."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.outputFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will upload from the compute node after running\rthe command line. For multi-instance tasks, the files will only be uploaded\rfrom the compute node on which the primary task is executed."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: "A\rlist of environment variable settings for the Job Manager task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: "Constraints\rthat apply to the Job Manager task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job. If true, when the Job Manager task completes, the Batch service\rmarks the job as complete. If any tasks are still running at this time\r(other than Job Release), those tasks are terminated. If false, the\rcompletion of the Job Manager task does not affect the job status. In this\rcase, you should either use the onAllTasksComplete attribute to terminate\rthe job, or have a client or user terminate the job explicitly. An example\rof this is if the Job Manager creates a set of tasks but then takes no\rfurther role in their execution. The default value is true. If you are using\rthe onAllTasksComplete and onTaskFailure attributes to control job lifetime,\rand using the Job Manager task only to create the tasks for the job (not to\rmonitor progress), then it is important to set killJobOnCompletion to false."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: "The user\ridentity under which the Job Manager task runs. If omitted, the task runs as\ra non-administrative user unique to the task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: "Whether the\rJob Manager task requires exclusive use of the compute node where it runs.\rIf true, no other tasks will run on the same compute node for as long as the\rJob Manager is running. If false, other tasks can run simultaneously with\rthe Job Manager on a compute node. The Job Manager task counts normally\ragainst the node's concurrent task limit, so this is only relevant if the\rnode allows multiple concurrent tasks. The default value is true."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: "A list of application packages that the Batch service will deploy to the\rcompute node before running the command line. Application packages are\rdownloaded and deployed to a shared directory, not the task working\rdirectory. Therefore, if a referenced package is already on the compute\rnode, and is up to date, then it is not re-downloaded; the existing copy on\rthe compute node is used. If a referenced application package cannot be\rinstalled, for example because the package has been deleted or because\rdownload failed, the task fails."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: "The settings for an authentication token that the task can use to perform\rBatch service operations. If this property is set, the Batch service\rprovides the task with an authentication token which can be used to\rauthenticate Batch service operations without requiring an account access\rkey. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\rvariable. The operations that the task can carry out using the token depend\ron the settings. For example, a task can request job permissions in order to\radd other tasks to the job, or check the status of the job or of other tasks\runder the job."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources to which the token grants access. The authentication\rtoken grants access to a limited set of Batch service operations. Currently\rthe only supported value for the access property is 'job', which grants\raccess to all operations related to the job which contains the task."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.allowLowPriorityNode
          type:
            - boolean
          description: "Whether the Job Manager task may run on a low-priority compute node. The\rdefault value is false."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask
          type:
            - object
          description: "The\rJob Preparation task for jobs created under this schedule. If a job has a\rJob Preparation task, the Batch service will run the Job Preparation task on\ra compute node before starting any tasks of that job on that compute node."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: "A\rstring that uniquely identifies the Job Preparation task within the job. The\rID can contain any combination of alphanumeric characters including hyphens\rand underscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobpreparation'. No other task in the job can have the same ID as the Job\rPreparation task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobPreparationTask;\rif you are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: "The command\rline of the Job Preparation task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.containerSettings
          type:
            - object
          description: "The\rsettings for the container under which the Job Preparation task runs. When\rthis is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: "A list\rof files that the Batch service will download to the compute node before\rrunning the command line. Files listed under this element are located in the\rtask's working directory."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: "A\rlist of environment variable settings for the Job Preparation task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the Batch\rservice terminates it. If this is not specified, there is no time limit on\rhow long the task may run."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory on the compute node where it\rran, from the time it completes execution. After this time, the Batch\rservice may delete the task directory and all its contents. The default is\rinfinite, i.e. the task directory will be retained until the compute node is\rremoved or reimaged."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node. A Job Preparation task has completed successfully if it exits\rwith exit code 0. If true and the Job Preparation task fails on a compute\rnode, the Batch service retries the Job Preparation task up to its maximum\rretry count (as specified in the constraints element). If the task has still\rnot completed successfully after all retries, then the Batch service will\rnot schedule tasks of the job to the compute node. The compute node remains\ractive and eligible to run tasks of other jobs. If false, the Batch service\rwill not wait for the Job Preparation task to complete. In this case, other\rtasks of the job can start executing on the compute node while the Job\rPreparation task is still running; and even if the Job Preparation task\rfails, new tasks will continue to be scheduled on the node. The default\rvalue is true."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: "The user\ridentity under which the Job Preparation task runs. If omitted, the task\rruns as a non-administrative user unique to the task on Windows nodes, or a\ra non-administrative user unique to the pool on Linux nodes."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. The Job Preparation task is always rerun if a compute\rnode is reimaged, or if the Job Preparation task did not complete (e.g.\rbecause the reboot occurred while the task was running). Therefore, you\rshould always write a Job Preparation task to be idempotent and to behave\rcorrectly if run multiple times. The default value is true."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask
          type:
            - object
          description: "The Job\rRelease task for jobs created under this schedule. The primary purpose of\rthe Job Release task is to undo changes to compute nodes made by the Job\rPreparation task. Example activities include deleting local files, or\rshutting down services that were started as part of job preparation. A Job\rRelease task cannot be specified without also specifying a Job Preparation\rtask for the job. The Batch service runs the Job Release task on the compute\rnodes that have run the Job Preparation task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: "A\rstring that uniquely identifies the Job Release task within the job. The ID\rcan contain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobrelease'. No other task in the job can have the same ID as the Job\rRelease task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobReleaseTask; if\ryou are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: "The command line of the Job Release task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.containerSettings
          type:
            - object
          description: "The\rsettings for the container under which the Job Release task runs. When this\ris specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR\r(the root of Azure Batch directories on the node) are mapped into the\rcontainer, all task environment variables are mapped into the container, and\rthe task command line is executed in the container."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will download to the compute node before\rrunning the command line. Files listed under this element are located in the\rtask's working directory."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: "A\rlist of environment variable settings for the Job Release task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The\rmaximum elapsed time that the Job Release task may run on a given compute\rnode, measured from the time the task starts. If the task does not complete\rwithin the time limit, the Batch service terminates it. The default value is\r15 minutes. You may not specify a timeout longer than 15 minutes. If you do,\rthe Batch service rejects it with an error; if you are calling the REST API\rdirectly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum\rtime to retain the task directory for the Job Release task on the compute\rnode. After this time, the Batch service may delete the task directory and\rall its contents. The default is infinite, i.e. the task directory will be\rretained until the compute node is removed or reimaged."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: "The user\ridentity under which the Job Release task runs. If omitted, the task runs as\ra non-administrative user unique to the task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: "A list of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the Job\rManager, Job Preparation and Job Release tasks). Individual tasks can\roverride an environment setting specified here by specifying the same\rsetting name with a different value."
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo
          type:
            - object
          description: "The pool on which\rthe Batch service runs the tasks of jobs created under this schedule."
        - id: cloudJobSchedule.jobSpecification.poolInfo.poolId
          type:
            - string
          description: "The ID\rof an existing pool. All the tasks of the job will run on the specified\rpool. You must ensure that the pool referenced by this property exists. If\rthe pool does not exist at the time the Batch service tries to schedule a\rjob, no tasks for the job will run until you create a pool with that id.\rNote that the Batch service will not reject the job request; it will simply\rnot run tasks until the pool exists. You must specify either the pool ID or\rthe auto pool specification, but not both."
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool when the job is submitted. If auto pool creation fails, the\rBatch service moves the job to a completed state, and the pool creation\rerror is set in the job's scheduling error property. The Batch service\rmanages the lifetime (both creation and, unless keepAlive is specified,\rdeletion) of the auto pool. Any user actions that affect the lifetime of the\rauto pool while the job is active will result in unexpected behavior. You\rmust specify either the pool ID or the auto pool specification, but not\rboth."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The Batch service assigns each auto pool a unique identifier on\rcreation. To distinguish between pools created for different purposes, you\rcan specify this element to add a prefix to the ID that is assigned. The\rprefix can be up to 20 characters long."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. When the pool lifetime is jobSchedule the\rpool exists for the lifetime of the job schedule. The Batch Service creates\rthe pool when it creates the first job on the schedule. You may apply this\roption only to job schedules, not to jobs. When the pool lifetime is job the\rpool exists for the lifetime of the job to which it is dedicated. The Batch\rservice creates the pool when it creates the job. If the 'job' option is\rapplied to a job schedule, the Batch service creates a new auto pool for\revery job created on the schedule. Possible values include: 'jobSchedule',\r'job'"
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: "Whether to keep an auto pool alive after its lifetime expires. If false, the\rBatch service deletes the pool once its lifetime (as determined by the\rpoolLifetimeOption setting) expires; that is, when the job or job schedule\rcompletes. If true, the Batch service does not delete the pool\rautomatically. It is up to the user to delete auto pools created with this\roption."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: "The\rpool specification for the auto pool."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: "The display name for the pool. The display name need not be unique and can\rcontain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: "The size of the virtual machines in the pool. All virtual machines in a pool\rare the same size. For information about available sizes of virtual machines\rfor Cloud Services pools (pools created with cloudServiceConfiguration), see\rSizes for Cloud Services\r(http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\rBatch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.\rFor information about available VM sizes for pools using images from the\rVirtual Machines Marketplace (pools created with\rvirtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\ror Sizes for Virtual Machines (Windows)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\rBatch supports all Azure VM sizes except STANDARD_A0 and those with premium\rstorage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: "The cloud service configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure PaaS VMs. This property\rand virtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request). This property cannot be specified if the Batch\raccount was created with its poolAllocationMode property set to\r'UserSubscription'."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool. Possible values are: 2 - OS Family 2, equivalent to Windows Server\r2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS\rFamily 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent\rto Windows Server 2016. For more information, see Azure Guest OS Releases\r(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: "The virtual machine configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure IaaS VMs. This property\rand cloudServiceConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: "A reference to the Azure Virtual Machines Marketplace image or the custom\rVirtual Machine image to use."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For example,\rCanonical or MicrosoftWindowsServer."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For example,\rUbuntuServer or WindowsServer."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: "The ARM resource identifier of the virtual machine image. Computes nodes of\rthe pool will be created using this custom image. This is of the form\r/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}\rThis property is mutually exclusive with other ImageReference properties.\rThe virtual machine image must be in the same region and subscription as the\rAzure Batch account. For information about the firewall settings for the\rBatch node agent to communicate with the Batch service see\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: Settings for the operating system disk of the Virtual Machine.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: "The type of caching to enable for the OS disk. Values are:\r\rnone - The caching mode for the disk is not enabled.\rreadOnly - The caching mode for the disk is read only.\rreadWrite - The caching mode for the disk is read and write.\r\rThe default value for caching is none. For information about the caching\roptions see:\rhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\rPossible values include: 'none', 'readOnly', 'readWrite'"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: "The SKU of the Batch node agent to be provisioned on compute nodes in the\rpool. The Batch node agent is a program that runs on each node in the pool,\rand provides the command-and-control interface between the node and the\rBatch service. There are different implementations of the node agent, known\ras SKUs, for different operating systems. You must specify a node agent SKU\rwhich matches the selected image reference. To get the list of supported\rnode agent SKUs along with their list of verified image references, see the\r'List supported node agent SKUs' operation."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: "Windows operating system settings on the virtual machine. This property must\rnot be specified if the imageReference or osDisk property specifies a Linux\rOS image."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: "The configuration for data disks attached to the comptue nodes in the pool.\rThis property must be specified if the compute nodes in the pool need to\rhave empty data disks attached to them. This cannot be updated."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: "The type of on-premises license to be used when deploying the operating\rsystem. This only applies to images that contain the Windows operating\rsystem, and should only be used when you hold valid on-premises licenses for\rthe nodes which will be deployed. If omitted, no on-premises licensing\rdiscount is applied. Values are:\r\rWindows_Server - The on-premises license is for Windows Server.\rWindows_Client - The on-premises license is for Windows Client."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: "The container configuration for the pool. If specified, setup is performed\ron each node in the pool to allow tasks to run in containers. All regular\rtasks and job manager tasks run on this pool must specify the\rcontainerSettings property, and all other tasks may specify it."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: "The collection of container image names. This is the full image reference,\ras would be specified to \"docker pull\". An image will be sourced from the\rdefault Docker registry unless the image is fully qualified with an\ralternative registry."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: "Additional private registries from which containers can be pulled. If any\rimages must be downloaded from a private registry which requires\rcredentials, then those credentials must be provided here."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool. The default value is 1. The maximum value of this setting\rdepends on the size of the compute nodes in the pool (the vmSize setting)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed across compute nodes in a pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: "How tasks are distributed across compute nodes in a pool. Values are:\r\rpack - As many tasks as possible (maxTasksPerNode) should be assigned to\reach node in the pool before any tasks are assigned to the next node in the\rpool.\rspread - Tasks should be assigned evenly across all nodes in the pool.\rPossible values include: 'spread', 'pack'"
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: "The timeout for allocation of compute nodes to the pool. This timeout\rapplies only to manual scaling; it has no effect when enableAutoScale is set\rto true. The default value is 15 minutes. The minimum value is 5 minutes. If\ryou specify a value less than 5 minutes, the Batch service rejects the\rrequest with an error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicatedNodes
          type:
            - number
          description: "The desired number of dedicated compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.targetLowPriorityNodes
          type:
            - number
          description: "The desired number of low-priority compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: "Whether the pool size should automatically adjust over time. If false, at\rleast one of targetDedicateNodes and targetLowPriorityNodes must be\rspecified. If true, the autoScaleFormula element is required. The pool\rautomatically resizes according to the formula. The default value is false."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: "The formula for the desired number of compute nodes in the pool. This\rproperty must not be specified if enableAutoScale is set to false. It is\rrequired if enableAutoScale is set to true. The formula is checked for\rvalidity before the pool is created. If the formula is not valid, the Batch\rservice rejects the request with detailed error information."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval at which to automatically adjust the pool size according\rto the autoscale formula. The default value is 15 minutes. The minimum and\rmaximum value are 5 minutes and 168 hours respectively. If you specify a\rvalue less than 5 minutes or greater than 168 hours, the Batch service\rrejects the request with an invalid property value error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: "Whether the pool permits direct communication between nodes. Enabling\rinter-node communication limits the maximum size of the pool due to\rdeployment restrictions on the nodes of the pool. This may result in the\rpool not reaching its desired size. The default value is false."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: "The ARM resource identifier of the virtual network subnet which the compute\rnodes of the pool will join. This is of the form\r/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\rThe virtual network must be in the same region and subscription as the Azure\rBatch account. The specified subnet should have enough free IP addresses to\raccommodate the number of nodes in the pool. If the subnet doesn't have\renough free IP addresses, the pool will partially allocate compute nodes,\rand a resize error will occur. The 'MicrosoftAzureBatch' service principal\rmust have the 'Classic Virtual Machine Contributor' Role-Based Access\rControl (RBAC) role for the specified VNet. The specified subnet must allow\rcommunication from the Azure Batch service to be able to schedule tasks on\rthe compute nodes. This can be verified by checking if the specified VNet\rhas any associated Network Security Groups (NSG). If communication to the\rcompute nodes in the specified subnet is denied by an NSG, then the Batch\rservice will set the state of the compute nodes to unusable. For pools\rcreated with virtualMachineConfiguration only ARM virtual networks\r('Microsoft.Network/virtualNetworks') are supported, but for pools created\rwith cloudServiceConfiguration both ARM and classic virtual networks are\rsupported. If the specified VNet has any associated Network Security Groups\r(NSG), then a few reserved system ports must be enabled for inbound\rcommunication. For pools created with a virtual machine configuration,\renable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\rWindows. For pools created with a cloud service configuration, enable ports\r10100, 20100, and 30100. Also enable outbound connections to Azure Storage\ron port 443. For more details see:\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: "The configuration for endpoints on compute nodes in the Batch pool. Pool\rendpoint configuration is only supported on pools with the\rvirtualMachineConfiguration property."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: "A list of inbound NAT pools that can be used to address specific ports on an\rindividual compute node externally. The maximum number of inbound NAT pools\rper Batch pool is 5. If the maximum number of inbound NAT pools is exceeded\rthe request fails with HTTP status code 400."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: "A task to run on each compute node as it joins the pool. The task runs when\rthe node is added to the pool or when the node is restarted."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: "The command line of the start task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the start task runs. When this is\rspecified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the\rroot of Azure Batch directories on the node) are mapped into the container,\rall task environment variables are mapped into the container, and the task\rcommand line is executed in the container."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional options to the container create command. These additional options\rare supplied as arguments to the \"docker create\" command, in addition to\rthose controlled by the Batch Service."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.imageName
          type:
            - string
          description: "The image to use to create the container in which the task will run. This is\rthe full image reference, as would be specified to \"docker pull\". If no tag\ris provided as part of the image name, the tag \":latest\" is used as a\rdefault."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry
          type:
            - object
          description: "The private registry which contains the container image. This setting can be\romitted if was already provided at pool creation."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: "The user identity under which the start task runs. If omitted, the task runs\ras a non-administrative user unique to the task."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: "The name of the user identity under which the task is run. The userName and\rautoUser properties are mutually exclusive; you must specify one but not\rboth."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the task is run. The userName and autoUser\rproperties are mutually exclusive; you must specify one but not both."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto user Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation level of the auto user. nonAdmin - The auto user is a standard\ruser without elevated access. admin - The auto user is a user with elevated\raccess and operates with full Administrator permissions. The default value\ris nonAdmin. Possible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any tasks\ron the compute node. If true and the start task fails on a compute node, the\rBatch service retries the start task up to its maximum retry count\r(maxTaskRetryCount). If the task has still not completed successfully after\rall retries, then the Batch service marks the compute node unusable, and\rwill not schedule tasks to it. This condition can be detected via the node\rstate and failure info details. If false, the Batch service will not wait\rfor the start task to complete. In this case, other tasks can start\rexecuting on the compute node while the start task is still running; and\reven if the start task fails, new tasks will continue to be scheduled on the\rnode. The default is false."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: "A list of certificates to be installed on each compute node in the pool. For\rWindows compute nodes, the Batch service installs the certificates to the\rspecified certificate store and location. For Linux compute nodes, the\rcertificates are stored in a directory inside the task working directory and\ran environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to\rquery for this location. For certificates with visibility of 'remoteUser', a\r'certs' directory is created in the user's home directory (e.g.,\r/home/{user-name}/certs) and certificates are placed in that directory."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: "The list of application packages to be installed on each compute node in the\rpool."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationLicenses
          type:
            - array
          description: "The list of application licenses the Batch service will make available on\reach compute node in the pool. The list of application licenses must be a\rsubset of available Batch service application licenses. If a license is\rrequested which is not supported, pool creation will fail."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: "A list of name-value pairs associated with the pool as metadata. The Batch\rservice does not assign any meaning to metadata; it is solely for the use of\ruser code."
          optional: true
        - id: cloudJobSchedule.jobSpecification.metadata
          type:
            - array
          description: "A list of\rname-value pairs associated with each job created under this schedule as\rmetadata. The Batch service does not assign any meaning to metadata; it is\rsolely for the use of user code."
          optional: true
        - id: cloudJobSchedule.metadata
          type:
            - array
          description: "A list of name-value pairs\rassociated with the schedule as metadata. The Batch service does not assign\rany meaning to metadata; it is solely for the use of user code."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleAddOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleAddOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleAddOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleAddOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addWithHttpOperationResponse(cloudJobSchedule, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#add'
    id: 'azure-batch.JobSchedule#add'
    parent: azure-batch.JobSchedule
    name: 'add(cloudJobSchedule, options, optionalCallback)'
    summary: Adds a job schedule to the specified account.
    fullName: 'azure-batch.JobSchedule.add(cloudJobSchedule, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: cloudJobSchedule
          type:
            - object
          description: The job schedule to be added.
        - id: cloudJobSchedule.id
          type:
            - string
          description: "A string that uniquely identifies the\rschedule within the account. The ID can contain any combination of\ralphanumeric characters including hyphens and underscores, and cannot\rcontain more than 64 characters. The ID is case-preserving and\rcase-insensitive (that is, you may not have two IDs within an account that\rdiffer only by case)."
        - id: cloudJobSchedule.displayName
          type:
            - string
          description: "The display name for the\rschedule. The display name need not be unique and can contain any Unicode\rcharacters up to a maximum length of 1024."
          optional: true
        - id: cloudJobSchedule.schedule
          type:
            - object
          description: "The schedule according to which\rjobs will be created."
        - id: cloudJobSchedule.schedule.doNotRunUntil
          type:
            - date
          description: "The earliest time at\rwhich any job may be created under this job schedule. If you do not specify\ra doNotRunUntil time, the schedule becomes ready to create jobs immediately."
          optional: true
        - id: cloudJobSchedule.schedule.doNotRunAfter
          type:
            - date
          description: "A time after which\rno job will be created under this job schedule. The schedule will move to\rthe completed state as soon as this deadline is past and there is no active\rjob under this job schedule. If you do not specify a doNotRunAfter time, and\ryou are creating a recurring job schedule, the job schedule will remain\ractive until you explicitly terminate it."
          optional: true
        - id: cloudJobSchedule.schedule.startWindow
          type:
            - azure-batch.moment.duration
          description: "The time\rinterval, starting from the time at which the schedule indicates a job\rshould be created, within which a job must be created. If a job is not\rcreated within the startWindow interval, then the 'opportunity' is lost; no\rjob will be created until the next recurrence of the schedule. If the\rschedule is recurring, and the startWindow is longer than the recurrence\rinterval, then this is equivalent to an infinite startWindow, because the\rjob that is 'due' in one recurrenceInterval is not carried forward into the\rnext recurrence interval. The default is infinite. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: cloudJobSchedule.schedule.recurrenceInterval
          type:
            - azure-batch.moment.duration
          description: "The\rtime interval between the start times of two successive jobs under the job\rschedule. A job schedule can have at most one active job under it at any\rgiven time. Because a job schedule can have at most one active job under it\rat any given time, if it is time to create a new job under a job schedule,\rbut the previous job is still running, the Batch service will not create the\rnew job until the previous job finishes. If the previous job does not finish\rwithin the startWindow period of the new recurrenceInterval, then no new job\rwill be scheduled for that interval. For recurring jobs, you should normally\rspecify a jobManagerTask in the jobSpecification. If you do not use\rjobManagerTask, you will need an external process to monitor when jobs are\rcreated, add tasks to the jobs and terminate the jobs ready for the next\rrecurrence. The default is that the schedule does not recur: one job is\rcreated, within the startWindow after the doNotRunUntil time, and the\rschedule is complete as soon as that job finishes. The minimum value is 1\rminute. If you specify a lower value, the Batch service rejects the schedule\rwith an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: cloudJobSchedule.jobSpecification
          type:
            - object
          description: "The details of the jobs to\rbe created on this schedule."
        - id: cloudJobSchedule.jobSpecification.priority
          type:
            - number
          description: "The priority of\rjobs created under this schedule. Priority values can range from -1000 to\r1000, with -1000 being the lowest priority and 1000 being the highest\rpriority. The default value is 0. This priority is used as the default for\rall jobs under the job schedule. You can update a job's priority after it\rhas been created using by using the update job API."
          optional: true
        - id: cloudJobSchedule.jobSpecification.displayName
          type:
            - string
          description: "The display\rname for jobs created under this schedule. The name need not be unique and\rcan contain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: cloudJobSchedule.jobSpecification.usesTaskDependencies
          type:
            - boolean
          description: "Whether tasks in the job can define dependencies on each other. The default\ris false."
          optional: true
        - id: cloudJobSchedule.jobSpecification.onAllTasksComplete
          type:
            - string
          description: "The\raction the Batch service should take when all tasks in a job created under\rthis schedule are in the completed state. Note that if a job contains no\rtasks, then all tasks are considered complete. This option is therefore most\rcommonly used with a Job Manager task; if you want to use automatic job\rtermination without a Job Manager, you should initially set\ronAllTasksComplete to noAction and update the job properties to set\ronAllTasksComplete to terminateJob once you have finished adding tasks. The\rdefault is noAction. Possible values include: 'noAction', 'terminateJob'"
          optional: true
        - id: cloudJobSchedule.jobSpecification.onTaskFailure
          type:
            - string
          description: "The action\rthe Batch service should take when any task fails in a job created under\rthis schedule. A task is considered to have failed if it have failed if has\ra failureInfo. A failureInfo is set if the task completes with a non-zero\rexit code after exhausting its retry count, or if there was an error\rstarting the task, for example due to a resource file download error. The\rdefault is noAction. Possible values include: 'noAction',\r'performExitOptionsJobAction'"
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints
          type:
            - object
          description: "The\rexecution constraints for jobs created under this schedule."
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum\relapsed time that the job may run, measured from the time the job is\rcreated. If the job does not complete within the time limit, the Batch\rservice terminates it and any tasks that are still running. In this case,\rthe termination reason will be MaxWallClockTimeExpiry. If this property is\rnot specified, there is no time limit on how long the job may run."
          optional: true
        - id: cloudJobSchedule.jobSpecification.constraints.maxTaskRetryCount
          type:
            - number
          description: "The\rmaximum number of times each task may be retried. The Batch service retries\ra task if its exit code is nonzero. Note that this value specifically\rcontrols the number of retries. The Batch service will try each task once,\rand may then retry up to this limit. For example, if the maximum retry count\ris 3, Batch tries a task up to 4 times (one initial try and 3 retries). If\rthe maximum retry count is 0, the Batch service does not retry tasks. If the\rmaximum retry count is -1, the Batch service retries tasks without limit.\rThe default value is 0 (no retries)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask
          type:
            - object
          description: "The\rdetails of a Job Manager task to be launched when a job is started under\rthis schedule. If the job does not specify a Job Manager task, the user must\rexplicitly add tasks to the job using the Task API. If the job does specify\ra Job Manager task, the Batch service creates the Job Manager task when the\rjob is created, and will try to schedule the Job Manager task before\rscheduling other tasks in the job."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.id
          type:
            - string
          description: "A string\rthat uniquely identifies the Job Manager task within the job. The ID can\rcontain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.displayName
          type:
            - string
          description: "The display\rname of the Job Manager task. It need not be unique and can contain any\rUnicode characters up to a maximum length of 1024."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.commandLine
          type:
            - string
          description: "The command line of the Job Manager task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.containerSettings
          type:
            - object
          description: "The\rsettings for the container under which the Job Manager task runs. If the\rpool that will run this task has containerConfiguration set, this must be\rset as well. If the pool that will run this task doesn't have\rcontainerConfiguration set, this must not be set. When this is specified,\rall directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the root of\rAzure Batch directories on the node) are mapped into the container, all task\renvironment variables are mapped into the container, and the task command\rline is executed in the container."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.resourceFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will download to the compute node before\rrunning the command line. Files listed under this element are located in the\rtask's working directory."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.outputFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will upload from the compute node after running\rthe command line. For multi-instance tasks, the files will only be uploaded\rfrom the compute node on which the primary task is executed."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.environmentSettings
          type:
            - array
          description: "A\rlist of environment variable settings for the Job Manager task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.constraints
          type:
            - object
          description: "Constraints\rthat apply to the Job Manager task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.killJobOnCompletion
          type:
            - boolean
          description: "Whether completion of the Job Manager task signifies completion of the\rentire job. If true, when the Job Manager task completes, the Batch service\rmarks the job as complete. If any tasks are still running at this time\r(other than Job Release), those tasks are terminated. If false, the\rcompletion of the Job Manager task does not affect the job status. In this\rcase, you should either use the onAllTasksComplete attribute to terminate\rthe job, or have a client or user terminate the job explicitly. An example\rof this is if the Job Manager creates a set of tasks but then takes no\rfurther role in their execution. The default value is true. If you are using\rthe onAllTasksComplete and onTaskFailure attributes to control job lifetime,\rand using the Job Manager task only to create the tasks for the job (not to\rmonitor progress), then it is important to set killJobOnCompletion to false."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.userIdentity
          type:
            - object
          description: "The user\ridentity under which the Job Manager task runs. If omitted, the task runs as\ra non-administrative user unique to the task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobManagerTask.runExclusive
          type:
            - boolean
          description: "Whether the\rJob Manager task requires exclusive use of the compute node where it runs.\rIf true, no other tasks will run on the same compute node for as long as the\rJob Manager is running. If false, other tasks can run simultaneously with\rthe Job Manager on a compute node. The Job Manager task counts normally\ragainst the node's concurrent task limit, so this is only relevant if the\rnode allows multiple concurrent tasks. The default value is true."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.applicationPackageReferences
          type:
            - array
          description: "A list of application packages that the Batch service will deploy to the\rcompute node before running the command line. Application packages are\rdownloaded and deployed to a shared directory, not the task working\rdirectory. Therefore, if a referenced package is already on the compute\rnode, and is up to date, then it is not re-downloaded; the existing copy on\rthe compute node is used. If a referenced application package cannot be\rinstalled, for example because the package has been deleted or because\rdownload failed, the task fails."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings
          type:
            - object
          description: "The settings for an authentication token that the task can use to perform\rBatch service operations. If this property is set, the Batch service\rprovides the task with an authentication token which can be used to\rauthenticate Batch service operations without requiring an account access\rkey. The token is provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment\rvariable. The operations that the task can carry out using the token depend\ron the settings. For example, a task can request job permissions in order to\radd other tasks to the job, or check the status of the job or of other tasks\runder the job."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources to which the token grants access. The authentication\rtoken grants access to a limited set of Batch service operations. Currently\rthe only supported value for the access property is 'job', which grants\raccess to all operations related to the job which contains the task."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobManagerTask.allowLowPriorityNode
          type:
            - boolean
          description: "Whether the Job Manager task may run on a low-priority compute node. The\rdefault value is false."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask
          type:
            - object
          description: "The\rJob Preparation task for jobs created under this schedule. If a job has a\rJob Preparation task, the Batch service will run the Job Preparation task on\ra compute node before starting any tasks of that job on that compute node."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.id
          type:
            - string
          description: "A\rstring that uniquely identifies the Job Preparation task within the job. The\rID can contain any combination of alphanumeric characters including hyphens\rand underscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobpreparation'. No other task in the job can have the same ID as the Job\rPreparation task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobPreparationTask;\rif you are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.commandLine
          type:
            - string
          description: "The command\rline of the Job Preparation task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.containerSettings
          type:
            - object
          description: "The\rsettings for the container under which the Job Preparation task runs. When\rthis is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.resourceFiles
          type:
            - array
          description: "A list\rof files that the Batch service will download to the compute node before\rrunning the command line. Files listed under this element are located in the\rtask's working directory."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.environmentSettings
          type:
            - array
          description: "A\rlist of environment variable settings for the Job Preparation task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.constraints
          type:
            - object
          description: Constraints that apply to the Job Preparation task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum elapsed time that the task may run, measured from the time the\rtask starts. If the task does not complete within the time limit, the Batch\rservice terminates it. If this is not specified, there is no time limit on\rhow long the task may run."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time to retain the task directory on the compute node where it\rran, from the time it completes execution. After this time, the Batch\rservice may delete the task directory and all its contents. The default is\rinfinite, i.e. the task directory will be retained until the compute node is\rremoved or reimaged."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the Job Preparation task to\rcomplete successfully before scheduling any other tasks of the job on the\rcompute node. A Job Preparation task has completed successfully if it exits\rwith exit code 0. If true and the Job Preparation task fails on a compute\rnode, the Batch service retries the Job Preparation task up to its maximum\rretry count (as specified in the constraints element). If the task has still\rnot completed successfully after all retries, then the Batch service will\rnot schedule tasks of the job to the compute node. The compute node remains\ractive and eligible to run tasks of other jobs. If false, the Batch service\rwill not wait for the Job Preparation task to complete. In this case, other\rtasks of the job can start executing on the compute node while the Job\rPreparation task is still running; and even if the Job Preparation task\rfails, new tasks will continue to be scheduled on the node. The default\rvalue is true."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobPreparationTask.userIdentity
          type:
            - object
          description: "The user\ridentity under which the Job Preparation task runs. If omitted, the task\rruns as a non-administrative user unique to the task on Windows nodes, or a\ra non-administrative user unique to the pool on Linux nodes."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.jobPreparationTask.rerunOnNodeRebootAfterSuccess
          type:
            - boolean
          description: "Whether the Batch service should rerun the Job Preparation task after a\rcompute node reboots. The Job Preparation task is always rerun if a compute\rnode is reimaged, or if the Job Preparation task did not complete (e.g.\rbecause the reboot occurred while the task was running). Therefore, you\rshould always write a Job Preparation task to be idempotent and to behave\rcorrectly if run multiple times. The default value is true."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask
          type:
            - object
          description: "The Job\rRelease task for jobs created under this schedule. The primary purpose of\rthe Job Release task is to undo changes to compute nodes made by the Job\rPreparation task. Example activities include deleting local files, or\rshutting down services that were started as part of job preparation. A Job\rRelease task cannot be specified without also specifying a Job Preparation\rtask for the job. The Batch service runs the Job Release task on the compute\rnodes that have run the Job Preparation task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.id
          type:
            - string
          description: "A\rstring that uniquely identifies the Job Release task within the job. The ID\rcan contain any combination of alphanumeric characters including hyphens and\runderscores and cannot contain more than 64 characters. If you do not\rspecify this property, the Batch service assigns a default value of\r'jobrelease'. No other task in the job can have the same ID as the Job\rRelease task. If you try to submit a task with the same id, the Batch\rservice rejects the request with error code TaskIdSameAsJobReleaseTask; if\ryou are calling the REST API directly, the HTTP status code is 409\r(Conflict)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.commandLine
          type:
            - string
          description: "The command line of the Job Release task. The command line does not run\runder a shell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.containerSettings
          type:
            - object
          description: "The\rsettings for the container under which the Job Release task runs. When this\ris specified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR\r(the root of Azure Batch directories on the node) are mapped into the\rcontainer, all task environment variables are mapped into the container, and\rthe task command line is executed in the container."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.resourceFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will download to the compute node before\rrunning the command line. Files listed under this element are located in the\rtask's working directory."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.environmentSettings
          type:
            - array
          description: "A\rlist of environment variable settings for the Job Release task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The\rmaximum elapsed time that the Job Release task may run on a given compute\rnode, measured from the time the task starts. If the task does not complete\rwithin the time limit, the Batch service terminates it. The default value is\r15 minutes. You may not specify a timeout longer than 15 minutes. If you do,\rthe Batch service rejects it with an error; if you are calling the REST API\rdirectly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum\rtime to retain the task directory for the Job Release task on the compute\rnode. After this time, the Batch service may delete the task directory and\rall its contents. The default is infinite, i.e. the task directory will be\rretained until the compute node is removed or reimaged."
          optional: true
        - id: cloudJobSchedule.jobSpecification.jobReleaseTask.userIdentity
          type:
            - object
          description: "The user\ridentity under which the Job Release task runs. If omitted, the task runs as\ra non-administrative user unique to the task."
          optional: true
        - id: cloudJobSchedule.jobSpecification.commonEnvironmentSettings
          type:
            - array
          description: "A list of common environment variable settings. These environment variables\rare set for all tasks in jobs created under this schedule (including the Job\rManager, Job Preparation and Job Release tasks). Individual tasks can\roverride an environment setting specified here by specifying the same\rsetting name with a different value."
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo
          type:
            - object
          description: "The pool on which\rthe Batch service runs the tasks of jobs created under this schedule."
        - id: cloudJobSchedule.jobSpecification.poolInfo.poolId
          type:
            - string
          description: "The ID\rof an existing pool. All the tasks of the job will run on the specified\rpool. You must ensure that the pool referenced by this property exists. If\rthe pool does not exist at the time the Batch service tries to schedule a\rjob, no tasks for the job will run until you create a pool with that id.\rNote that the Batch service will not reject the job request; it will simply\rnot run tasks until the pool exists. You must specify either the pool ID or\rthe auto pool specification, but not both."
          optional: true
        - id: cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification
          type:
            - object
          description: "Characteristics for a temporary 'auto pool'. The Batch service will create\rthis auto pool when the job is submitted. If auto pool creation fails, the\rBatch service moves the job to a completed state, and the pool creation\rerror is set in the job's scheduling error property. The Batch service\rmanages the lifetime (both creation and, unless keepAlive is specified,\rdeletion) of the auto pool. Any user actions that affect the lifetime of the\rauto pool while the job is active will result in unexpected behavior. You\rmust specify either the pool ID or the auto pool specification, but not\rboth."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.autoPoolIdPrefix
          type:
            - string
          description: "A prefix to be added to the unique identifier when a pool is automatically\rcreated. The Batch service assigns each auto pool a unique identifier on\rcreation. To distinguish between pools created for different purposes, you\rcan specify this element to add a prefix to the ID that is assigned. The\rprefix can be up to 20 characters long."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.poolLifetimeOption
          type:
            - string
          description: "The minimum lifetime of created auto pools, and how multiple jobs on a\rschedule are assigned to pools. When the pool lifetime is jobSchedule the\rpool exists for the lifetime of the job schedule. The Batch Service creates\rthe pool when it creates the first job on the schedule. You may apply this\roption only to job schedules, not to jobs. When the pool lifetime is job the\rpool exists for the lifetime of the job to which it is dedicated. The Batch\rservice creates the pool when it creates the job. If the 'job' option is\rapplied to a job schedule, the Batch service creates a new auto pool for\revery job created on the schedule. Possible values include: 'jobSchedule',\r'job'"
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.keepAlive
          type:
            - boolean
          description: "Whether to keep an auto pool alive after its lifetime expires. If false, the\rBatch service deletes the pool once its lifetime (as determined by the\rpoolLifetimeOption setting) expires; that is, when the job or job schedule\rcompletes. If true, the Batch service does not delete the pool\rautomatically. It is up to the user to delete auto pools created with this\roption."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool
          type:
            - object
          description: "The\rpool specification for the auto pool."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.displayName
          type:
            - string
          description: "The display name for the pool. The display name need not be unique and can\rcontain any Unicode characters up to a maximum length of 1024."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.vmSize
          type:
            - string
          description: "The size of the virtual machines in the pool. All virtual machines in a pool\rare the same size. For information about available sizes of virtual machines\rfor Cloud Services pools (pools created with cloudServiceConfiguration), see\rSizes for Cloud Services\r(http://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).\rBatch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.\rFor information about available VM sizes for pools using images from the\rVirtual Machines Marketplace (pools created with\rvirtualMachineConfiguration) see Sizes for Virtual Machines (Linux)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)\ror Sizes for Virtual Machines (Windows)\r(https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).\rBatch supports all Azure VM sizes except STANDARD_A0 and those with premium\rstorage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series)."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration
          type:
            - object
          description: "The cloud service configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure PaaS VMs. This property\rand virtualMachineConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request). This property cannot be specified if the Batch\raccount was created with its poolAllocationMode property set to\r'UserSubscription'."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily
          type:
            - string
          description: "The Azure Guest OS family to be installed on the virtual machines in the\rpool. Possible values are: 2 - OS Family 2, equivalent to Windows Server\r2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS\rFamily 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent\rto Windows Server 2016. For more information, see Azure Guest OS Releases\r(https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases)."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion
          type:
            - string
          description: "The Azure Guest OS version to be installed on the virtual machines in the\rpool. The default value is * which specifies the latest operating system\rversion for the specified OS family."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration
          type:
            - object
          description: "The virtual machine configuration for the pool. This property must be\rspecified if the pool needs to be created with Azure IaaS VMs. This property\rand cloudServiceConfiguration are mutually exclusive and one of the\rproperties must be specified. If neither is specified then the Batch service\rreturns an error; if you are calling the REST API directly, the HTTP status\rcode is 400 (Bad Request)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference
          type:
            - object
          description: "A reference to the Azure Virtual Machines Marketplace image or the custom\rVirtual Machine image to use."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher
          type:
            - string
          description: "The publisher of the Azure Virtual Machines Marketplace image. For example,\rCanonical or MicrosoftWindowsServer."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer
          type:
            - string
          description: "The offer type of the Azure Virtual Machines Marketplace image. For example,\rUbuntuServer or WindowsServer."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku
          type:
            - string
          description: "The SKU of the Azure Virtual Machines Marketplace image. For example,\r14.04.0-LTS or 2012-R2-Datacenter."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version
          type:
            - string
          description: "The version of the Azure Virtual Machines Marketplace image. A value of\r'latest' can be specified to select the latest version of an image. If\romitted, the default is 'latest'."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.virtualMachineImageId
          type:
            - string
          description: "The ARM resource identifier of the virtual machine image. Computes nodes of\rthe pool will be created using this custom image. This is of the form\r/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}\rThis property is mutually exclusive with other ImageReference properties.\rThe virtual machine image must be in the same region and subscription as the\rAzure Batch account. For information about the firewall settings for the\rBatch node agent to communicate with the Batch service see\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk
          type:
            - object
          description: Settings for the operating system disk of the Virtual Machine.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.osDisk.caching
          type:
            - string
          description: "The type of caching to enable for the OS disk. Values are:\r\rnone - The caching mode for the disk is not enabled.\rreadOnly - The caching mode for the disk is read only.\rreadWrite - The caching mode for the disk is read and write.\r\rThe default value for caching is none. For information about the caching\roptions see:\rhttps://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.\rPossible values include: 'none', 'readOnly', 'readWrite'"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId
          type:
            - string
          description: "The SKU of the Batch node agent to be provisioned on compute nodes in the\rpool. The Batch node agent is a program that runs on each node in the pool,\rand provides the command-and-control interface between the node and the\rBatch service. There are different implementations of the node agent, known\ras SKUs, for different operating systems. You must specify a node agent SKU\rwhich matches the selected image reference. To get the list of supported\rnode agent SKUs along with their list of verified image references, see the\r'List supported node agent SKUs' operation."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration
          type:
            - object
          description: "Windows operating system settings on the virtual machine. This property must\rnot be specified if the imageReference or osDisk property specifies a Linux\rOS image."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates
          type:
            - boolean
          description: "Whether automatic updates are enabled on the virtual machine. If omitted,\rthe default value is true."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.dataDisks
          type:
            - array
          description: "The configuration for data disks attached to the comptue nodes in the pool.\rThis property must be specified if the compute nodes in the pool need to\rhave empty data disks attached to them. This cannot be updated."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.licenseType
          type:
            - string
          description: "The type of on-premises license to be used when deploying the operating\rsystem. This only applies to images that contain the Windows operating\rsystem, and should only be used when you hold valid on-premises licenses for\rthe nodes which will be deployed. If omitted, no on-premises licensing\rdiscount is applied. Values are:\r\rWindows_Server - The on-premises license is for Windows Server.\rWindows_Client - The on-premises license is for Windows Client."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration
          type:
            - object
          description: "The container configuration for the pool. If specified, setup is performed\ron each node in the pool to allow tasks to run in containers. All regular\rtasks and job manager tasks run on this pool must specify the\rcontainerSettings property, and all other tasks may specify it."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerImageNames
          type:
            - array
          description: "The collection of container image names. This is the full image reference,\ras would be specified to \"docker pull\". An image will be sourced from the\rdefault Docker registry unless the image is fully qualified with an\ralternative registry."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.containerConfiguration.containerRegistries
          type:
            - array
          description: "Additional private registries from which containers can be pulled. If any\rimages must be downloaded from a private registry which requires\rcredentials, then those credentials must be provided here."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.maxTasksPerNode
          type:
            - number
          description: "The maximum number of tasks that can run concurrently on a single compute\rnode in the pool. The default value is 1. The maximum value of this setting\rdepends on the size of the compute nodes in the pool (the vmSize setting)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy
          type:
            - object
          description: How tasks are distributed across compute nodes in a pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType
          type:
            - string
          description: "How tasks are distributed across compute nodes in a pool. Values are:\r\rpack - As many tasks as possible (maxTasksPerNode) should be assigned to\reach node in the pool before any tasks are assigned to the next node in the\rpool.\rspread - Tasks should be assigned evenly across all nodes in the pool.\rPossible values include: 'spread', 'pack'"
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.resizeTimeout
          type:
            - azure-batch.moment.duration
          description: "The timeout for allocation of compute nodes to the pool. This timeout\rapplies only to manual scaling; it has no effect when enableAutoScale is set\rto true. The default value is 15 minutes. The minimum value is 5 minutes. If\ryou specify a value less than 5 minutes, the Batch service rejects the\rrequest with an error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.targetDedicatedNodes
          type:
            - number
          description: "The desired number of dedicated compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.targetLowPriorityNodes
          type:
            - number
          description: "The desired number of low-priority compute nodes in the pool. This property\rmust not be specified if enableAutoScale is set to true. If enableAutoScale\ris set to false, then you must set either targetDedicatedNodes,\rtargetLowPriorityNodes, or both."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableAutoScale
          type:
            - boolean
          description: "Whether the pool size should automatically adjust over time. If false, at\rleast one of targetDedicateNodes and targetLowPriorityNodes must be\rspecified. If true, the autoScaleFormula element is required. The pool\rautomatically resizes according to the formula. The default value is false."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleFormula
          type:
            - string
          description: "The formula for the desired number of compute nodes in the pool. This\rproperty must not be specified if enableAutoScale is set to false. It is\rrequired if enableAutoScale is set to true. The formula is checked for\rvalidity before the pool is created. If the formula is not valid, the Batch\rservice rejects the request with detailed error information."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval
          type:
            - azure-batch.moment.duration
          description: "The time interval at which to automatically adjust the pool size according\rto the autoscale formula. The default value is 15 minutes. The minimum and\rmaximum value are 5 minutes and 168 hours respectively. If you specify a\rvalue less than 5 minutes or greater than 168 hours, the Batch service\rrejects the request with an invalid property value error; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication
          type:
            - boolean
          description: "Whether the pool permits direct communication between nodes. Enabling\rinter-node communication limits the maximum size of the pool due to\rdeployment restrictions on the nodes of the pool. This may result in the\rpool not reaching its desired size. The default value is false."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration
          type:
            - object
          description: The network configuration for the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.subnetId
          type:
            - string
          description: "The ARM resource identifier of the virtual network subnet which the compute\rnodes of the pool will join. This is of the form\r/subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.\rThe virtual network must be in the same region and subscription as the Azure\rBatch account. The specified subnet should have enough free IP addresses to\raccommodate the number of nodes in the pool. If the subnet doesn't have\renough free IP addresses, the pool will partially allocate compute nodes,\rand a resize error will occur. The 'MicrosoftAzureBatch' service principal\rmust have the 'Classic Virtual Machine Contributor' Role-Based Access\rControl (RBAC) role for the specified VNet. The specified subnet must allow\rcommunication from the Azure Batch service to be able to schedule tasks on\rthe compute nodes. This can be verified by checking if the specified VNet\rhas any associated Network Security Groups (NSG). If communication to the\rcompute nodes in the specified subnet is denied by an NSG, then the Batch\rservice will set the state of the compute nodes to unusable. For pools\rcreated with virtualMachineConfiguration only ARM virtual networks\r('Microsoft.Network/virtualNetworks') are supported, but for pools created\rwith cloudServiceConfiguration both ARM and classic virtual networks are\rsupported. If the specified VNet has any associated Network Security Groups\r(NSG), then a few reserved system ports must be enabled for inbound\rcommunication. For pools created with a virtual machine configuration,\renable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for\rWindows. For pools created with a cloud service configuration, enable ports\r10100, 20100, and 30100. Also enable outbound connections to Azure Storage\ron port 443. For more details see:\rhttps://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration
          type:
            - object
          description: "The configuration for endpoints on compute nodes in the Batch pool. Pool\rendpoint configuration is only supported on pools with the\rvirtualMachineConfiguration property."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.networkConfiguration.endpointConfiguration.inboundNATPools
          type:
            - array
          description: "A list of inbound NAT pools that can be used to address specific ports on an\rindividual compute node externally. The maximum number of inbound NAT pools\rper Batch pool is 5. If the maximum number of inbound NAT pools is exceeded\rthe request fails with HTTP status code 400."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask
          type:
            - object
          description: "A task to run on each compute node as it joins the pool. The task runs when\rthe node is added to the pool or when the node is restarted."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.commandLine
          type:
            - string
          description: "The command line of the start task. The command line does not run under a\rshell, and therefore cannot take advantage of shell features such as\renvironment variable expansion. If you want to take advantage of such\rfeatures, you should invoke the shell in the command line, for example using\r\"cmd /c MyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings
          type:
            - object
          description: "The settings for the container under which the start task runs. When this is\rspecified, all directories recursively below the AZ_BATCH_NODE_ROOT_DIR (the\rroot of Azure Batch directories on the node) are mapped into the container,\rall task environment variables are mapped into the container, and the task\rcommand line is executed in the container."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional options to the container create command. These additional options\rare supplied as arguments to the \"docker create\" command, in addition to\rthose controlled by the Batch Service."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.imageName
          type:
            - string
          description: "The image to use to create the container in which the task will run. This is\rthe full image reference, as would be specified to \"docker pull\". If no tag\ris provided as part of the image name, the tag \":latest\" is used as a\rdefault."
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry
          type:
            - object
          description: "The private registry which contains the container image. This setting can be\romitted if was already provided at pool creation."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.registryServer
          type:
            - string
          description: 'The registry URL. If omitted, the default is "docker.io".'
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.userName
          type:
            - string
          description: The user name to log into the registry server.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.containerSettings.registry.password
          type:
            - string
          description: The password to log into the registry server.
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service will download to the compute node\rbefore running the command line. Files listed under this element are located\rin the task's working directory."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.environmentSettings
          type:
            - array
          description: A list of environment variable settings for the start task.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity
          type:
            - object
          description: "The user identity under which the start task runs. If omitted, the task runs\ras a non-administrative user unique to the task."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.userName
          type:
            - string
          description: "The name of the user identity under which the task is run. The userName and\rautoUser properties are mutually exclusive; you must specify one but not\rboth."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the task is run. The userName and autoUser\rproperties are mutually exclusive; you must specify one but not both."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto user Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation level of the auto user. nonAdmin - The auto user is a standard\ruser without elevated access. admin - The auto user is a user with elevated\raccess and operates with full Administrator permissions. The default value\ris nonAdmin. Possible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of times the task may be retried. The Batch service\rretries a task if its exit code is nonzero. Note that this value\rspecifically controls the number of retries. The Batch service will try the\rtask once, and may then retry up to this limit. For example, if the maximum\rretry count is 3, Batch tries the task up to 4 times (one initial try and 3\rretries). If the maximum retry count is 0, the Batch service does not retry\rthe task. If the maximum retry count is -1, the Batch service retries the\rtask without limit."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess
          type:
            - boolean
          description: "Whether the Batch service should wait for the start task to complete\rsuccessfully (that is, to exit with exit code 0) before scheduling any tasks\ron the compute node. If true and the start task fails on a compute node, the\rBatch service retries the start task up to its maximum retry count\r(maxTaskRetryCount). If the task has still not completed successfully after\rall retries, then the Batch service marks the compute node unusable, and\rwill not schedule tasks to it. This condition can be detected via the node\rstate and failure info details. If false, the Batch service will not wait\rfor the start task to complete. In this case, other tasks can start\rexecuting on the compute node while the start task is still running; and\reven if the start task fails, new tasks will continue to be scheduled on the\rnode. The default is false."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.certificateReferences
          type:
            - array
          description: "A list of certificates to be installed on each compute node in the pool. For\rWindows compute nodes, the Batch service installs the certificates to the\rspecified certificate store and location. For Linux compute nodes, the\rcertificates are stored in a directory inside the task working directory and\ran environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to\rquery for this location. For certificates with visibility of 'remoteUser', a\r'certs' directory is created in the user's home directory (e.g.,\r/home/{user-name}/certs) and certificates are placed in that directory."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationPackageReferences
          type:
            - array
          description: "The list of application packages to be installed on each compute node in the\rpool."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.applicationLicenses
          type:
            - array
          description: "The list of application licenses the Batch service will make available on\reach compute node in the pool. The list of application licenses must be a\rsubset of available Batch service application licenses. If a license is\rrequested which is not supported, pool creation will fail."
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.userAccounts
          type:
            - array
          description: The list of user accounts to be created on each node in the pool.
          optional: true
        - id: >-
            cloudJobSchedule.jobSpecification.poolInfo.autoPoolSpecification.pool.metadata
          type:
            - array
          description: "A list of name-value pairs associated with the pool as metadata. The Batch\rservice does not assign any meaning to metadata; it is solely for the use of\ruser code."
          optional: true
        - id: cloudJobSchedule.jobSpecification.metadata
          type:
            - array
          description: "A list of\rname-value pairs associated with each job created under this schedule as\rmetadata. The Batch service does not assign any meaning to metadata; it is\rsolely for the use of user code."
          optional: true
        - id: cloudJobSchedule.metadata
          type:
            - array
          description: "A list of name-value pairs\rassociated with the schedule as metadata. The Batch service does not assign\rany meaning to metadata; it is solely for the use of user code."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleAddOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleAddOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleAddOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleAddOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function add(cloudJobSchedule, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#listWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#listWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: listWithHttpOperationResponse(options)
    summary: Lists all of the job schedules in the specified account.
    fullName: azure-batch.JobSchedule.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudJobScheduleListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CloudJobScheduleListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules."
          optional: true
        - id: options.jobScheduleListOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.jobScheduleListOptions.expand
          type:
            - string
          description: "An OData $expand\rclause."
          optional: true
        - id: options.jobScheduleListOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 job schedules\rcan be returned."
          optional: true
        - id: options.jobScheduleListOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleListOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#list'
    id: 'azure-batch.JobSchedule#list'
    parent: azure-batch.JobSchedule
    name: 'list(options, optionalCallback)'
    summary: Lists all of the job schedules in the specified account.
    fullName: 'azure-batch.JobSchedule.list(options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudJobScheduleListResult} - The deserialized result object.'
        value: '{CloudJobScheduleListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudJobScheduleListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudJobScheduleListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.jobScheduleListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules."
          optional: true
        - id: options.jobScheduleListOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.jobScheduleListOptions.expand
          type:
            - string
          description: "An OData $expand\rclause."
          optional: true
        - id: options.jobScheduleListOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 job schedules\rcan be returned."
          optional: true
        - id: options.jobScheduleListOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.jobScheduleListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleListOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#listNextWithHttpOperationResponse'
    id: 'azure-batch.JobSchedule#listNextWithHttpOperationResponse'
    parent: azure-batch.JobSchedule
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists all of the job schedules in the specified account.
    fullName: >-
      azure-batch.JobSchedule.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudJobScheduleListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<CloudJobScheduleListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListNextOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.jobScheduleListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleListNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListNextOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-batch.JobSchedule#listNext'
    id: 'azure-batch.JobSchedule#listNext'
    parent: azure-batch.JobSchedule
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Lists all of the job schedules in the specified account.
    fullName: 'azure-batch.JobSchedule.listNext(nextPageLink, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudJobScheduleListResult} - The deserialized result object.'
        value: '{CloudJobScheduleListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudJobScheduleListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudJobScheduleListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.jobScheduleListNextOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.jobScheduleListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.jobScheduleListNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.jobScheduleListNextOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-batch.BatchServiceClient
    name: BatchServiceClient
    fullName: azure-batch.BatchServiceClient
    isExternal: false
