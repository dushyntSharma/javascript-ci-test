### YamlMime:UniversalReference
items:
  - uid: azure-batch.File
    id: azure-batch.File
    name: File
    summary: Class representing a File.
    fullName: azure-batch.File
    source:
      id: azure-batch.File
      path: lib\services\batch\lib\operations\file.js
      startLine: 2292
      remote:
        branch: master
        path: lib\services\batch\lib\operations\file.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-batch.File.#ctor'
      - 'azure-batch.File#deleteFromTaskWithHttpOperationResponse'
      - 'azure-batch.File#deleteFromTask'
      - 'azure-batch.File#getFromTaskWithHttpOperationResponse'
      - 'azure-batch.File#getFromTask'
      - 'azure-batch.File#getPropertiesFromTaskWithHttpOperationResponse'
      - 'azure-batch.File#getPropertiesFromTask'
      - 'azure-batch.File#deleteFromComputeNodeWithHttpOperationResponse'
      - 'azure-batch.File#deleteFromComputeNode'
      - 'azure-batch.File#getFromComputeNodeWithHttpOperationResponse'
      - 'azure-batch.File#getFromComputeNode'
      - 'azure-batch.File#getPropertiesFromComputeNodeWithHttpOperationResponse'
      - 'azure-batch.File#getPropertiesFromComputeNode'
      - 'azure-batch.File#listFromTaskWithHttpOperationResponse'
      - 'azure-batch.File#listFromTask'
      - 'azure-batch.File#listFromComputeNodeWithHttpOperationResponse'
      - 'azure-batch.File#listFromComputeNode'
      - 'azure-batch.File#listFromTaskNextWithHttpOperationResponse'
      - 'azure-batch.File#listFromTaskNext'
      - 'azure-batch.File#listFromComputeNodeNextWithHttpOperationResponse'
      - 'azure-batch.File#listFromComputeNodeNext'
    langs:
      - js
  - id: 'azure-batch.File.#ctor'
    uid: 'azure-batch.File.#ctor'
    parent: azure-batch.File
    name: File(client)
    fullName: azure-batch.File.File(client)
    summary: Create a File.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-batch.BatchServiceClient
          description: Reference to the service client.
      content: new File(client)
    langs:
      - js
  - uid: 'azure-batch.File#deleteFromTaskWithHttpOperationResponse'
    id: 'azure-batch.File#deleteFromTaskWithHttpOperationResponse'
    parent: azure-batch.File
    name: 'deleteFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options)'
    summary: "Deletes the specified task file from the compute node where the\rtask ran."
    fullName: >-
      azure-batch.File.deleteFromTaskWithHttpOperationResponse(jobId, taskId,
      filePath, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task whose file you want to delete.
        - id: filePath
          type:
            - string
          description: "The path to the task file or directory that you\rwant to delete."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to delete children of a\rdirectory. If the filePath parameter represents a directory instead of a\rfile, you can set recursive to true to delete the directory and all of the\rfiles and subdirectories in it. If recursive is false then the directory\rmust be empty or deletion will fail."
          optional: true
        - id: options.fileDeleteFromTaskOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.fileDeleteFromTaskOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.fileDeleteFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileDeleteFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileDeleteFromTaskOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteFromTaskWithHttpOperationResponse(jobId, taskId,
        filePath, options)
    langs:
      - js
  - uid: 'azure-batch.File#deleteFromTask'
    id: 'azure-batch.File#deleteFromTask'
    parent: azure-batch.File
    name: 'deleteFromTask(jobId, taskId, filePath, options, optionalCallback)'
    summary: "Deletes the specified task file from the compute node where the\rtask ran."
    fullName: >-
      azure-batch.File.deleteFromTask(jobId, taskId, filePath, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task whose file you want to delete.
        - id: filePath
          type:
            - string
          description: "The path to the task file or directory that you\rwant to delete."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to delete children of a\rdirectory. If the filePath parameter represents a directory instead of a\rfile, you can set recursive to true to delete the directory and all of the\rfiles and subdirectories in it. If recursive is false then the directory\rmust be empty or deletion will fail."
          optional: true
        - id: options.fileDeleteFromTaskOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.fileDeleteFromTaskOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.fileDeleteFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileDeleteFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileDeleteFromTaskOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteFromTask(jobId, taskId, filePath, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.File#getFromTaskWithHttpOperationResponse'
    id: 'azure-batch.File#getFromTaskWithHttpOperationResponse'
    parent: azure-batch.File
    name: 'getFromTaskWithHttpOperationResponse(jobId, taskId, filePath, options)'
    summary: Returns the content of the specified task file.
    fullName: >-
      azure-batch.File.getFromTaskWithHttpOperationResponse(jobId, taskId,
      filePath, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Object>} - The deserialized result object.'
        value: '{HttpOperationResponse<Object>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task whose file you want to retrieve.
        - id: filePath
          type:
            - string
          description: "The path to the task file that you want to get the\rcontent of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetFromTaskOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.fileGetFromTaskOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.fileGetFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileGetFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileGetFromTaskOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.fileGetFromTaskOptions.ocpRange
          type:
            - string
          description: "The byte range to\rbe retrieved. The default is to retrieve the entire file. The format is\rbytes=startRange-endRange."
          optional: true
        - id: options.fileGetFromTaskOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.fileGetFromTaskOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getFromTaskWithHttpOperationResponse(jobId, taskId, filePath,
        options)
    langs:
      - js
  - uid: 'azure-batch.File#getFromTask'
    id: 'azure-batch.File#getFromTask'
    parent: azure-batch.File
    name: 'getFromTask(jobId, taskId, filePath, options, optionalCallback)'
    summary: Returns the content of the specified task file.
    fullName: >-
      azure-batch.File.getFromTask(jobId, taskId, filePath, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Object} - The deserialized result object.'
        value: '{Object} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task whose file you want to retrieve.
        - id: filePath
          type:
            - string
          description: "The path to the task file that you want to get the\rcontent of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetFromTaskOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.fileGetFromTaskOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.fileGetFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileGetFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileGetFromTaskOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.fileGetFromTaskOptions.ocpRange
          type:
            - string
          description: "The byte range to\rbe retrieved. The default is to retrieve the entire file. The format is\rbytes=startRange-endRange."
          optional: true
        - id: options.fileGetFromTaskOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.fileGetFromTaskOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getFromTask(jobId, taskId, filePath, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.File#getPropertiesFromTaskWithHttpOperationResponse'
    id: 'azure-batch.File#getPropertiesFromTaskWithHttpOperationResponse'
    parent: azure-batch.File
    name: >-
      getPropertiesFromTaskWithHttpOperationResponse(jobId, taskId, filePath,
      options)
    summary: Gets the properties of the specified task file.
    fullName: >-
      azure-batch.File.getPropertiesFromTaskWithHttpOperationResponse(jobId,
      taskId, filePath, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: "The ID of the task whose file you want to get the\rproperties of."
        - id: filePath
          type:
            - string
          description: "The path to the task file that you want to get the\rproperties of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getPropertiesFromTaskWithHttpOperationResponse(jobId, taskId,
        filePath, options)
    langs:
      - js
  - uid: 'azure-batch.File#getPropertiesFromTask'
    id: 'azure-batch.File#getPropertiesFromTask'
    parent: azure-batch.File
    name: 'getPropertiesFromTask(jobId, taskId, filePath, options, optionalCallback)'
    summary: Gets the properties of the specified task file.
    fullName: >-
      azure-batch.File.getPropertiesFromTask(jobId, taskId, filePath, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: "The ID of the task whose file you want to get the\rproperties of."
        - id: filePath
          type:
            - string
          description: "The path to the task file that you want to get the\rproperties of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.fileGetPropertiesFromTaskOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getPropertiesFromTask(jobId, taskId, filePath, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.File#deleteFromComputeNodeWithHttpOperationResponse'
    id: 'azure-batch.File#deleteFromComputeNodeWithHttpOperationResponse'
    parent: azure-batch.File
    name: >-
      deleteFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath,
      options)
    summary: Deletes the specified file from the compute node.
    fullName: >-
      azure-batch.File.deleteFromComputeNodeWithHttpOperationResponse(poolId,
      nodeId, filePath, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node from which you want to\rdelete the file."
        - id: filePath
          type:
            - string
          description: "The path to the file or directory that you want to\rdelete."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to delete children of a\rdirectory. If the filePath parameter represents a directory instead of a\rfile, you can set recursive to true to delete the directory and all of the\rfiles and subdirectories in it. If recursive is false then the directory\rmust be empty or deletion will fail."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteFromComputeNodeWithHttpOperationResponse(poolId, nodeId,
        filePath, options)
    langs:
      - js
  - uid: 'azure-batch.File#deleteFromComputeNode'
    id: 'azure-batch.File#deleteFromComputeNode'
    parent: azure-batch.File
    name: 'deleteFromComputeNode(poolId, nodeId, filePath, options, optionalCallback)'
    summary: Deletes the specified file from the compute node.
    fullName: >-
      azure-batch.File.deleteFromComputeNode(poolId, nodeId, filePath, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node from which you want to\rdelete the file."
        - id: filePath
          type:
            - string
          description: "The path to the file or directory that you want to\rdelete."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to delete children of a\rdirectory. If the filePath parameter represents a directory instead of a\rfile, you can set recursive to true to delete the directory and all of the\rfiles and subdirectories in it. If recursive is false then the directory\rmust be empty or deletion will fail."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileDeleteFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteFromComputeNode(poolId, nodeId, filePath, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.File#getFromComputeNodeWithHttpOperationResponse'
    id: 'azure-batch.File#getFromComputeNodeWithHttpOperationResponse'
    parent: azure-batch.File
    name: >-
      getFromComputeNodeWithHttpOperationResponse(poolId, nodeId, filePath,
      options)
    summary: Returns the content of the specified compute node file.
    fullName: >-
      azure-batch.File.getFromComputeNodeWithHttpOperationResponse(poolId,
      nodeId, filePath, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Object>} - The deserialized result object.'
        value: '{HttpOperationResponse<Object>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that contains the file.
        - id: filePath
          type:
            - string
          description: "The path to the compute node file that you want to\rget the content of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileGetFromComputeNodeOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ocpRange
          type:
            - string
          description: "The byte\rrange to be retrieved. The default is to retrieve the entire file. The\rformat is bytes=startRange-endRange."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getFromComputeNodeWithHttpOperationResponse(poolId, nodeId,
        filePath, options)
    langs:
      - js
  - uid: 'azure-batch.File#getFromComputeNode'
    id: 'azure-batch.File#getFromComputeNode'
    parent: azure-batch.File
    name: 'getFromComputeNode(poolId, nodeId, filePath, options, optionalCallback)'
    summary: Returns the content of the specified compute node file.
    fullName: >-
      azure-batch.File.getFromComputeNode(poolId, nodeId, filePath, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Object} - The deserialized result object.'
        value: '{Object} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that contains the file.
        - id: filePath
          type:
            - string
          description: "The path to the compute node file that you want to\rget the content of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileGetFromComputeNodeOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ocpRange
          type:
            - string
          description: "The byte\rrange to be retrieved. The default is to retrieve the entire file. The\rformat is bytes=startRange-endRange."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.fileGetFromComputeNodeOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getFromComputeNode(poolId, nodeId, filePath, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.File#getPropertiesFromComputeNodeWithHttpOperationResponse'
    id: 'azure-batch.File#getPropertiesFromComputeNodeWithHttpOperationResponse'
    parent: azure-batch.File
    name: >-
      getPropertiesFromComputeNodeWithHttpOperationResponse(poolId, nodeId,
      filePath, options)
    summary: Gets the properties of the specified compute node file.
    fullName: >-
      azure-batch.File.getPropertiesFromComputeNodeWithHttpOperationResponse(poolId,
      nodeId, filePath, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that contains the file.
        - id: filePath
          type:
            - string
          description: "The path to the compute node file that you want to\rget the properties of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.timeout
          type:
            - number
          description: "The maximum time that the server can spend processing the request, in\rseconds. The default is 30 seconds."
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: >-
            options.fileGetPropertiesFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The\rtime the request was issued. Client libraries typically set this to the\rcurrent system clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getPropertiesFromComputeNodeWithHttpOperationResponse(poolId,
        nodeId, filePath, options)
    langs:
      - js
  - uid: 'azure-batch.File#getPropertiesFromComputeNode'
    id: 'azure-batch.File#getPropertiesFromComputeNode'
    parent: azure-batch.File
    name: >-
      getPropertiesFromComputeNode(poolId, nodeId, filePath, options,
      optionalCallback)
    summary: Gets the properties of the specified compute node file.
    fullName: >-
      azure-batch.File.getPropertiesFromComputeNode(poolId, nodeId, filePath,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that contains the file.
        - id: filePath
          type:
            - string
          description: "The path to the compute node file that you want to\rget the properties of."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.timeout
          type:
            - number
          description: "The maximum time that the server can spend processing the request, in\rseconds. The default is 30 seconds."
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: >-
            options.fileGetPropertiesFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The\rtime the request was issued. Client libraries typically set this to the\rcurrent system clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.ifModifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas been modified since the specified time."
          optional: true
        - id: options.fileGetPropertiesFromComputeNodeOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getPropertiesFromComputeNode(poolId, nodeId, filePath, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.File#listFromTaskWithHttpOperationResponse'
    id: 'azure-batch.File#listFromTaskWithHttpOperationResponse'
    parent: azure-batch.File
    name: 'listFromTaskWithHttpOperationResponse(jobId, taskId, options)'
    summary: Lists the files in a task's directory on its compute node.
    fullName: >-
      azure-batch.File.listFromTaskWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task whose files you want to list.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to list children of the task\rdirectory. This parameter can be used in combination with the filter\rparameter to list specific type of files."
          optional: true
        - id: options.fileListFromTaskOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.fileListFromTaskOptions.filter
          type:
            - string
          description: "An OData $filter\rclause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-task-files."
          optional: true
        - id: options.fileListFromTaskOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 files can be\rreturned."
          optional: true
        - id: options.fileListFromTaskOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.fileListFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileListFromTaskOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listFromTaskWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.File#listFromTask'
    id: 'azure-batch.File#listFromTask'
    parent: azure-batch.File
    name: 'listFromTask(jobId, taskId, options, optionalCallback)'
    summary: Lists the files in a task's directory on its compute node.
    fullName: 'azure-batch.File.listFromTask(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeFileListResult} - The deserialized result object.'
        value: '{NodeFileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task whose files you want to list.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to list children of the task\rdirectory. This parameter can be used in combination with the filter\rparameter to list specific type of files."
          optional: true
        - id: options.fileListFromTaskOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.fileListFromTaskOptions.filter
          type:
            - string
          description: "An OData $filter\rclause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-task-files."
          optional: true
        - id: options.fileListFromTaskOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 files can be\rreturned."
          optional: true
        - id: options.fileListFromTaskOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.fileListFromTaskOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromTaskOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileListFromTaskOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listFromTask(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.File#listFromComputeNodeWithHttpOperationResponse'
    id: 'azure-batch.File#listFromComputeNodeWithHttpOperationResponse'
    parent: azure-batch.File
    name: 'listFromComputeNodeWithHttpOperationResponse(poolId, nodeId, options)'
    summary: "Lists all of the files in task directories on the specified compute\rnode."
    fullName: >-
      azure-batch.File.listFromComputeNodeWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node whose files you want to\rlist."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to list children of a\rdirectory."
          optional: true
        - id: options.fileListFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileListFromComputeNodeOptions.filter
          type:
            - string
          description: "An OData\r$filter clause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files."
          optional: true
        - id: options.fileListFromComputeNodeOptions.maxResults
          type:
            - number
          description: "The\rmaximum number of items to return in the response. A maximum of 1000 files\rcan be returned."
          optional: true
        - id: options.fileListFromComputeNodeOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.fileListFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileListFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listFromComputeNodeWithHttpOperationResponse(poolId, nodeId,
        options)
    langs:
      - js
  - uid: 'azure-batch.File#listFromComputeNode'
    id: 'azure-batch.File#listFromComputeNode'
    parent: azure-batch.File
    name: 'listFromComputeNode(poolId, nodeId, options, optionalCallback)'
    summary: "Lists all of the files in task directories on the specified compute\rnode."
    fullName: >-
      azure-batch.File.listFromComputeNode(poolId, nodeId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeFileListResult} - The deserialized result object.'
        value: '{NodeFileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node whose files you want to\rlist."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "Whether to list children of a\rdirectory."
          optional: true
        - id: options.fileListFromComputeNodeOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileListFromComputeNodeOptions.filter
          type:
            - string
          description: "An OData\r$filter clause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files."
          optional: true
        - id: options.fileListFromComputeNodeOptions.maxResults
          type:
            - number
          description: "The\rmaximum number of items to return in the response. A maximum of 1000 files\rcan be returned."
          optional: true
        - id: options.fileListFromComputeNodeOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.fileListFromComputeNodeOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromComputeNodeOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.fileListFromComputeNodeOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listFromComputeNode(poolId, nodeId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.File#listFromTaskNextWithHttpOperationResponse'
    id: 'azure-batch.File#listFromTaskNextWithHttpOperationResponse'
    parent: azure-batch.File
    name: 'listFromTaskNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists the files in a task's directory on its compute node.
    fullName: >-
      azure-batch.File.listFromTaskNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileListFromTaskNextOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.fileListFromTaskNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromTaskNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileListFromTaskNextOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listFromTaskNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-batch.File#listFromTaskNext'
    id: 'azure-batch.File#listFromTaskNext'
    parent: azure-batch.File
    name: 'listFromTaskNext(nextPageLink, options, optionalCallback)'
    summary: Lists the files in a task's directory on its compute node.
    fullName: 'azure-batch.File.listFromTaskNext(nextPageLink, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeFileListResult} - The deserialized result object.'
        value: '{NodeFileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileListFromTaskNextOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.fileListFromTaskNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromTaskNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.fileListFromTaskNextOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listFromTaskNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.File#listFromComputeNodeNextWithHttpOperationResponse'
    id: 'azure-batch.File#listFromComputeNodeNextWithHttpOperationResponse'
    parent: azure-batch.File
    name: 'listFromComputeNodeNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Lists all of the files in task directories on the specified compute\rnode."
    fullName: >-
      azure-batch.File.listFromComputeNodeNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<NodeFileListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileListFromComputeNodeNextOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileListFromComputeNodeNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromComputeNodeNextOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.fileListFromComputeNodeNextOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listFromComputeNodeNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-batch.File#listFromComputeNodeNext'
    id: 'azure-batch.File#listFromComputeNodeNext'
    parent: azure-batch.File
    name: 'listFromComputeNodeNext(nextPageLink, options, optionalCallback)'
    summary: "Lists all of the files in task directories on the specified compute\rnode."
    fullName: >-
      azure-batch.File.listFromComputeNodeNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{NodeFileListResult} - The deserialized result object.'
        value: '{NodeFileListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link NodeFileListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.fileListFromComputeNodeNextOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.fileListFromComputeNodeNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.fileListFromComputeNodeNextOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.fileListFromComputeNodeNextOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listFromComputeNodeNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
references:
  - uid: azure-batch.BatchServiceClient
    name: BatchServiceClient
    fullName: azure-batch.BatchServiceClient
    isExternal: false
