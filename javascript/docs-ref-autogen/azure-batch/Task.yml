### YamlMime:UniversalReference
items:
  - uid: azure-batch.Task
    id: azure-batch.Task
    name: Task
    summary: Class representing a Task.
    fullName: azure-batch.Task
    source:
      id: azure-batch.Task
      path: lib\services\batch\lib\operations\task.js
      startLine: 2816
      remote:
        branch: master
        path: lib\services\batch\lib\operations\task.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-batch.Task.#ctor'
      - 'azure-batch.Task#addWithHttpOperationResponse'
      - 'azure-batch.Task#add'
      - 'azure-batch.Task#listWithHttpOperationResponse'
      - 'azure-batch.Task#list'
      - 'azure-batch.Task#addCollectionWithHttpOperationResponse'
      - 'azure-batch.Task#addCollection'
      - 'azure-batch.Task#deleteMethodWithHttpOperationResponse'
      - 'azure-batch.Task#deleteMethod'
      - 'azure-batch.Task#getWithHttpOperationResponse'
      - 'azure-batch.Task#get'
      - 'azure-batch.Task#updateWithHttpOperationResponse'
      - 'azure-batch.Task#update'
      - 'azure-batch.Task#listSubtasksWithHttpOperationResponse'
      - 'azure-batch.Task#listSubtasks'
      - 'azure-batch.Task#terminateWithHttpOperationResponse'
      - 'azure-batch.Task#terminate'
      - 'azure-batch.Task#reactivateWithHttpOperationResponse'
      - 'azure-batch.Task#reactivate'
      - 'azure-batch.Task#listNextWithHttpOperationResponse'
      - 'azure-batch.Task#listNext'
    langs:
      - js
  - id: 'azure-batch.Task.#ctor'
    uid: 'azure-batch.Task.#ctor'
    parent: azure-batch.Task
    name: Task(client)
    fullName: azure-batch.Task.Task(client)
    summary: Create a Task.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-batch.BatchServiceClient
          description: Reference to the service client.
      content: new Task(client)
    langs:
      - js
  - uid: 'azure-batch.Task#addWithHttpOperationResponse'
    id: 'azure-batch.Task#addWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'addWithHttpOperationResponse(jobId, task, options)'
    summary: "Adds a task to the specified job.\r\rThe maximum lifetime of a task from addition to completion is 7 days. If a\rtask has not completed within 7 days of being added it will be terminated by\rthe Batch service and left in whatever state it was in at that time."
    fullName: 'azure-batch.Task.addWithHttpOperationResponse(jobId, task, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to which the task is to be added.
        - id: task
          type:
            - object
          description: The task to be added.
        - id: task.id
          type:
            - string
          description: "A string that uniquely identifies the task within\rthe job. The ID can contain any combination of alphanumeric characters\rincluding hyphens and underscores, and cannot contain more than 64\rcharacters. The ID is case-preserving and case-insensitive (that is, you may\rnot have two IDs within a job that differ only by case)."
        - id: task.displayName
          type:
            - string
          description: "A display name for the task. The display\rname need not be unique and can contain any Unicode characters up to a\rmaximum length of 1024."
          optional: true
        - id: task.commandLine
          type:
            - string
          description: "The command line of the task. For\rmulti-instance tasks, the command line is executed as the primary task,\rafter the primary task and all subtasks have finished executing the\rcoordination command line. The command line does not run under a shell, and\rtherefore cannot take advantage of shell features such as environment\rvariable expansion. If you want to take advantage of such features, you\rshould invoke the shell in the command line, for example using \"cmd /c\rMyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: task.containerSettings
          type:
            - object
          description: "The settings for the container\runder which the task runs. If the pool that will run this task has\rcontainerConfiguration set, this must be set as well. If the pool that will\rrun this task doesn't have containerConfiguration set, this must not be set.\rWhen this is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: task.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional\roptions to the container create command. These additional options are\rsupplied as arguments to the \"docker create\" command, in addition to those\rcontrolled by the Batch Service."
          optional: true
        - id: task.containerSettings.imageName
          type:
            - string
          description: "The image to use to create\rthe container in which the task will run. This is the full image reference,\ras would be specified to \"docker pull\". If no tag is provided as part of the\rimage name, the tag \":latest\" is used as a default."
        - id: task.containerSettings.registry
          type:
            - object
          description: "The private registry which\rcontains the container image. This setting can be omitted if was already\rprovided at pool creation."
          optional: true
        - id: task.containerSettings.registry.registryServer
          type:
            - string
          description: "The\rregistry URL. If omitted, the default is \"docker.io\"."
          optional: true
        - id: task.containerSettings.registry.userName
          type:
            - string
          description: "The user name to\rlog into the registry server."
        - id: task.containerSettings.registry.password
          type:
            - string
          description: "The password to log\rinto the registry server."
        - id: task.exitConditions
          type:
            - object
          description: "How the Batch service should respond\rwhen the task completes."
          optional: true
        - id: task.exitConditions.exitCodes
          type:
            - array
          description: "A list of individual task\rexit codes and how the Batch service should respond to them."
          optional: true
        - id: task.exitConditions.exitCodeRanges
          type:
            - array
          description: "A list of task exit code\rranges and how the Batch service should respond to them."
          optional: true
        - id: task.exitConditions.preProcessingError
          type:
            - object
          description: "How the Batch\rservice should respond if the task fails to start due to an error."
          optional: true
        - id: task.exitConditions.fileUploadError
          type:
            - object
          description: "How the Batch service\rshould respond if a file upload error occurs. If the task exited with an\rexit code that was specified via exitCodes or exitCodeRanges, and then\rencountered a file upload error, then the action specified by the exit code\rtakes precedence."
          optional: true
        - id: task.exitConditions.default
          type:
            - object
          description: "How the Batch service should\rrespond if the task fails with an exit condition not covered by any of the\rother properties. This value is used if the task exits with any nonzero exit\rcode not listed in the exitCodes or exitCodeRanges collection, with a\rpre-processing error if the preProcessingError property is not present, or\rwith a file upload error if the fileUploadError property is not present. If\ryou want non-default behaviour on exit code 0, you must list it explicitly\rusing the exitCodes or exitCodeRanges collection."
          optional: true
        - id: task.exitConditions.default.jobAction
          type:
            - string
          description: "An action to take on\rthe job containing the task, if the task completes with the given exit\rcondition and the job's onTaskFailed property is\r'performExitOptionsJobAction'. Values are:\r\rnone - Take no action.\rdisable - Disable the job. This is equivalent to calling the disable job\rAPI, with a disableTasks value of requeue.\rterminate - Terminate the job. The terminateReason in the job's\rexecutionInfo is set to \"TaskFailed\". The default is none for exit code 0\rand terminate for all other exit conditions.\r\rIf the job's onTaskFailed property is noAction, then specifying this\rproperty returns an error and the add task request fails with an invalid\rproperty value error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request). Possible values include: 'none',\r'disable', 'terminate'"
          optional: true
        - id: task.exitConditions.default.dependencyAction
          type:
            - string
          description: "An action\rthat the Batch service performs on tasks that depend on this task. Values\rare:\r\rsatisfy - Satisfy the task's dependencies.\rblock - Block the task's dependencies.\r\rThe default is 'satisfy' for exit code 0, and 'block' for all other exit\rconditions. If the job's usesTaskDependencies property is set to false, then\rspecifying the dependencyAction property returns an erro and the add task\rrequest fails with an invalid property value error; if you are calling the\rREST API directly, the HTTP status code is 400  (Bad Request). Possible\rvalues include: 'satisfy', 'block'"
          optional: true
        - id: task.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service\rwill download to the compute node before running the command line. For\rmulti-instance tasks, the resource files will only be downloaded to the\rcompute node on which the primary task is executed."
          optional: true
        - id: task.outputFiles
          type:
            - array
          description: "A list of files that the Batch service\rwill upload from the compute node after running the command line. For\rmulti-instance tasks, the files will only be uploaded from the compute node\ron which the primary task is executed."
          optional: true
        - id: task.environmentSettings
          type:
            - array
          description: "A list of environment variable\rsettings for the task."
          optional: true
        - id: task.affinityInfo
          type:
            - object
          description: "A locality hint that can be used by the\rBatch service to select a compute node on which to start the new task."
          optional: true
        - id: task.affinityInfo.affinityId
          type:
            - string
          description: "An opaque string representing\rthe location of a compute node or a task that has run previously. You can\rpass the affinityId of a compute node to indicate that this task needs to\rrun on that compute node. Note that this is just a soft affinity. If the\rtarget node is busy or unavailable at the time the task is scheduled, then\rthe task will be scheduled elsewhere."
        - id: task.constraints
          type:
            - object
          description: "The execution constraints that apply to\rthis task. If you do not specify constraints, the maxTaskRetryCount is the\rmaxTaskRetryCount specified for the job, and the maxWallClockTime and\rretentionTime are infinite."
          optional: true
        - id: task.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum\relapsed time that the task may run, measured from the time the task starts.\rIf the task does not complete within the time limit, the Batch service\rterminates it. If this is not specified, there is no time limit on how long\rthe task may run."
          optional: true
        - id: task.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time\rto retain the task directory on the compute node where it ran, from the time\rit completes execution. After this time, the Batch service may delete the\rtask directory and all its contents. The default is infinite, i.e. the task\rdirectory will be retained until the compute node is removed or reimaged."
          optional: true
        - id: task.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of\rtimes the task may be retried. The Batch service retries a task if its exit\rcode is nonzero. Note that this value specifically controls the number of\rretries. The Batch service will try the task once, and may then retry up to\rthis limit. For example, if the maximum retry count is 3, Batch tries the\rtask up to 4 times (one initial try and 3 retries). If the maximum retry\rcount is 0, the Batch service does not retry the task. If the maximum retry\rcount is -1, the Batch service retries the task without limit."
          optional: true
        - id: task.userIdentity
          type:
            - object
          description: "The user identity under which the task\rruns. If omitted, the task runs as a non-administrative user unique to the\rtask."
          optional: true
        - id: task.userIdentity.userName
          type:
            - string
          description: "The name of the user identity\runder which the task is run. The userName and autoUser properties are\rmutually exclusive; you must specify one but not both."
          optional: true
        - id: task.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the\rtask is run. The userName and autoUser properties are mutually exclusive;\ryou must specify one but not both."
          optional: true
        - id: task.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto\ruser Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: task.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation\rlevel of the auto user. nonAdmin - The auto user is a standard user without\relevated access. admin - The auto user is a user with elevated access and\roperates with full Administrator permissions. The default value is nonAdmin.\rPossible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: task.multiInstanceSettings
          type:
            - object
          description: "An object that indicates that\rthe task is a multi-instance task, and contains information about how to run\rthe multi-instance task."
          optional: true
        - id: task.multiInstanceSettings.numberOfInstances
          type:
            - number
          description: "The number of\rcompute nodes required by the task. If omitted, the default is 1."
          optional: true
        - id: task.multiInstanceSettings.coordinationCommandLine
          type:
            - string
          description: "The\rcommand line to run on all the compute nodes to enable them to coordinate\rwhen the primary runs the main task command. A typical coordination command\rline launches a background service and verifies that the service is ready to\rprocess inter-node messages."
        - id: task.multiInstanceSettings.commonResourceFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will download before running the coordination\rcommand line. The difference between common resource files and task resource\rfiles is that common resource files are downloaded for all subtasks\rincluding the primary, whereas task resource files are downloaded only for\rthe primary. Also note that these resource files are not downloaded to the\rtask working directory, but instead are downloaded to the task root\rdirectory (one directory above the working directory)."
          optional: true
        - id: task.dependsOn
          type:
            - object
          description: "The tasks that this task depends on. This\rtask will not be scheduled until all tasks that it depends on have completed\rsuccessfully. If any of those tasks fail and exhaust their retry counts,\rthis task will never be scheduled. If the job does not have\rusesTaskDependencies set to true, and this element is present, the request\rfails with error code TaskDependenciesNotSpecifiedOnJob."
          optional: true
        - id: task.dependsOn.taskIds
          type:
            - array
          description: "The list of task IDs that this task\rdepends on. All tasks in this list must complete successfully before the\rdependent task can be scheduled. The taskIds collection is limited to 64000\rcharacters total (i.e. the combined length of all task IDs). If the taskIds\rcollection exceeds the maximum length, the Add Task request fails with error\rcode TaskDependencyListTooLong. In this case consider using task ID ranges\rinstead."
          optional: true
        - id: task.dependsOn.taskIdRanges
          type:
            - array
          description: "The list of task ID ranges that\rthis task depends on. All tasks in all ranges must complete successfully\rbefore the dependent task can be scheduled."
          optional: true
        - id: task.applicationPackageReferences
          type:
            - array
          description: "A list of application\rpackages that the Batch service will deploy to the compute node before\rrunning the command line. Application packages are downloaded and deployed\rto a shared directory, not the task working directory. Therefore, if a\rreferenced package is already on the compute node, and is up to date, then\rit is not re-downloaded; the existing copy on the compute node is used. If a\rreferenced application package cannot be installed, for example because the\rpackage has been deleted or because download failed, the task fails."
          optional: true
        - id: task.authenticationTokenSettings
          type:
            - object
          description: "The settings for an\rauthentication token that the task can use to perform Batch service\roperations. If this property is set, the Batch service provides the task\rwith an authentication token which can be used to authenticate Batch service\roperations without requiring an account access key. The token is provided\rvia the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations\rthat the task can carry out using the token depend on the settings. For\rexample, a task can request job permissions in order to add other tasks to\rthe job, or check the status of the job or of other tasks under the job."
          optional: true
        - id: task.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources\rto which the token grants access. The authentication token grants access to\ra limited set of Batch service operations. Currently the only supported\rvalue for the access property is 'job', which grants access to all\roperations related to the job which contains the task."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskAddOptions.timeout
          type:
            - number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated\rrequest identity, in the form of a GUID with no decoration such as curly\rbraces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskAddOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.taskAddOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addWithHttpOperationResponse(jobId, task, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#add'
    id: 'azure-batch.Task#add'
    parent: azure-batch.Task
    name: 'add(jobId, task, options, optionalCallback)'
    summary: "Adds a task to the specified job.\r\rThe maximum lifetime of a task from addition to completion is 7 days. If a\rtask has not completed within 7 days of being added it will be terminated by\rthe Batch service and left in whatever state it was in at that time."
    fullName: 'azure-batch.Task.add(jobId, task, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job to which the task is to be added.
        - id: task
          type:
            - object
          description: The task to be added.
        - id: task.id
          type:
            - string
          description: "A string that uniquely identifies the task within\rthe job. The ID can contain any combination of alphanumeric characters\rincluding hyphens and underscores, and cannot contain more than 64\rcharacters. The ID is case-preserving and case-insensitive (that is, you may\rnot have two IDs within a job that differ only by case)."
        - id: task.displayName
          type:
            - string
          description: "A display name for the task. The display\rname need not be unique and can contain any Unicode characters up to a\rmaximum length of 1024."
          optional: true
        - id: task.commandLine
          type:
            - string
          description: "The command line of the task. For\rmulti-instance tasks, the command line is executed as the primary task,\rafter the primary task and all subtasks have finished executing the\rcoordination command line. The command line does not run under a shell, and\rtherefore cannot take advantage of shell features such as environment\rvariable expansion. If you want to take advantage of such features, you\rshould invoke the shell in the command line, for example using \"cmd /c\rMyCommand\" in Windows or \"/bin/sh -c MyCommand\" in Linux."
        - id: task.containerSettings
          type:
            - object
          description: "The settings for the container\runder which the task runs. If the pool that will run this task has\rcontainerConfiguration set, this must be set as well. If the pool that will\rrun this task doesn't have containerConfiguration set, this must not be set.\rWhen this is specified, all directories recursively below the\rAZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the node) are\rmapped into the container, all task environment variables are mapped into\rthe container, and the task command line is executed in the container."
          optional: true
        - id: task.containerSettings.containerRunOptions
          type:
            - string
          description: "Additional\roptions to the container create command. These additional options are\rsupplied as arguments to the \"docker create\" command, in addition to those\rcontrolled by the Batch Service."
          optional: true
        - id: task.containerSettings.imageName
          type:
            - string
          description: "The image to use to create\rthe container in which the task will run. This is the full image reference,\ras would be specified to \"docker pull\". If no tag is provided as part of the\rimage name, the tag \":latest\" is used as a default."
        - id: task.containerSettings.registry
          type:
            - object
          description: "The private registry which\rcontains the container image. This setting can be omitted if was already\rprovided at pool creation."
          optional: true
        - id: task.containerSettings.registry.registryServer
          type:
            - string
          description: "The\rregistry URL. If omitted, the default is \"docker.io\"."
          optional: true
        - id: task.containerSettings.registry.userName
          type:
            - string
          description: "The user name to\rlog into the registry server."
        - id: task.containerSettings.registry.password
          type:
            - string
          description: "The password to log\rinto the registry server."
        - id: task.exitConditions
          type:
            - object
          description: "How the Batch service should respond\rwhen the task completes."
          optional: true
        - id: task.exitConditions.exitCodes
          type:
            - array
          description: "A list of individual task\rexit codes and how the Batch service should respond to them."
          optional: true
        - id: task.exitConditions.exitCodeRanges
          type:
            - array
          description: "A list of task exit code\rranges and how the Batch service should respond to them."
          optional: true
        - id: task.exitConditions.preProcessingError
          type:
            - object
          description: "How the Batch\rservice should respond if the task fails to start due to an error."
          optional: true
        - id: task.exitConditions.fileUploadError
          type:
            - object
          description: "How the Batch service\rshould respond if a file upload error occurs. If the task exited with an\rexit code that was specified via exitCodes or exitCodeRanges, and then\rencountered a file upload error, then the action specified by the exit code\rtakes precedence."
          optional: true
        - id: task.exitConditions.default
          type:
            - object
          description: "How the Batch service should\rrespond if the task fails with an exit condition not covered by any of the\rother properties. This value is used if the task exits with any nonzero exit\rcode not listed in the exitCodes or exitCodeRanges collection, with a\rpre-processing error if the preProcessingError property is not present, or\rwith a file upload error if the fileUploadError property is not present. If\ryou want non-default behaviour on exit code 0, you must list it explicitly\rusing the exitCodes or exitCodeRanges collection."
          optional: true
        - id: task.exitConditions.default.jobAction
          type:
            - string
          description: "An action to take on\rthe job containing the task, if the task completes with the given exit\rcondition and the job's onTaskFailed property is\r'performExitOptionsJobAction'. Values are:\r\rnone - Take no action.\rdisable - Disable the job. This is equivalent to calling the disable job\rAPI, with a disableTasks value of requeue.\rterminate - Terminate the job. The terminateReason in the job's\rexecutionInfo is set to \"TaskFailed\". The default is none for exit code 0\rand terminate for all other exit conditions.\r\rIf the job's onTaskFailed property is noAction, then specifying this\rproperty returns an error and the add task request fails with an invalid\rproperty value error; if you are calling the REST API directly, the HTTP\rstatus code is 400 (Bad Request). Possible values include: 'none',\r'disable', 'terminate'"
          optional: true
        - id: task.exitConditions.default.dependencyAction
          type:
            - string
          description: "An action\rthat the Batch service performs on tasks that depend on this task. Values\rare:\r\rsatisfy - Satisfy the task's dependencies.\rblock - Block the task's dependencies.\r\rThe default is 'satisfy' for exit code 0, and 'block' for all other exit\rconditions. If the job's usesTaskDependencies property is set to false, then\rspecifying the dependencyAction property returns an erro and the add task\rrequest fails with an invalid property value error; if you are calling the\rREST API directly, the HTTP status code is 400  (Bad Request). Possible\rvalues include: 'satisfy', 'block'"
          optional: true
        - id: task.resourceFiles
          type:
            - array
          description: "A list of files that the Batch service\rwill download to the compute node before running the command line. For\rmulti-instance tasks, the resource files will only be downloaded to the\rcompute node on which the primary task is executed."
          optional: true
        - id: task.outputFiles
          type:
            - array
          description: "A list of files that the Batch service\rwill upload from the compute node after running the command line. For\rmulti-instance tasks, the files will only be uploaded from the compute node\ron which the primary task is executed."
          optional: true
        - id: task.environmentSettings
          type:
            - array
          description: "A list of environment variable\rsettings for the task."
          optional: true
        - id: task.affinityInfo
          type:
            - object
          description: "A locality hint that can be used by the\rBatch service to select a compute node on which to start the new task."
          optional: true
        - id: task.affinityInfo.affinityId
          type:
            - string
          description: "An opaque string representing\rthe location of a compute node or a task that has run previously. You can\rpass the affinityId of a compute node to indicate that this task needs to\rrun on that compute node. Note that this is just a soft affinity. If the\rtarget node is busy or unavailable at the time the task is scheduled, then\rthe task will be scheduled elsewhere."
        - id: task.constraints
          type:
            - object
          description: "The execution constraints that apply to\rthis task. If you do not specify constraints, the maxTaskRetryCount is the\rmaxTaskRetryCount specified for the job, and the maxWallClockTime and\rretentionTime are infinite."
          optional: true
        - id: task.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum\relapsed time that the task may run, measured from the time the task starts.\rIf the task does not complete within the time limit, the Batch service\rterminates it. If this is not specified, there is no time limit on how long\rthe task may run."
          optional: true
        - id: task.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum time\rto retain the task directory on the compute node where it ran, from the time\rit completes execution. After this time, the Batch service may delete the\rtask directory and all its contents. The default is infinite, i.e. the task\rdirectory will be retained until the compute node is removed or reimaged."
          optional: true
        - id: task.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number of\rtimes the task may be retried. The Batch service retries a task if its exit\rcode is nonzero. Note that this value specifically controls the number of\rretries. The Batch service will try the task once, and may then retry up to\rthis limit. For example, if the maximum retry count is 3, Batch tries the\rtask up to 4 times (one initial try and 3 retries). If the maximum retry\rcount is 0, the Batch service does not retry the task. If the maximum retry\rcount is -1, the Batch service retries the task without limit."
          optional: true
        - id: task.userIdentity
          type:
            - object
          description: "The user identity under which the task\rruns. If omitted, the task runs as a non-administrative user unique to the\rtask."
          optional: true
        - id: task.userIdentity.userName
          type:
            - string
          description: "The name of the user identity\runder which the task is run. The userName and autoUser properties are\rmutually exclusive; you must specify one but not both."
          optional: true
        - id: task.userIdentity.autoUser
          type:
            - object
          description: "The auto user under which the\rtask is run. The userName and autoUser properties are mutually exclusive;\ryou must specify one but not both."
          optional: true
        - id: task.userIdentity.autoUser.scope
          type:
            - string
          description: "The scope for the auto\ruser Values are:\r\rpool - specifies that the task runs as the common auto user account which is\rcreated on every node in a pool.\rtask - specifies that the service should create a new user for the task.\rThe default value is task. Possible values include: 'task', 'pool'"
          optional: true
        - id: task.userIdentity.autoUser.elevationLevel
          type:
            - string
          description: "The elevation\rlevel of the auto user. nonAdmin - The auto user is a standard user without\relevated access. admin - The auto user is a user with elevated access and\roperates with full Administrator permissions. The default value is nonAdmin.\rPossible values include: 'nonAdmin', 'admin'"
          optional: true
        - id: task.multiInstanceSettings
          type:
            - object
          description: "An object that indicates that\rthe task is a multi-instance task, and contains information about how to run\rthe multi-instance task."
          optional: true
        - id: task.multiInstanceSettings.numberOfInstances
          type:
            - number
          description: "The number of\rcompute nodes required by the task. If omitted, the default is 1."
          optional: true
        - id: task.multiInstanceSettings.coordinationCommandLine
          type:
            - string
          description: "The\rcommand line to run on all the compute nodes to enable them to coordinate\rwhen the primary runs the main task command. A typical coordination command\rline launches a background service and verifies that the service is ready to\rprocess inter-node messages."
        - id: task.multiInstanceSettings.commonResourceFiles
          type:
            - array
          description: "A list of\rfiles that the Batch service will download before running the coordination\rcommand line. The difference between common resource files and task resource\rfiles is that common resource files are downloaded for all subtasks\rincluding the primary, whereas task resource files are downloaded only for\rthe primary. Also note that these resource files are not downloaded to the\rtask working directory, but instead are downloaded to the task root\rdirectory (one directory above the working directory)."
          optional: true
        - id: task.dependsOn
          type:
            - object
          description: "The tasks that this task depends on. This\rtask will not be scheduled until all tasks that it depends on have completed\rsuccessfully. If any of those tasks fail and exhaust their retry counts,\rthis task will never be scheduled. If the job does not have\rusesTaskDependencies set to true, and this element is present, the request\rfails with error code TaskDependenciesNotSpecifiedOnJob."
          optional: true
        - id: task.dependsOn.taskIds
          type:
            - array
          description: "The list of task IDs that this task\rdepends on. All tasks in this list must complete successfully before the\rdependent task can be scheduled. The taskIds collection is limited to 64000\rcharacters total (i.e. the combined length of all task IDs). If the taskIds\rcollection exceeds the maximum length, the Add Task request fails with error\rcode TaskDependencyListTooLong. In this case consider using task ID ranges\rinstead."
          optional: true
        - id: task.dependsOn.taskIdRanges
          type:
            - array
          description: "The list of task ID ranges that\rthis task depends on. All tasks in all ranges must complete successfully\rbefore the dependent task can be scheduled."
          optional: true
        - id: task.applicationPackageReferences
          type:
            - array
          description: "A list of application\rpackages that the Batch service will deploy to the compute node before\rrunning the command line. Application packages are downloaded and deployed\rto a shared directory, not the task working directory. Therefore, if a\rreferenced package is already on the compute node, and is up to date, then\rit is not re-downloaded; the existing copy on the compute node is used. If a\rreferenced application package cannot be installed, for example because the\rpackage has been deleted or because download failed, the task fails."
          optional: true
        - id: task.authenticationTokenSettings
          type:
            - object
          description: "The settings for an\rauthentication token that the task can use to perform Batch service\roperations. If this property is set, the Batch service provides the task\rwith an authentication token which can be used to authenticate Batch service\roperations without requiring an account access key. The token is provided\rvia the AZ_BATCH_AUTHENTICATION_TOKEN environment variable. The operations\rthat the task can carry out using the token depend on the settings. For\rexample, a task can request job permissions in order to add other tasks to\rthe job, or check the status of the job or of other tasks under the job."
          optional: true
        - id: task.authenticationTokenSettings.access
          type:
            - array
          description: "The Batch resources\rto which the token grants access. The authentication token grants access to\ra limited set of Batch service operations. Currently the only supported\rvalue for the access property is 'job', which grants access to all\roperations related to the job which contains the task."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskAddOptions.timeout
          type:
            - number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskAddOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated\rrequest identity, in the form of a GUID with no decoration such as curly\rbraces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskAddOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.taskAddOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function add(jobId, task, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#listWithHttpOperationResponse'
    id: 'azure-batch.Task#listWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'listWithHttpOperationResponse(jobId, options)'
    summary: "Lists all of the tasks that are associated with the specified job.\r\rFor multi-instance tasks, information such as affinityId, executionInfo and\rnodeInfo refer to the primary task. Use the list subtasks API to retrieve\rinformation about subtasks."
    fullName: 'azure-batch.Task.listWithHttpOperationResponse(jobId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskListOptions.filter
          type:
            - string
          description: "An OData $filter clause.\rFor more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks."
          optional: true
        - id: options.taskListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskListOptions.maxResults
          type:
            - number
          description: "The maximum number of\ritems to return in the response. A maximum of 1000 tasks can be returned."
          optional: true
        - id: options.taskListOptions.timeout
          type:
            - number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated\rrequest identity, in the form of a GUID with no decoration such as curly\rbraces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskListOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.taskListOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listWithHttpOperationResponse(jobId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#list'
    id: 'azure-batch.Task#list'
    parent: azure-batch.Task
    name: 'list(jobId, options, optionalCallback)'
    summary: "Lists all of the tasks that are associated with the specified job.\r\rFor multi-instance tasks, information such as affinityId, executionInfo and\rnodeInfo refer to the primary task. Use the list subtasks API to retrieve\rinformation about subtasks."
    fullName: 'azure-batch.Task.list(jobId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTaskListResult} - The deserialized result object.'
        value: '{CloudTaskListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTaskListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTaskListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskListOptions.filter
          type:
            - string
          description: "An OData $filter clause.\rFor more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks."
          optional: true
        - id: options.taskListOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskListOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskListOptions.maxResults
          type:
            - number
          description: "The maximum number of\ritems to return in the response. A maximum of 1000 tasks can be returned."
          optional: true
        - id: options.taskListOptions.timeout
          type:
            - number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated\rrequest identity, in the form of a GUID with no decoration such as curly\rbraces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskListOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.taskListOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(jobId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#addCollectionWithHttpOperationResponse'
    id: 'azure-batch.Task#addCollectionWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'addCollectionWithHttpOperationResponse(jobId, value, options)'
    summary: "Adds a collection of tasks to the specified job.\r\rNote that each task must have a unique ID. The Batch service may not return\rthe results for each task in the same order the tasks were submitted in this\rrequest. If the server times out or the connection is closed during the\rrequest, the request may have been partially or fully processed, or not at\rall. In such cases, the user should re-issue the request. Note that it is up\rto the user to correctly handle failures when re-issuing a request. For\rexample, you should use the same task IDs during a retry so that if the\rprior operation succeeded, the retry will not create extra tasks\runexpectedly. If the response contains any tasks which failed to add, a\rclient can retry the request. In a retry, it is most efficient to resubmit\ronly tasks that failed to add, and to omit tasks that were successfully\radded on the first attempt. The maximum lifetime of a task from addition to\rcompletion is 7 days. If a task has not completed within 7 days of being\radded it will be terminated by the Batch service and left in whatever state\rit was in at that time."
    fullName: >-
      azure-batch.Task.addCollectionWithHttpOperationResponse(jobId, value,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<TaskAddCollectionResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<TaskAddCollectionResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: "The ID of the job to which the task collection is to\rbe added."
        - id: value
          type:
            - array
          description: "The collection of tasks to add. The total serialized\rsize of this collection must be less than 4MB. If it is greater than 4MB\r(for example if each task has 100's of resource files or environment\rvariables), the request will fail with code 'RequestBodyTooLarge' and should\rbe retried again with fewer tasks."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddCollectionOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskAddCollectionOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskAddCollectionOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskAddCollectionOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskAddCollectionOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addCollectionWithHttpOperationResponse(jobId, value, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#addCollection'
    id: 'azure-batch.Task#addCollection'
    parent: azure-batch.Task
    name: 'addCollection(jobId, value, options, optionalCallback)'
    summary: "Adds a collection of tasks to the specified job.\r\rNote that each task must have a unique ID. The Batch service may not return\rthe results for each task in the same order the tasks were submitted in this\rrequest. If the server times out or the connection is closed during the\rrequest, the request may have been partially or fully processed, or not at\rall. In such cases, the user should re-issue the request. Note that it is up\rto the user to correctly handle failures when re-issuing a request. For\rexample, you should use the same task IDs during a retry so that if the\rprior operation succeeded, the retry will not create extra tasks\runexpectedly. If the response contains any tasks which failed to add, a\rclient can retry the request. In a retry, it is most efficient to resubmit\ronly tasks that failed to add, and to omit tasks that were successfully\radded on the first attempt. The maximum lifetime of a task from addition to\rcompletion is 7 days. If a task has not completed within 7 days of being\radded it will be terminated by the Batch service and left in whatever state\rit was in at that time."
    fullName: 'azure-batch.Task.addCollection(jobId, value, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{TaskAddCollectionResult} - The deserialized result object.'
        value: '{TaskAddCollectionResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TaskAddCollectionResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link TaskAddCollectionResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: "The ID of the job to which the task collection is to\rbe added."
        - id: value
          type:
            - array
          description: "The collection of tasks to add. The total serialized\rsize of this collection must be less than 4MB. If it is greater than 4MB\r(for example if each task has 100's of resource files or environment\rvariables), the request will fail with code 'RequestBodyTooLarge' and should\rbe retried again with fewer tasks."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskAddCollectionOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskAddCollectionOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskAddCollectionOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskAddCollectionOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskAddCollectionOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function addCollection(jobId, value, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#deleteMethodWithHttpOperationResponse'
    id: 'azure-batch.Task#deleteMethodWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'deleteMethodWithHttpOperationResponse(jobId, taskId, options)'
    summary: "Deletes a task from the specified job.\r\rWhen a task is deleted, all of the files in its directory on the compute\rnode where it ran are also deleted (regardless of the retention time). For\rmulti-instance tasks, the delete task operation applies synchronously to the\rprimary task; subtasks and their files are then deleted asynchronously in\rthe background."
    fullName: >-
      azure-batch.Task.deleteMethodWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job from which to delete the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskDeleteMethodOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskDeleteMethodOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskDeleteMethodOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskDeleteMethodOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.taskDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function deleteMethodWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#deleteMethod'
    id: 'azure-batch.Task#deleteMethod'
    parent: azure-batch.Task
    name: 'deleteMethod(jobId, taskId, options, optionalCallback)'
    summary: "Deletes a task from the specified job.\r\rWhen a task is deleted, all of the files in its directory on the compute\rnode where it ran are also deleted (regardless of the retention time). For\rmulti-instance tasks, the delete task operation applies synchronously to the\rprimary task; subtasks and their files are then deleted asynchronously in\rthe background."
    fullName: 'azure-batch.Task.deleteMethod(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job from which to delete the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskDeleteMethodOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskDeleteMethodOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskDeleteMethodOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskDeleteMethodOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskDeleteMethodOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskDeleteMethodOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.taskDeleteMethodOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskDeleteMethodOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskDeleteMethodOptions.ifUnmodifiedSince
          type:
            - date
          description: "A\rtimestamp indicating the last modified time of the resource known to the\rclient. The operation will be performed only if the resource on the service\rhas not been modified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteMethod(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#getWithHttpOperationResponse'
    id: 'azure-batch.Task#getWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'getWithHttpOperationResponse(jobId, taskId, options)'
    summary: "Gets information about the specified task.\r\rFor multi-instance tasks, information such as affinityId, executionInfo and\rnodeInfo refer to the primary task. Use the list subtasks API to retrieve\rinformation about subtasks."
    fullName: 'azure-batch.Task.getWithHttpOperationResponse(jobId, taskId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<CloudTask>} - The deserialized result object.'
        value: '{HttpOperationResponse<CloudTask>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to get information about.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskGetOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskGetOptions.timeout
          type:
            - number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated\rrequest identity, in the form of a GUID with no decoration such as curly\rbraces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskGetOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.taskGetOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskGetOptions.ifMatch
          type:
            - string
          description: "An ETag value associated\rwith the version of the resource known to the client. The operation will be\rperformed only if the resource's current ETag on the service exactly matches\rthe value specified by the client."
          optional: true
        - id: options.taskGetOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskGetOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskGetOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#get'
    id: 'azure-batch.Task#get'
    parent: azure-batch.Task
    name: 'get(jobId, taskId, options, optionalCallback)'
    summary: "Gets information about the specified task.\r\rFor multi-instance tasks, information such as affinityId, executionInfo and\rnodeInfo refer to the primary task. Use the list subtasks API to retrieve\rinformation about subtasks."
    fullName: 'azure-batch.Task.get(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTask} - The deserialized result object.'
        value: '{CloudTask} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTask} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTask} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job that contains the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to get information about.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskGetOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskGetOptions.select
          type:
            - string
          description: An OData $select clause.
          optional: true
        - id: options.taskGetOptions.expand
          type:
            - string
          description: An OData $expand clause.
          optional: true
        - id: options.taskGetOptions.timeout
          type:
            - number
          description: "The maximum time that the\rserver can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated\rrequest identity, in the form of a GUID with no decoration such as curly\rbraces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskGetOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.taskGetOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskGetOptions.ifMatch
          type:
            - string
          description: "An ETag value associated\rwith the version of the resource known to the client. The operation will be\rperformed only if the resource's current ETag on the service exactly matches\rthe value specified by the client."
          optional: true
        - id: options.taskGetOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskGetOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskGetOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#updateWithHttpOperationResponse'
    id: 'azure-batch.Task#updateWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'updateWithHttpOperationResponse(jobId, taskId, options)'
    summary: Updates the properties of the specified task.
    fullName: 'azure-batch.Task.updateWithHttpOperationResponse(jobId, taskId, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to update.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.constraints
          type:
            - object
          description: "Constraints that apply to this task.\rIf omitted, the task is given the default constraints. For multi-instance\rtasks, updating the retention time applies only to the primary task and not\rsubtasks."
          optional: true
        - id: options.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum\relapsed time that the task may run, measured from the time the task starts.\rIf the task does not complete within the time limit, the Batch service\rterminates it. If this is not specified, there is no time limit on how long\rthe task may run."
          optional: true
        - id: options.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum\rtime to retain the task directory on the compute node where it ran, from the\rtime it completes execution. After this time, the Batch service may delete\rthe task directory and all its contents. The default is infinite, i.e. the\rtask directory will be retained until the compute node is removed or\rreimaged."
          optional: true
        - id: options.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number\rof times the task may be retried. The Batch service retries a task if its\rexit code is nonzero. Note that this value specifically controls the number\rof retries. The Batch service will try the task once, and may then retry up\rto this limit. For example, if the maximum retry count is 3, Batch tries the\rtask up to 4 times (one initial try and 3 retries). If the maximum retry\rcount is 0, the Batch service does not retry the task. If the maximum retry\rcount is -1, the Batch service retries the task without limit."
          optional: true
        - id: options.taskUpdateOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskUpdateOptions.timeout
          type:
            - number
          description: "The maximum time that\rthe server can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.taskUpdateOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskUpdateOptions.ifMatch
          type:
            - string
          description: "An ETag value associated\rwith the version of the resource known to the client. The operation will be\rperformed only if the resource's current ETag on the service exactly matches\rthe value specified by the client."
          optional: true
        - id: options.taskUpdateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskUpdateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function updateWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#update'
    id: 'azure-batch.Task#update'
    parent: azure-batch.Task
    name: 'update(jobId, taskId, options, optionalCallback)'
    summary: Updates the properties of the specified task.
    fullName: 'azure-batch.Task.update(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to update.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.constraints
          type:
            - object
          description: "Constraints that apply to this task.\rIf omitted, the task is given the default constraints. For multi-instance\rtasks, updating the retention time applies only to the primary task and not\rsubtasks."
          optional: true
        - id: options.constraints.maxWallClockTime
          type:
            - azure-batch.moment.duration
          description: "The maximum\relapsed time that the task may run, measured from the time the task starts.\rIf the task does not complete within the time limit, the Batch service\rterminates it. If this is not specified, there is no time limit on how long\rthe task may run."
          optional: true
        - id: options.constraints.retentionTime
          type:
            - azure-batch.moment.duration
          description: "The minimum\rtime to retain the task directory on the compute node where it ran, from the\rtime it completes execution. After this time, the Batch service may delete\rthe task directory and all its contents. The default is infinite, i.e. the\rtask directory will be retained until the compute node is removed or\rreimaged."
          optional: true
        - id: options.constraints.maxTaskRetryCount
          type:
            - number
          description: "The maximum number\rof times the task may be retried. The Batch service retries a task if its\rexit code is nonzero. Note that this value specifically controls the number\rof retries. The Batch service will try the task once, and may then retry up\rto this limit. For example, if the maximum retry count is 3, Batch tries the\rtask up to 4 times (one initial try and 3 retries). If the maximum retry\rcount is 0, the Batch service does not retry the task. If the maximum retry\rcount is -1, the Batch service retries the task without limit."
          optional: true
        - id: options.taskUpdateOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskUpdateOptions.timeout
          type:
            - number
          description: "The maximum time that\rthe server can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskUpdateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskUpdateOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.taskUpdateOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskUpdateOptions.ifMatch
          type:
            - string
          description: "An ETag value associated\rwith the version of the resource known to the client. The operation will be\rperformed only if the resource's current ETag on the service exactly matches\rthe value specified by the client."
          optional: true
        - id: options.taskUpdateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskUpdateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskUpdateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function update(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#listSubtasksWithHttpOperationResponse'
    id: 'azure-batch.Task#listSubtasksWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'listSubtasksWithHttpOperationResponse(jobId, taskId, options)'
    summary: "Lists all of the subtasks that are associated with the specified\rmulti-instance task.\r\rIf the task is not a multi-instance task then this returns an empty\rcollection."
    fullName: >-
      azure-batch.Task.listSubtasksWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudTaskListSubtasksResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<CloudTaskListSubtasksResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: taskId
          type:
            - string
          description: The ID of the task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListSubtasksOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskListSubtasksOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.taskListSubtasksOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskListSubtasksOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskListSubtasksOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskListSubtasksOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listSubtasksWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#listSubtasks'
    id: 'azure-batch.Task#listSubtasks'
    parent: azure-batch.Task
    name: 'listSubtasks(jobId, taskId, options, optionalCallback)'
    summary: "Lists all of the subtasks that are associated with the specified\rmulti-instance task.\r\rIf the task is not a multi-instance task then this returns an empty\rcollection."
    fullName: 'azure-batch.Task.listSubtasks(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTaskListSubtasksResult} - The deserialized result object.'
        value: '{CloudTaskListSubtasksResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTaskListSubtasksResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTaskListSubtasksResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job.
        - id: taskId
          type:
            - string
          description: The ID of the task.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListSubtasksOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskListSubtasksOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.taskListSubtasksOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskListSubtasksOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskListSubtasksOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskListSubtasksOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listSubtasks(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#terminateWithHttpOperationResponse'
    id: 'azure-batch.Task#terminateWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'terminateWithHttpOperationResponse(jobId, taskId, options)'
    summary: "Terminates the specified task.\r\rWhen the task has been terminated, it moves to the completed state. For\rmulti-instance tasks, the terminate task operation applies synchronously to\rthe primary task; subtasks are then terminated asynchronously in the\rbackground."
    fullName: >-
      azure-batch.Task.terminateWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to terminate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskTerminateOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskTerminateOptions.timeout
          type:
            - number
          description: "The maximum time that\rthe server can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskTerminateOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskTerminateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.taskTerminateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskTerminateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function terminateWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#terminate'
    id: 'azure-batch.Task#terminate'
    parent: azure-batch.Task
    name: 'terminate(jobId, taskId, options, optionalCallback)'
    summary: "Terminates the specified task.\r\rWhen the task has been terminated, it moves to the completed state. For\rmulti-instance tasks, the terminate task operation applies synchronously to\rthe primary task; subtasks are then terminated asynchronously in the\rbackground."
    fullName: 'azure-batch.Task.terminate(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to terminate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskTerminateOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskTerminateOptions.timeout
          type:
            - number
          description: "The maximum time that\rthe server can spend processing the request, in seconds. The default is 30\rseconds."
          optional: true
        - id: options.taskTerminateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskTerminateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskTerminateOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskTerminateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.taskTerminateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskTerminateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskTerminateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function terminate(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#reactivateWithHttpOperationResponse'
    id: 'azure-batch.Task#reactivateWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'reactivateWithHttpOperationResponse(jobId, taskId, options)'
    summary: "Reactivates a task, allowing it to run again even if its retry\rcount has been exhausted.\r\rReactivation makes a task eligible to be retried again up to its maximum\rretry count. The task's state is changed to active. As the task is no longer\rin the completed state, any previous exit code or failure information is no\rlonger available after reactivation. Each time a task is reactivated, its\rretry count is reset to 0. Reactivation will fail for tasks that are not\rcompleted or that previously completed successfully (with an exit code of\r0). Additionally, it will fail if the job has completed (or is terminating\ror deleting)."
    fullName: >-
      azure-batch.Task.reactivateWithHttpOperationResponse(jobId, taskId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to reactivate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskReactivateOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskReactivateOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskReactivateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskReactivateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskReactivateOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskReactivateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.taskReactivateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskReactivateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskReactivateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function reactivateWithHttpOperationResponse(jobId, taskId, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#reactivate'
    id: 'azure-batch.Task#reactivate'
    parent: azure-batch.Task
    name: 'reactivate(jobId, taskId, options, optionalCallback)'
    summary: "Reactivates a task, allowing it to run again even if its retry\rcount has been exhausted.\r\rReactivation makes a task eligible to be retried again up to its maximum\rretry count. The task's state is changed to active. As the task is no longer\rin the completed state, any previous exit code or failure information is no\rlonger available after reactivation. Each time a task is reactivated, its\rretry count is reset to 0. Reactivation will fail for tasks that are not\rcompleted or that previously completed successfully (with an exit code of\r0). Additionally, it will fail if the job has completed (or is terminating\ror deleting)."
    fullName: 'azure-batch.Task.reactivate(jobId, taskId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: jobId
          type:
            - string
          description: The ID of the job containing the task.
        - id: taskId
          type:
            - string
          description: The ID of the task to reactivate.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskReactivateOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.taskReactivateOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.taskReactivateOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskReactivateOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.taskReactivateOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.taskReactivateOptions.ifMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice exactly matches the value specified by the client."
          optional: true
        - id: options.taskReactivateOptions.ifNoneMatch
          type:
            - string
          description: "An ETag value\rassociated with the version of the resource known to the client. The\roperation will be performed only if the resource's current ETag on the\rservice does not match the value specified by the client."
          optional: true
        - id: options.taskReactivateOptions.ifModifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has been\rmodified since the specified time."
          optional: true
        - id: options.taskReactivateOptions.ifUnmodifiedSince
          type:
            - date
          description: "A timestamp\rindicating the last modified time of the resource known to the client. The\roperation will be performed only if the resource on the service has not been\rmodified since the specified time."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function reactivate(jobId, taskId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.Task#listNextWithHttpOperationResponse'
    id: 'azure-batch.Task#listNextWithHttpOperationResponse'
    parent: azure-batch.Task
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Lists all of the tasks that are associated with the specified job.\r\rFor multi-instance tasks, information such as affinityId, executionInfo and\rnodeInfo refer to the primary task. Use the list subtasks API to retrieve\rinformation about subtasks."
    fullName: 'azure-batch.Task.listNextWithHttpOperationResponse(nextPageLink, options)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<CloudTaskListResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListNextOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskListNextOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.taskListNextOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-batch.Task#listNext'
    id: 'azure-batch.Task#listNext'
    parent: azure-batch.Task
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: "Lists all of the tasks that are associated with the specified job.\r\rFor multi-instance tasks, information such as affinityId, executionInfo and\rnodeInfo refer to the primary task. Use the list subtasks API to retrieve\rinformation about subtasks."
    fullName: 'azure-batch.Task.listNext(nextPageLink, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{CloudTaskListResult} - The deserialized result object.'
        value: '{CloudTaskListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTaskListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link CloudTaskListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.taskListNextOptions
          type:
            - object
          description: "Additional parameters for the\roperation"
          optional: true
        - id: options.taskListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.taskListNextOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.taskListNextOptions.ocpDate
          type:
            - date
          description: "The time the request was\rissued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-batch.BatchServiceClient
    name: BatchServiceClient
    fullName: azure-batch.BatchServiceClient
    isExternal: false
