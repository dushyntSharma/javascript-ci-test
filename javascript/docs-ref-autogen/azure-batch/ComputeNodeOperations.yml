### YamlMime:UniversalReference
items:
  - uid: azure-batch.ComputeNodeOperations
    id: azure-batch.ComputeNodeOperations
    name: ComputeNodeOperations
    summary: Class representing a ComputeNodeOperations.
    fullName: azure-batch.ComputeNodeOperations
    source:
      id: azure-batch.ComputeNodeOperations
      path: lib\services\batch\lib\operations\computeNodeOperations.js
      startLine: 2700
      remote:
        branch: master
        path: lib\services\batch\lib\operations\computeNodeOperations.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-batch.ComputeNodeOperations.#ctor'
      - 'azure-batch.ComputeNodeOperations#addUserWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#addUser'
      - 'azure-batch.ComputeNodeOperations#deleteUserWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#deleteUser'
      - 'azure-batch.ComputeNodeOperations#updateUserWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#updateUser'
      - 'azure-batch.ComputeNodeOperations#getWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#get'
      - 'azure-batch.ComputeNodeOperations#rebootWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#reboot'
      - 'azure-batch.ComputeNodeOperations#reimageWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#reimage'
      - >-
        azure-batch.ComputeNodeOperations#disableSchedulingWithHttpOperationResponse
      - 'azure-batch.ComputeNodeOperations#disableScheduling'
      - >-
        azure-batch.ComputeNodeOperations#enableSchedulingWithHttpOperationResponse
      - 'azure-batch.ComputeNodeOperations#enableScheduling'
      - >-
        azure-batch.ComputeNodeOperations#getRemoteLoginSettingsWithHttpOperationResponse
      - 'azure-batch.ComputeNodeOperations#getRemoteLoginSettings'
      - >-
        azure-batch.ComputeNodeOperations#getRemoteDesktopWithHttpOperationResponse
      - 'azure-batch.ComputeNodeOperations#getRemoteDesktop'
      - 'azure-batch.ComputeNodeOperations#listWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#list'
      - 'azure-batch.ComputeNodeOperations#listNextWithHttpOperationResponse'
      - 'azure-batch.ComputeNodeOperations#listNext'
    langs:
      - js
  - id: 'azure-batch.ComputeNodeOperations.#ctor'
    uid: 'azure-batch.ComputeNodeOperations.#ctor'
    parent: azure-batch.ComputeNodeOperations
    name: ComputeNodeOperations(client)
    fullName: azure-batch.ComputeNodeOperations.ComputeNodeOperations(client)
    summary: Create a ComputeNodeOperations.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-batch.BatchServiceClient
          description: Reference to the service client.
      content: new ComputeNodeOperations(client)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#addUserWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#addUserWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: 'addUserWithHttpOperationResponse(poolId, nodeId, user, options)'
    summary: "Adds a user account to the specified compute node.\r\rYou can add a user account to a node only when it is in the idle or running\rstate."
    fullName: >-
      azure-batch.ComputeNodeOperations.addUserWithHttpOperationResponse(poolId,
      nodeId, user, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the machine on which you want to create a\ruser account."
        - id: user
          type:
            - object
          description: The user account to be created.
        - id: user.name
          type:
            - string
          description: The user name of the account.
        - id: user.isAdmin
          type:
            - boolean
          description: "Whether the account should be an\radministrator on the compute node. The default value is false."
          optional: true
        - id: user.expiryTime
          type:
            - date
          description: "The time at which the account should expire.\rIf omitted, the default is 1 day from the current time. For Linux compute\rnodes, the expiryTime has a precision up to a day."
          optional: true
        - id: user.password
          type:
            - string
          description: "The password of the account. The password is\rrequired for Windows nodes (those created with 'cloudServiceConfiguration',\ror created with 'virtualMachineConfiguration' using a Windows image\rreference). For Linux compute nodes, the password can optionally be\rspecified along with the sshPublicKey property."
          optional: true
        - id: user.sshPublicKey
          type:
            - string
          description: "The SSH public key that can be used for\rremote login to the compute node. The public key should be compatible with\rOpenSSH encoding and should be base 64 encoded. This property can be\rspecified only for Linux nodes. If this is specified for a Windows node,\rthen the Batch service rejects the request; if you are calling the REST API\rdirectly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeAddUserOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeAddUserOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeAddUserOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeAddUserOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeAddUserOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function addUserWithHttpOperationResponse(poolId, nodeId, user, options)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#addUser'
    id: 'azure-batch.ComputeNodeOperations#addUser'
    parent: azure-batch.ComputeNodeOperations
    name: 'addUser(poolId, nodeId, user, options, optionalCallback)'
    summary: "Adds a user account to the specified compute node.\r\rYou can add a user account to a node only when it is in the idle or running\rstate."
    fullName: >-
      azure-batch.ComputeNodeOperations.addUser(poolId, nodeId, user, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the machine on which you want to create a\ruser account."
        - id: user
          type:
            - object
          description: The user account to be created.
        - id: user.name
          type:
            - string
          description: The user name of the account.
        - id: user.isAdmin
          type:
            - boolean
          description: "Whether the account should be an\radministrator on the compute node. The default value is false."
          optional: true
        - id: user.expiryTime
          type:
            - date
          description: "The time at which the account should expire.\rIf omitted, the default is 1 day from the current time. For Linux compute\rnodes, the expiryTime has a precision up to a day."
          optional: true
        - id: user.password
          type:
            - string
          description: "The password of the account. The password is\rrequired for Windows nodes (those created with 'cloudServiceConfiguration',\ror created with 'virtualMachineConfiguration' using a Windows image\rreference). For Linux compute nodes, the password can optionally be\rspecified along with the sshPublicKey property."
          optional: true
        - id: user.sshPublicKey
          type:
            - string
          description: "The SSH public key that can be used for\rremote login to the compute node. The public key should be compatible with\rOpenSSH encoding and should be base 64 encoded. This property can be\rspecified only for Linux nodes. If this is specified for a Windows node,\rthen the Batch service rejects the request; if you are calling the REST API\rdirectly, the HTTP status code is 400 (Bad Request)."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeAddUserOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeAddUserOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeAddUserOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeAddUserOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeAddUserOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function addUser(poolId, nodeId, user, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#deleteUserWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#deleteUserWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: 'deleteUserWithHttpOperationResponse(poolId, nodeId, userName, options)'
    summary: "Deletes a user account from the specified compute node.\r\rYou can delete a user account to a node only when it is in the idle or\rrunning state."
    fullName: >-
      azure-batch.ComputeNodeOperations.deleteUserWithHttpOperationResponse(poolId,
      nodeId, userName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the machine on which you want to delete a\ruser account."
        - id: userName
          type:
            - string
          description: The name of the user account to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeDeleteUserOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeDeleteUserOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.computeNodeDeleteUserOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeDeleteUserOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeDeleteUserOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteUserWithHttpOperationResponse(poolId, nodeId, userName,
        options)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#deleteUser'
    id: 'azure-batch.ComputeNodeOperations#deleteUser'
    parent: azure-batch.ComputeNodeOperations
    name: 'deleteUser(poolId, nodeId, userName, options, optionalCallback)'
    summary: "Deletes a user account from the specified compute node.\r\rYou can delete a user account to a node only when it is in the idle or\rrunning state."
    fullName: >-
      azure-batch.ComputeNodeOperations.deleteUser(poolId, nodeId, userName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the machine on which you want to delete a\ruser account."
        - id: userName
          type:
            - string
          description: The name of the user account to delete.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeDeleteUserOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeDeleteUserOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.computeNodeDeleteUserOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeDeleteUserOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeDeleteUserOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteUser(poolId, nodeId, userName, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#updateUserWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#updateUserWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: >-
      updateUserWithHttpOperationResponse(poolId, nodeId, userName,
      nodeUpdateUserParameter, options)
    summary: "Updates the password and expiration time of a user account on the\rspecified compute node.\r\rThis operation replaces of all the updateable properties of the account. For\rexample, if the expiryTime element is not specified, the current value is\rreplaced with the default value, not left unmodified. You can update a user\raccount on a node only when it is in the idle or running state."
    fullName: >-
      azure-batch.ComputeNodeOperations.updateUserWithHttpOperationResponse(poolId,
      nodeId, userName, nodeUpdateUserParameter, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the machine on which you want to update a\ruser account."
        - id: userName
          type:
            - string
          description: The name of the user account to update.
        - id: nodeUpdateUserParameter
          type:
            - object
          description: The parameters for the request.
        - id: nodeUpdateUserParameter.password
          type:
            - string
          description: "The password of the\raccount. The password is required for Windows nodes (those created with\r'cloudServiceConfiguration', or created with 'virtualMachineConfiguration'\rusing a Windows image reference). For Linux compute nodes, the password can\roptionally be specified along with the sshPublicKey property. If omitted,\rany existing password is removed."
          optional: true
        - id: nodeUpdateUserParameter.expiryTime
          type:
            - date
          description: "The time at which the\raccount should expire. If omitted, the default is 1 day from the current\rtime. For Linux compute nodes, the expiryTime has a precision up to a day."
          optional: true
        - id: nodeUpdateUserParameter.sshPublicKey
          type:
            - string
          description: "The SSH public key\rthat can be used for remote login to the compute node. The public key should\rbe compatible with OpenSSH encoding and should be base 64 encoded. This\rproperty can be specified only for Linux nodes. If this is specified for a\rWindows node, then the Batch service rejects the request; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request). If\romitted, any existing SSH public key is removed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeUpdateUserOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeUpdateUserOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.computeNodeUpdateUserOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeUpdateUserOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeUpdateUserOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function updateUserWithHttpOperationResponse(poolId, nodeId, userName,
        nodeUpdateUserParameter, options)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#updateUser'
    id: 'azure-batch.ComputeNodeOperations#updateUser'
    parent: azure-batch.ComputeNodeOperations
    name: >-
      updateUser(poolId, nodeId, userName, nodeUpdateUserParameter, options,
      optionalCallback)
    summary: "Updates the password and expiration time of a user account on the\rspecified compute node.\r\rThis operation replaces of all the updateable properties of the account. For\rexample, if the expiryTime element is not specified, the current value is\rreplaced with the default value, not left unmodified. You can update a user\raccount on a node only when it is in the idle or running state."
    fullName: >-
      azure-batch.ComputeNodeOperations.updateUser(poolId, nodeId, userName,
      nodeUpdateUserParameter, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the machine on which you want to update a\ruser account."
        - id: userName
          type:
            - string
          description: The name of the user account to update.
        - id: nodeUpdateUserParameter
          type:
            - object
          description: The parameters for the request.
        - id: nodeUpdateUserParameter.password
          type:
            - string
          description: "The password of the\raccount. The password is required for Windows nodes (those created with\r'cloudServiceConfiguration', or created with 'virtualMachineConfiguration'\rusing a Windows image reference). For Linux compute nodes, the password can\roptionally be specified along with the sshPublicKey property. If omitted,\rany existing password is removed."
          optional: true
        - id: nodeUpdateUserParameter.expiryTime
          type:
            - date
          description: "The time at which the\raccount should expire. If omitted, the default is 1 day from the current\rtime. For Linux compute nodes, the expiryTime has a precision up to a day."
          optional: true
        - id: nodeUpdateUserParameter.sshPublicKey
          type:
            - string
          description: "The SSH public key\rthat can be used for remote login to the compute node. The public key should\rbe compatible with OpenSSH encoding and should be base 64 encoded. This\rproperty can be specified only for Linux nodes. If this is specified for a\rWindows node, then the Batch service rejects the request; if you are calling\rthe REST API directly, the HTTP status code is 400 (Bad Request). If\romitted, any existing SSH public key is removed."
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeUpdateUserOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeUpdateUserOptions.timeout
          type:
            - number
          description: "The maximum\rtime that the server can spend processing the request, in seconds. The\rdefault is 30 seconds."
          optional: true
        - id: options.computeNodeUpdateUserOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeUpdateUserOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether the\rserver should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeUpdateUserOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function updateUser(poolId, nodeId, userName, nodeUpdateUserParameter,
        options, optionalCallback)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#getWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#getWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: 'getWithHttpOperationResponse(poolId, nodeId, options)'
    summary: Gets information about the specified compute node.
    fullName: >-
      azure-batch.ComputeNodeOperations.getWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<ComputeNode>} - The deserialized result object.'
        value: '{HttpOperationResponse<ComputeNode>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node that you want to get\rinformation about."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeGetOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.computeNodeGetOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.computeNodeGetOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeGetOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeGetOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function getWithHttpOperationResponse(poolId, nodeId, options)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#get'
    id: 'azure-batch.ComputeNodeOperations#get'
    parent: azure-batch.ComputeNodeOperations
    name: 'get(poolId, nodeId, options, optionalCallback)'
    summary: Gets information about the specified compute node.
    fullName: >-
      azure-batch.ComputeNodeOperations.get(poolId, nodeId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ComputeNode} - The deserialized result object.'
        value: '{ComputeNode} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNode} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNode} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node that you want to get\rinformation about."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeGetOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.computeNodeGetOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.computeNodeGetOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeGetOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeGetOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeGetOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function get(poolId, nodeId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#rebootWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#rebootWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: 'rebootWithHttpOperationResponse(poolId, nodeId, options)'
    summary: "Restarts the specified compute node.\r\rYou can restart a node only if it is in an idle or running state."
    fullName: >-
      azure-batch.ComputeNodeOperations.rebootWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that you want to restart.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodeRebootOption
          type:
            - string
          description: "When to reboot the compute node\rand what to do with currently running tasks. Values are:\r\rrequeue - Terminate running task processes and requeue the tasks. The tasks\rwill run again when a node is available. Restart the node as soon as tasks\rhave been terminated.\rterminate - Terminate running tasks. The tasks will not run again. Restart\rthe node as soon as tasks have been terminated.\rtaskcompletion - Allow currently running tasks to complete. Schedule no new\rtasks while waiting. Restart the node when all tasks have completed.\rretaineddata - Allow currently running tasks to complete, then wait for all\rtask data retention periods to expire. Schedule no new tasks while waiting.\rRestart the node when all task retention periods have expired.\r\rThe default value is requeue. Possible values include: 'requeue',\r'terminate', 'taskCompletion', 'retainedData'"
          optional: true
        - id: options.computeNodeRebootOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.computeNodeRebootOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeRebootOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeRebootOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeRebootOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function rebootWithHttpOperationResponse(poolId, nodeId, options)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#reboot'
    id: 'azure-batch.ComputeNodeOperations#reboot'
    parent: azure-batch.ComputeNodeOperations
    name: 'reboot(poolId, nodeId, options, optionalCallback)'
    summary: "Restarts the specified compute node.\r\rYou can restart a node only if it is in an idle or running state."
    fullName: >-
      azure-batch.ComputeNodeOperations.reboot(poolId, nodeId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that you want to restart.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodeRebootOption
          type:
            - string
          description: "When to reboot the compute node\rand what to do with currently running tasks. Values are:\r\rrequeue - Terminate running task processes and requeue the tasks. The tasks\rwill run again when a node is available. Restart the node as soon as tasks\rhave been terminated.\rterminate - Terminate running tasks. The tasks will not run again. Restart\rthe node as soon as tasks have been terminated.\rtaskcompletion - Allow currently running tasks to complete. Schedule no new\rtasks while waiting. Restart the node when all tasks have completed.\rretaineddata - Allow currently running tasks to complete, then wait for all\rtask data retention periods to expire. Schedule no new tasks while waiting.\rRestart the node when all task retention periods have expired.\r\rThe default value is requeue. Possible values include: 'requeue',\r'terminate', 'taskCompletion', 'retainedData'"
          optional: true
        - id: options.computeNodeRebootOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.computeNodeRebootOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeRebootOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeRebootOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeRebootOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function reboot(poolId, nodeId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#reimageWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#reimageWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: 'reimageWithHttpOperationResponse(poolId, nodeId, options)'
    summary: "Reinstalls the operating system on the specified compute node.\r\rYou can reinstall the operating system on a node only if it is in an idle or\rrunning state. This API can be invoked only on pools created with the cloud\rservice configuration property."
    fullName: >-
      azure-batch.ComputeNodeOperations.reimageWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that you want to restart.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodeReimageOption
          type:
            - string
          description: "When to reimage the compute node\rand what to do with currently running tasks. Values are:\r\rrequeue - Terminate running task processes and requeue the tasks. The tasks\rwill run again when a node is available. Reimage the node as soon as tasks\rhave been terminated.\rterminate - Terminate running tasks. The tasks will not run again. Reimage\rthe node as soon as tasks have been terminated.\rtaskcompletion - Allow currently running tasks to complete. Schedule no new\rtasks while waiting. Reimage the node when all tasks have completed.\rretaineddata - Allow currently running tasks to complete, then wait for all\rtask data retention periods to expire. Schedule no new tasks while waiting.\rReimage the node when all task retention periods have expired.\r\rThe default value is requeue. Possible values include: 'requeue',\r'terminate', 'taskCompletion', 'retainedData'"
          optional: true
        - id: options.computeNodeReimageOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeReimageOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeReimageOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeReimageOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeReimageOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function reimageWithHttpOperationResponse(poolId, nodeId, options)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#reimage'
    id: 'azure-batch.ComputeNodeOperations#reimage'
    parent: azure-batch.ComputeNodeOperations
    name: 'reimage(poolId, nodeId, options, optionalCallback)'
    summary: "Reinstalls the operating system on the specified compute node.\r\rYou can reinstall the operating system on a node only if it is in an idle or\rrunning state. This API can be invoked only on pools created with the cloud\rservice configuration property."
    fullName: >-
      azure-batch.ComputeNodeOperations.reimage(poolId, nodeId, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: The ID of the compute node that you want to restart.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodeReimageOption
          type:
            - string
          description: "When to reimage the compute node\rand what to do with currently running tasks. Values are:\r\rrequeue - Terminate running task processes and requeue the tasks. The tasks\rwill run again when a node is available. Reimage the node as soon as tasks\rhave been terminated.\rterminate - Terminate running tasks. The tasks will not run again. Reimage\rthe node as soon as tasks have been terminated.\rtaskcompletion - Allow currently running tasks to complete. Schedule no new\rtasks while waiting. Reimage the node when all tasks have completed.\rretaineddata - Allow currently running tasks to complete, then wait for all\rtask data retention periods to expire. Schedule no new tasks while waiting.\rReimage the node when all task retention periods have expired.\r\rThe default value is requeue. Possible values include: 'requeue',\r'terminate', 'taskCompletion', 'retainedData'"
          optional: true
        - id: options.computeNodeReimageOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeReimageOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeReimageOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeReimageOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeReimageOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function reimage(poolId, nodeId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-batch.ComputeNodeOperations#disableSchedulingWithHttpOperationResponse
    id: >-
      azure-batch.ComputeNodeOperations#disableSchedulingWithHttpOperationResponse
    parent: azure-batch.ComputeNodeOperations
    name: 'disableSchedulingWithHttpOperationResponse(poolId, nodeId, options)'
    summary: "Disables task scheduling on the specified compute node.\r\rYou can disable task scheduling on a node only if its current scheduling\rstate is enabled."
    fullName: >-
      azure-batch.ComputeNodeOperations.disableSchedulingWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node on which you want to\rdisable task scheduling."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodeDisableSchedulingOption
          type:
            - string
          description: "What to do with\rcurrently running tasks when disabling task scheduling on the compute node.\rValues are:\r\rrequeue - Terminate running task processes and requeue the tasks. The tasks\rmay run again on other compute nodes, or when task scheduling is re-enabled\ron this node. Enter offline state as soon as tasks have been terminated.\rterminate - Terminate running tasks. The tasks will not run again. Enter\roffline state as soon as tasks have been terminated.\rtaskcompletion - Allow currently running tasks to complete. Schedule no new\rtasks while waiting. Enter offline state when all tasks have completed.\r\rThe default value is requeue. Possible values include: 'requeue',\r'terminate', 'taskCompletion'"
          optional: true
        - id: options.computeNodeDisableSchedulingOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function disableSchedulingWithHttpOperationResponse(poolId, nodeId,
        options)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#disableScheduling'
    id: 'azure-batch.ComputeNodeOperations#disableScheduling'
    parent: azure-batch.ComputeNodeOperations
    name: 'disableScheduling(poolId, nodeId, options, optionalCallback)'
    summary: "Disables task scheduling on the specified compute node.\r\rYou can disable task scheduling on a node only if its current scheduling\rstate is enabled."
    fullName: >-
      azure-batch.ComputeNodeOperations.disableScheduling(poolId, nodeId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node on which you want to\rdisable task scheduling."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.nodeDisableSchedulingOption
          type:
            - string
          description: "What to do with\rcurrently running tasks when disabling task scheduling on the compute node.\rValues are:\r\rrequeue - Terminate running task processes and requeue the tasks. The tasks\rmay run again on other compute nodes, or when task scheduling is re-enabled\ron this node. Enter offline state as soon as tasks have been terminated.\rterminate - Terminate running tasks. The tasks will not run again. Enter\roffline state as soon as tasks have been terminated.\rtaskcompletion - Allow currently running tasks to complete. Schedule no new\rtasks while waiting. Enter offline state when all tasks have completed.\r\rThe default value is requeue. Possible values include: 'requeue',\r'terminate', 'taskCompletion'"
          optional: true
        - id: options.computeNodeDisableSchedulingOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeDisableSchedulingOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function disableScheduling(poolId, nodeId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-batch.ComputeNodeOperations#enableSchedulingWithHttpOperationResponse
    id: >-
      azure-batch.ComputeNodeOperations#enableSchedulingWithHttpOperationResponse
    parent: azure-batch.ComputeNodeOperations
    name: 'enableSchedulingWithHttpOperationResponse(poolId, nodeId, options)'
    summary: "Enables task scheduling on the specified compute node.\r\rYou can enable task scheduling on a node only if its current scheduling\rstate is disabled"
    fullName: >-
      azure-batch.ComputeNodeOperations.enableSchedulingWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node on which you want to\renable task scheduling."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeEnableSchedulingOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function enableSchedulingWithHttpOperationResponse(poolId, nodeId,
        options)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#enableScheduling'
    id: 'azure-batch.ComputeNodeOperations#enableScheduling'
    parent: azure-batch.ComputeNodeOperations
    name: 'enableScheduling(poolId, nodeId, options, optionalCallback)'
    summary: "Enables task scheduling on the specified compute node.\r\rYou can enable task scheduling on a node only if its current scheduling\rstate is disabled"
    fullName: >-
      azure-batch.ComputeNodeOperations.enableScheduling(poolId, nodeId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node on which you want to\renable task scheduling."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeEnableSchedulingOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeEnableSchedulingOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function enableScheduling(poolId, nodeId, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-batch.ComputeNodeOperations#getRemoteLoginSettingsWithHttpOperationResponse
    id: >-
      azure-batch.ComputeNodeOperations#getRemoteLoginSettingsWithHttpOperationResponse
    parent: azure-batch.ComputeNodeOperations
    name: 'getRemoteLoginSettingsWithHttpOperationResponse(poolId, nodeId, options)'
    summary: "Gets the settings required for remote login to a compute node.\r\rBefore you can remotely login to a node using the remote login settings, you\rmust create a user account on the node. This API can be invoked only on\rpools created with the virtual machine configuration property. For pools\rcreated with a cloud service configuration, see the GetRemoteDesktop API."
    fullName: >-
      azure-batch.ComputeNodeOperations.getRemoteLoginSettingsWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ComputeNodeGetRemoteLoginSettingsResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<ComputeNodeGetRemoteLoginSettingsResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node for which to obtain the\rremote login settings."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions
          type:
            - object
          description: Additional parameters for the operation
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions.timeout
          type:
            - number
          description: "The maximum time that the server can spend processing the request, in\rseconds. The default is 30 seconds."
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: >-
            options.computeNodeGetRemoteLoginSettingsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions.ocpDate
          type:
            - date
          description: "The\rtime the request was issued. Client libraries typically set this to the\rcurrent system clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getRemoteLoginSettingsWithHttpOperationResponse(poolId, nodeId,
        options)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#getRemoteLoginSettings'
    id: 'azure-batch.ComputeNodeOperations#getRemoteLoginSettings'
    parent: azure-batch.ComputeNodeOperations
    name: 'getRemoteLoginSettings(poolId, nodeId, options, optionalCallback)'
    summary: "Gets the settings required for remote login to a compute node.\r\rBefore you can remotely login to a node using the remote login settings, you\rmust create a user account on the node. This API can be invoked only on\rpools created with the virtual machine configuration property. For pools\rcreated with a cloud service configuration, see the GetRemoteDesktop API."
    fullName: >-
      azure-batch.ComputeNodeOperations.getRemoteLoginSettings(poolId, nodeId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {ComputeNodeGetRemoteLoginSettingsResult} - The deserialized result
          object.
        value: >-
          {ComputeNodeGetRemoteLoginSettingsResult} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNodeGetRemoteLoginSettingsResult} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNodeGetRemoteLoginSettingsResult} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node for which to obtain the\rremote login settings."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions
          type:
            - object
          description: Additional parameters for the operation
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions.timeout
          type:
            - number
          description: "The maximum time that the server can spend processing the request, in\rseconds. The default is 30 seconds."
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: >-
            options.computeNodeGetRemoteLoginSettingsOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeGetRemoteLoginSettingsOptions.ocpDate
          type:
            - date
          description: "The\rtime the request was issued. Client libraries typically set this to the\rcurrent system clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function getRemoteLoginSettings(poolId, nodeId, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-batch.ComputeNodeOperations#getRemoteDesktopWithHttpOperationResponse
    id: >-
      azure-batch.ComputeNodeOperations#getRemoteDesktopWithHttpOperationResponse
    parent: azure-batch.ComputeNodeOperations
    name: 'getRemoteDesktopWithHttpOperationResponse(poolId, nodeId, options)'
    summary: "Gets the Remote Desktop Protocol file for the specified compute\rnode.\r\rBefore you can access a node by using the RDP file, you must create a user\raccount on the node. This API can only be invoked on pools created with a\rcloud service configuration. For pools created with a virtual machine\rconfiguration, see the GetRemoteLoginSettings API."
    fullName: >-
      azure-batch.ComputeNodeOperations.getRemoteDesktopWithHttpOperationResponse(poolId,
      nodeId, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Object>} - The deserialized result object.'
        value: '{HttpOperationResponse<Object>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node for which you want to get\rthe Remote Desktop Protocol file."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getRemoteDesktopWithHttpOperationResponse(poolId, nodeId,
        options)
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#getRemoteDesktop'
    id: 'azure-batch.ComputeNodeOperations#getRemoteDesktop'
    parent: azure-batch.ComputeNodeOperations
    name: 'getRemoteDesktop(poolId, nodeId, options, optionalCallback)'
    summary: "Gets the Remote Desktop Protocol file for the specified compute\rnode.\r\rBefore you can access a node by using the RDP file, you must create a user\raccount on the node. This API can only be invoked on pools created with a\rcloud service configuration. For pools created with a virtual machine\rconfiguration, see the GetRemoteLoginSettings API."
    fullName: >-
      azure-batch.ComputeNodeOperations.getRemoteDesktop(poolId, nodeId,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Object} - The deserialized result object.'
        value: '{Object} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool that contains the compute node.
        - id: nodeId
          type:
            - string
          description: "The ID of the compute node for which you want to get\rthe Remote Desktop Protocol file."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions
          type:
            - object
          description: "Additional\rparameters for the operation"
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.timeout
          type:
            - number
          description: "The\rmaximum time that the server can spend processing the request, in seconds.\rThe default is 30 seconds."
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The caller-generated request identity, in the form of a GUID with no\rdecoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.returnClientRequestId
          type:
            - boolean
          description: "Whether\rthe server should return the client-request-id in the response."
          optional: true
        - id: options.computeNodeGetRemoteDesktopOptions.ocpDate
          type:
            - date
          description: "The time\rthe request was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getRemoteDesktop(poolId, nodeId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#listWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#listWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: 'listWithHttpOperationResponse(poolId, options)'
    summary: Lists the compute nodes in the specified pool.
    fullName: >-
      azure-batch.ComputeNodeOperations.listWithHttpOperationResponse(poolId,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ComputeNodeListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ComputeNodeListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool from which you want to list nodes.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeListOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.computeNodeListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool."
          optional: true
        - id: options.computeNodeListOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.computeNodeListOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 nodes can be\rreturned."
          optional: true
        - id: options.computeNodeListOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeListOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeListOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listWithHttpOperationResponse(poolId, options)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#list'
    id: 'azure-batch.ComputeNodeOperations#list'
    parent: azure-batch.ComputeNodeOperations
    name: 'list(poolId, options, optionalCallback)'
    summary: Lists the compute nodes in the specified pool.
    fullName: 'azure-batch.ComputeNodeOperations.list(poolId, options, optionalCallback)'
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ComputeNodeListResult} - The deserialized result object.'
        value: '{ComputeNodeListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNodeListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNodeListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: poolId
          type:
            - string
          description: The ID of the pool from which you want to list nodes.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeListOptions
          type:
            - object
          description: "Additional parameters for\rthe operation"
          optional: true
        - id: options.computeNodeListOptions.filter
          type:
            - string
          description: "An OData $filter\rclause. For more information on constructing this filter, see\rhttps://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool."
          optional: true
        - id: options.computeNodeListOptions.select
          type:
            - string
          description: "An OData $select\rclause."
          optional: true
        - id: options.computeNodeListOptions.maxResults
          type:
            - number
          description: "The maximum\rnumber of items to return in the response. A maximum of 1000 nodes can be\rreturned."
          optional: true
        - id: options.computeNodeListOptions.timeout
          type:
            - number
          description: "The maximum time\rthat the server can spend processing the request, in seconds. The default is\r30 seconds."
          optional: true
        - id: options.computeNodeListOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeListOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeListOptions.ocpDate
          type:
            - date
          description: "The time the request\rwas issued. Client libraries typically set this to the current system clock\rtime; set it explicitly if you are calling the REST API directly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(poolId, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#listNextWithHttpOperationResponse'
    id: 'azure-batch.ComputeNodeOperations#listNextWithHttpOperationResponse'
    parent: azure-batch.ComputeNodeOperations
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: Lists the compute nodes in the specified pool.
    fullName: >-
      azure-batch.ComputeNodeOperations.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ComputeNodeListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ComputeNodeListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeListNextOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeListNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeListNextOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-batch.ComputeNodeOperations#listNext'
    id: 'azure-batch.ComputeNodeOperations#listNext'
    parent: azure-batch.ComputeNodeOperations
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: Lists the compute nodes in the specified pool.
    fullName: >-
      azure-batch.ComputeNodeOperations.listNext(nextPageLink, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ComputeNodeListResult} - The deserialized result object.'
        value: '{ComputeNodeListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNodeListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ComputeNodeListResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.computeNodeListNextOptions
          type:
            - object
          description: "Additional parameters\rfor the operation"
          optional: true
        - id: options.computeNodeListNextOptions.clientRequestId
          type:
            - azure-batch.uuid
          description: "The\rcaller-generated request identity, in the form of a GUID with no decoration\rsuch as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0."
          optional: true
        - id: options.computeNodeListNextOptions.returnClientRequestId
          type:
            - boolean
          description: >-
            Whether the server should return the client-request-id in the
            response.
          optional: true
        - id: options.computeNodeListNextOptions.ocpDate
          type:
            - date
          description: "The time the\rrequest was issued. Client libraries typically set this to the current\rsystem clock time; set it explicitly if you are calling the REST API\rdirectly."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-batch.BatchServiceClient
    name: BatchServiceClient
    fullName: azure-batch.BatchServiceClient
    isExternal: false
