### YamlMime:UniversalReference
items:
  - uid: azure-arm-datalake-store.FileSystem
    id: azure-arm-datalake-store.FileSystem
    name: FileSystem
    summary: Class representing a FileSystem.
    fullName: azure-arm-datalake-store.FileSystem
    source:
      id: azure-arm-datalake-store.FileSystem
      path: lib\services\dataLake.Store\lib\filesystem\operations\fileSystem.js
      startLine: 3490
      remote:
        branch: master
        path: lib\services\dataLake.Store\lib\filesystem\operations\fileSystem.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-datalake-store.FileSystem.#ctor'
      - >-
        azure-arm-datalake-store.FileSystem#setFileExpiryWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#setFileExpiry'
      - >-
        azure-arm-datalake-store.FileSystem#concurrentAppendWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#concurrentAppend'
      - 'azure-arm-datalake-store.FileSystem#checkAccessWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#checkAccess'
      - 'azure-arm-datalake-store.FileSystem#mkdirsWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#mkdirs'
      - 'azure-arm-datalake-store.FileSystem#concatWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#concat'
      - 'azure-arm-datalake-store.FileSystem#msConcatWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#msConcat'
      - >-
        azure-arm-datalake-store.FileSystem#listFileStatusWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#listFileStatus'
      - >-
        azure-arm-datalake-store.FileSystem#getContentSummaryWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#getContentSummary'
      - >-
        azure-arm-datalake-store.FileSystem#getFileStatusWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#getFileStatus'
      - 'azure-arm-datalake-store.FileSystem#openWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#open'
      - 'azure-arm-datalake-store.FileSystem#appendWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#append'
      - 'azure-arm-datalake-store.FileSystem#createWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#create'
      - 'azure-arm-datalake-store.FileSystem#setAclWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#setAcl'
      - >-
        azure-arm-datalake-store.FileSystem#modifyAclEntriesWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#modifyAclEntries'
      - >-
        azure-arm-datalake-store.FileSystem#removeAclEntriesWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#removeAclEntries'
      - >-
        azure-arm-datalake-store.FileSystem#removeDefaultAclWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#removeDefaultAcl'
      - 'azure-arm-datalake-store.FileSystem#removeAclWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#removeAcl'
      - >-
        azure-arm-datalake-store.FileSystem#getAclStatusWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#getAclStatus'
      - >-
        azure-arm-datalake-store.FileSystem#deleteMethodWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#deleteMethod'
      - 'azure-arm-datalake-store.FileSystem#renameWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#rename'
      - 'azure-arm-datalake-store.FileSystem#setOwnerWithHttpOperationResponse'
      - 'azure-arm-datalake-store.FileSystem#setOwner'
      - >-
        azure-arm-datalake-store.FileSystem#setPermissionWithHttpOperationResponse
      - 'azure-arm-datalake-store.FileSystem#setPermission'
    langs:
      - js
  - id: 'azure-arm-datalake-store.FileSystem.#ctor'
    uid: 'azure-arm-datalake-store.FileSystem.#ctor'
    parent: azure-arm-datalake-store.FileSystem
    name: FileSystem(client)
    fullName: azure-arm-datalake-store.FileSystem.FileSystem(client)
    summary: Create a FileSystem.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - azure-arm-datalake-store.DataLakeStoreFileSystemManagementClient
          description: Reference to the service client.
      content: new FileSystem(client)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setFileExpiryWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#setFileExpiryWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      setFileExpiryWithHttpOperationResponse(accountName, path, expiryOption,
      options)
    summary: "Sets or removes the expiration time on the specified file. This operation\rcan only be executed against files. Folders are not supported."
    fullName: >-
      azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse(accountName,
      path, expiryOption, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile on which to set or remove the expiration time."
        - id: expiryOption
          type:
            - string
          description: "Indicates the type of expiration to use for the\rfile: 1. NeverExpire: ExpireTime is ignored. 2. RelativeToNow: ExpireTime is\ran integer in milliseconds representing the expiration date relative to when\rfile expiration is updated. 3. RelativeToCreationDate: ExpireTime is an\rinteger in milliseconds representing the expiration date relative to file\rcreation. 4. Absolute: ExpireTime is an integer in milliseconds, as a Unix\rtimestamp relative to 1/1/1970 00:00:00. Possible values include:\r'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expireTime
          type:
            - number
          description: "The time that the file will expire,\rcorresponding to the ExpiryOption that was set."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setFileExpiryWithHttpOperationResponse(accountName, path,
        expiryOption, options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setFileExpiry'
    id: 'azure-arm-datalake-store.FileSystem#setFileExpiry'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setFileExpiry(accountName, path, expiryOption, options, optionalCallback)'
    summary: "Sets or removes the expiration time on the specified file. This operation\rcan only be executed against files. Folders are not supported."
    fullName: >-
      azure-arm-datalake-store.FileSystem.setFileExpiry(accountName, path,
      expiryOption, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile on which to set or remove the expiration time."
        - id: expiryOption
          type:
            - string
          description: "Indicates the type of expiration to use for the\rfile: 1. NeverExpire: ExpireTime is ignored. 2. RelativeToNow: ExpireTime is\ran integer in milliseconds representing the expiration date relative to when\rfile expiration is updated. 3. RelativeToCreationDate: ExpireTime is an\rinteger in milliseconds representing the expiration date relative to file\rcreation. 4. Absolute: ExpireTime is an integer in milliseconds, as a Unix\rtimestamp relative to 1/1/1970 00:00:00. Possible values include:\r'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.expireTime
          type:
            - number
          description: "The time that the file will expire,\rcorresponding to the ExpiryOption that was set."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function setFileExpiry(accountName, path, expiryOption, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-datalake-store.FileSystem#concurrentAppendWithHttpOperationResponse
    id: >-
      azure-arm-datalake-store.FileSystem#concurrentAppendWithHttpOperationResponse
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      concurrentAppendWithHttpOperationResponse(accountName, path,
      streamContents, options)
    summary: "Appends to the specified file, optionally first creating the file if it does\rnot yet exist. This method supports multiple concurrent appends to the file.\rNOTE: The target must not contain data added by Create or normal (serial)\rAppend. ConcurrentAppend and Append cannot be used interchangeably; once a\rtarget file has been modified using either of these append options, the\rother append option cannot be used on the target file. ConcurrentAppend does\rnot guarantee order and can result in duplicated data landing in the target\rfile."
    fullName: >-
      azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse(accountName,
      path, streamContents, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to which to append using concurrent append."
        - id: streamContents
          type:
            - object
          description: "The file contents to include when appending\rto the file."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.appendMode
          type:
            - string
          description: "Indicates the concurrent append call\rshould create the file if it doesn't exist or just open the existing file\rfor append. Possible values include: 'autocreate'"
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: "Optionally indicates what to do after\rcompletion of the concurrent append. DATA indicates that more data will be\rsent immediately by the client, the file handle should remain open/locked,\rand file metadata (including file length, last modified time) should NOT get\rupdated. METADATA indicates that more data will be sent immediately by the\rclient, the file handle should remain open/locked, and file metadata should\rget updated. CLOSE indicates that the client is done sending data, the file\rhandle should be closed/unlocked, and file metadata should get updated.\rPossible values include: 'DATA', 'METADATA', 'CLOSE'"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function concurrentAppendWithHttpOperationResponse(accountName, path,
        streamContents, options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#concurrentAppend'
    id: 'azure-arm-datalake-store.FileSystem#concurrentAppend'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      concurrentAppend(accountName, path, streamContents, options,
      optionalCallback)
    summary: "Appends to the specified file, optionally first creating the file if it does\rnot yet exist. This method supports multiple concurrent appends to the file.\rNOTE: The target must not contain data added by Create or normal (serial)\rAppend. ConcurrentAppend and Append cannot be used interchangeably; once a\rtarget file has been modified using either of these append options, the\rother append option cannot be used on the target file. ConcurrentAppend does\rnot guarantee order and can result in duplicated data landing in the target\rfile."
    fullName: >-
      azure-arm-datalake-store.FileSystem.concurrentAppend(accountName, path,
      streamContents, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to which to append using concurrent append."
        - id: streamContents
          type:
            - object
          description: "The file contents to include when appending\rto the file."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.appendMode
          type:
            - string
          description: "Indicates the concurrent append call\rshould create the file if it doesn't exist or just open the existing file\rfor append. Possible values include: 'autocreate'"
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: "Optionally indicates what to do after\rcompletion of the concurrent append. DATA indicates that more data will be\rsent immediately by the client, the file handle should remain open/locked,\rand file metadata (including file length, last modified time) should NOT get\rupdated. METADATA indicates that more data will be sent immediately by the\rclient, the file handle should remain open/locked, and file metadata should\rget updated. CLOSE indicates that the client is done sending data, the file\rhandle should be closed/unlocked, and file metadata should get updated.\rPossible values include: 'DATA', 'METADATA', 'CLOSE'"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function concurrentAppend(accountName, path, streamContents, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#checkAccessWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#checkAccessWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'checkAccessWithHttpOperationResponse(accountName, path, fsaction, options)'
    summary: Checks if the specified access is available at the given path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse(accountName,
      path, fsaction, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to check access."
        - id: fsaction
          type:
            - string
          description: "File system operation read/write/execute in string\rform, matching regex pattern '[rwx-]{3}'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function checkAccessWithHttpOperationResponse(accountName, path,
        fsaction, options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#checkAccess'
    id: 'azure-arm-datalake-store.FileSystem#checkAccess'
    parent: azure-arm-datalake-store.FileSystem
    name: 'checkAccess(accountName, path, fsaction, options, optionalCallback)'
    summary: Checks if the specified access is available at the given path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.checkAccess(accountName, path,
      fsaction, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to check access."
        - id: fsaction
          type:
            - string
          description: "File system operation read/write/execute in string\rform, matching regex pattern '[rwx-]{3}'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function checkAccess(accountName, path, fsaction, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#mkdirsWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#mkdirsWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'mkdirsWithHttpOperationResponse(accountName, path, options)'
    summary: Creates a directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdirectory to create."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.permission
          type:
            - number
          description: "Optional octal permission with which\rthe directory should be created."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function mkdirsWithHttpOperationResponse(accountName, path, options)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#mkdirs'
    id: 'azure-arm-datalake-store.FileSystem#mkdirs'
    parent: azure-arm-datalake-store.FileSystem
    name: 'mkdirs(accountName, path, options, optionalCallback)'
    summary: Creates a directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.mkdirs(accountName, path, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileOperationResult} - The deserialized result object.'
        value: '{FileOperationResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdirectory to create."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.permission
          type:
            - number
          description: "Optional octal permission with which\rthe directory should be created."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function mkdirs(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#concatWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#concatWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'concatWithHttpOperationResponse(accountName, path, sources, options)'
    summary: "Concatenates the list of source files into the destination file, removing\rall source files upon success."
    fullName: >-
      azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse(accountName,
      path, sources, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdestination file resulting from the concatenation."
        - id: sources
          type:
            - array
          description: "A list of comma separated Data Lake Store paths\r(starting with '/') of the files to concatenate, in the order in which they\rshould be concatenated."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function concatWithHttpOperationResponse(accountName, path, sources,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#concat'
    id: 'azure-arm-datalake-store.FileSystem#concat'
    parent: azure-arm-datalake-store.FileSystem
    name: 'concat(accountName, path, sources, options, optionalCallback)'
    summary: "Concatenates the list of source files into the destination file, removing\rall source files upon success."
    fullName: >-
      azure-arm-datalake-store.FileSystem.concat(accountName, path, sources,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdestination file resulting from the concatenation."
        - id: sources
          type:
            - array
          description: "A list of comma separated Data Lake Store paths\r(starting with '/') of the files to concatenate, in the order in which they\rshould be concatenated."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function concat(accountName, path, sources, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#msConcatWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#msConcatWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      msConcatWithHttpOperationResponse(accountName, path, streamContents,
      options)
    summary: "Concatenates the list of source files into the destination file, deleting\rall source files upon success. This method accepts more source file paths\rthan the Concat method. This method and the parameters it accepts are\rsubject to change for usability in an upcoming version."
    fullName: >-
      azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse(accountName,
      path, streamContents, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdestination file resulting from the concatenation."
        - id: streamContents
          type:
            - object
          description: "A list of Data Lake Store paths (starting\rwith '/') of the source files. Must be a comma-separated path list in the\rformat: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.deleteSourceDirectory
          type:
            - boolean
          description: "Indicates that as an\roptimization instead of deleting each individual source stream, delete the\rsource stream folder if all streams are in the same folder instead. This\rresults in a substantial performance improvement when the only streams in\rthe folder are part of the concatenation operation. WARNING: This includes\rthe deletion of any other files that are not source files. Only set this to\rtrue when source files are the only files in the source directory."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function msConcatWithHttpOperationResponse(accountName, path,
        streamContents, options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#msConcat'
    id: 'azure-arm-datalake-store.FileSystem#msConcat'
    parent: azure-arm-datalake-store.FileSystem
    name: 'msConcat(accountName, path, streamContents, options, optionalCallback)'
    summary: "Concatenates the list of source files into the destination file, deleting\rall source files upon success. This method accepts more source file paths\rthan the Concat method. This method and the parameters it accepts are\rsubject to change for usability in an upcoming version."
    fullName: >-
      azure-arm-datalake-store.FileSystem.msConcat(accountName, path,
      streamContents, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdestination file resulting from the concatenation."
        - id: streamContents
          type:
            - object
          description: "A list of Data Lake Store paths (starting\rwith '/') of the source files. Must be a comma-separated path list in the\rformat: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.deleteSourceDirectory
          type:
            - boolean
          description: "Indicates that as an\roptimization instead of deleting each individual source stream, delete the\rsource stream folder if all streams are in the same folder instead. This\rresults in a substantial performance improvement when the only streams in\rthe folder are part of the concatenation operation. WARNING: This includes\rthe deletion of any other files that are not source files. Only set this to\rtrue when source files are the only files in the source directory."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function msConcat(accountName, path, streamContents, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-datalake-store.FileSystem#listFileStatusWithHttpOperationResponse
    id: >-
      azure-arm-datalake-store.FileSystem#listFileStatusWithHttpOperationResponse
    parent: azure-arm-datalake-store.FileSystem
    name: 'listFileStatusWithHttpOperationResponse(accountName, path, options)'
    summary: "Get the list of file status objects specified by the file path, with\roptional pagination parameters"
    fullName: >-
      azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileStatusesResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileStatusesResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdirectory to list."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listSize
          type:
            - number
          description: "Gets or sets the number of items to\rreturn. Optional."
          optional: true
        - id: options.listAfter
          type:
            - string
          description: "Gets or sets the item or lexographical\rindex after which to begin returning results. For example, a file list of\r'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also\rreturn 'd'. Optional."
          optional: true
        - id: options.listBefore
          type:
            - string
          description: "Gets or sets the item or lexographical\rindex before which to begin returning results. For example, a file list of\r'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c'\rwill also return 'a','b'. Optional."
          optional: true
        - id: options.tooId
          type:
            - boolean
          description: "An optional switch to return friendly names\rin place of owner and group. tooid=false returns friendly names instead of\rthe AAD Object ID. Default value is true, returning AAD object IDs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listFileStatusWithHttpOperationResponse(accountName, path,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#listFileStatus'
    id: 'azure-arm-datalake-store.FileSystem#listFileStatus'
    parent: azure-arm-datalake-store.FileSystem
    name: 'listFileStatus(accountName, path, options, optionalCallback)'
    summary: "Get the list of file status objects specified by the file path, with\roptional pagination parameters"
    fullName: >-
      azure-arm-datalake-store.FileSystem.listFileStatus(accountName, path,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileStatusesResult} - The deserialized result object.'
        value: '{FileStatusesResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileStatusesResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileStatusesResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdirectory to list."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.listSize
          type:
            - number
          description: "Gets or sets the number of items to\rreturn. Optional."
          optional: true
        - id: options.listAfter
          type:
            - string
          description: "Gets or sets the item or lexographical\rindex after which to begin returning results. For example, a file list of\r'a','b','d' and listAfter='b' will return 'd', and a listAfter='c' will also\rreturn 'd'. Optional."
          optional: true
        - id: options.listBefore
          type:
            - string
          description: "Gets or sets the item or lexographical\rindex before which to begin returning results. For example, a file list of\r'a','b','d' and listBefore='d' will return 'a','b', and a listBefore='c'\rwill also return 'a','b'. Optional."
          optional: true
        - id: options.tooId
          type:
            - boolean
          description: "An optional switch to return friendly names\rin place of owner and group. tooid=false returns friendly names instead of\rthe AAD Object ID. Default value is true, returning AAD object IDs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listFileStatus(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-datalake-store.FileSystem#getContentSummaryWithHttpOperationResponse
    id: >-
      azure-arm-datalake-store.FileSystem#getContentSummaryWithHttpOperationResponse
    parent: azure-arm-datalake-store.FileSystem
    name: 'getContentSummaryWithHttpOperationResponse(accountName, path, options)'
    summary: Gets the file content summary object specified by the file path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContentSummaryResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContentSummaryResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile for which to retrieve the summary."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getContentSummaryWithHttpOperationResponse(accountName, path,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#getContentSummary'
    id: 'azure-arm-datalake-store.FileSystem#getContentSummary'
    parent: azure-arm-datalake-store.FileSystem
    name: 'getContentSummary(accountName, path, options, optionalCallback)'
    summary: Gets the file content summary object specified by the file path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getContentSummary(accountName, path,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContentSummaryResult} - The deserialized result object.'
        value: '{ContentSummaryResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContentSummaryResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContentSummaryResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile for which to retrieve the summary."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getContentSummary(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#getFileStatusWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#getFileStatusWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'getFileStatusWithHttpOperationResponse(accountName, path, options)'
    summary: Get the file status object specified by the file path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileStatusResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileStatusResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to retrieve the status."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tooId
          type:
            - boolean
          description: "An optional switch to return friendly names\rin place of owner and group. tooid=false returns friendly names instead of\rthe AAD Object ID. Default value is true, returning AAD object IDs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getFileStatusWithHttpOperationResponse(accountName, path,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#getFileStatus'
    id: 'azure-arm-datalake-store.FileSystem#getFileStatus'
    parent: azure-arm-datalake-store.FileSystem
    name: 'getFileStatus(accountName, path, options, optionalCallback)'
    summary: Get the file status object specified by the file path.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getFileStatus(accountName, path,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileStatusResult} - The deserialized result object.'
        value: '{FileStatusResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileStatusResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileStatusResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to retrieve the status."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tooId
          type:
            - boolean
          description: "An optional switch to return friendly names\rin place of owner and group. tooid=false returns friendly names instead of\rthe AAD Object ID. Default value is true, returning AAD object IDs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getFileStatus(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#openWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#openWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'openWithHttpOperationResponse(accountName, path, options)'
    summary: Opens and reads from the specified file.
    fullName: >-
      azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<Object>} - The deserialized result object.'
        value: '{HttpOperationResponse<Object>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to open."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.length
          type:
            - number
          description: "The number of bytes that the server will\rattempt to retrieve. It will retrieve <= length bytes."
          optional: true
        - id: options.offset
          type:
            - number
          description: The byte offset to start reading data from.
          optional: true
        - id: options.fileSessionId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file\rindicating all the reads with the same fileSessionId are from the same\rclient and same session. This will give a performance benefit."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function openWithHttpOperationResponse(accountName, path, options)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#open'
    id: 'azure-arm-datalake-store.FileSystem#open'
    parent: azure-arm-datalake-store.FileSystem
    name: 'open(accountName, path, options, optionalCallback)'
    summary: Opens and reads from the specified file.
    fullName: >-
      azure-arm-datalake-store.FileSystem.open(accountName, path, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{Object} - The deserialized result object.'
        value: '{Object} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to open."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.length
          type:
            - number
          description: "The number of bytes that the server will\rattempt to retrieve. It will retrieve <= length bytes."
          optional: true
        - id: options.offset
          type:
            - number
          description: The byte offset to start reading data from.
          optional: true
        - id: options.fileSessionId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file\rindicating all the reads with the same fileSessionId are from the same\rclient and same session. This will give a performance benefit."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function open(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#appendWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#appendWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      appendWithHttpOperationResponse(accountName, path, streamContents,
      options)
    summary: "Used for serial appends to the specified file.\_NOTE: The target must not\rcontain data added by ConcurrentAppend. ConcurrentAppend and Append cannot\rbe used interchangeably; once a target file has been modified using either\rof these append options, the other append option cannot be used on the\rtarget file."
    fullName: >-
      azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse(accountName,
      path, streamContents, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to which to append."
        - id: streamContents
          type:
            - object
          description: "The file contents to include when appending\rto the file."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.offset
          type:
            - number
          description: "The optional offset in the stream to begin\rthe append operation. Default is to append at the end of the stream."
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: "Optionally indicates what to do after\rcompletion of the concurrent append. DATA indicates that more data will be\rsent immediately by the client, the file handle should remain open/locked,\rand file metadata (including file length, last modified time) should NOT get\rupdated. METADATA indicates that more data will be sent immediately by the\rclient, the file handle should remain open/locked, and file metadata should\rget updated. CLOSE indicates that the client is done sending data, the file\rhandle should be closed/unlocked, and file metadata should get updated.\rPossible values include: 'DATA', 'METADATA', 'CLOSE'"
          optional: true
        - id: options.leaseId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file to ensure\rsingle writer semantics, meaning that only clients that append to the file\rwith the same leaseId will be allowed to do so."
          optional: true
        - id: options.fileSessionId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file\rindicating all the appends with the same fileSessionId are from the same\rclient and same session. This will give a performance benefit when syncFlag\ris DATA or METADATA."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function appendWithHttpOperationResponse(accountName, path,
        streamContents, options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#append'
    id: 'azure-arm-datalake-store.FileSystem#append'
    parent: azure-arm-datalake-store.FileSystem
    name: 'append(accountName, path, streamContents, options, optionalCallback)'
    summary: "Used for serial appends to the specified file.\_NOTE: The target must not\rcontain data added by ConcurrentAppend. ConcurrentAppend and Append cannot\rbe used interchangeably; once a target file has been modified using either\rof these append options, the other append option cannot be used on the\rtarget file."
    fullName: >-
      azure-arm-datalake-store.FileSystem.append(accountName, path,
      streamContents, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to which to append."
        - id: streamContents
          type:
            - object
          description: "The file contents to include when appending\rto the file."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.offset
          type:
            - number
          description: "The optional offset in the stream to begin\rthe append operation. Default is to append at the end of the stream."
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: "Optionally indicates what to do after\rcompletion of the concurrent append. DATA indicates that more data will be\rsent immediately by the client, the file handle should remain open/locked,\rand file metadata (including file length, last modified time) should NOT get\rupdated. METADATA indicates that more data will be sent immediately by the\rclient, the file handle should remain open/locked, and file metadata should\rget updated. CLOSE indicates that the client is done sending data, the file\rhandle should be closed/unlocked, and file metadata should get updated.\rPossible values include: 'DATA', 'METADATA', 'CLOSE'"
          optional: true
        - id: options.leaseId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file to ensure\rsingle writer semantics, meaning that only clients that append to the file\rwith the same leaseId will be allowed to do so."
          optional: true
        - id: options.fileSessionId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file\rindicating all the appends with the same fileSessionId are from the same\rclient and same session. This will give a performance benefit when syncFlag\ris DATA or METADATA."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function append(accountName, path, streamContents, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#createWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#createWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'createWithHttpOperationResponse(accountName, path, options)'
    summary: "Creates a file with optionally specified content. NOTE: If content is\rprovided, the resulting file cannot be modified using ConcurrentAppend."
    fullName: >-
      azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to create."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.streamContents
          type:
            - object
          description: "The file contents to include when\rcreating the file. This parameter is optional, resulting in an empty file if\rnot specified."
          optional: true
        - id: options.overwrite
          type:
            - boolean
          description: "The indication of if the file should be\roverwritten."
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: "Optionally indicates what to do after\rcompletion of the create. DATA indicates that more data will be sent\rimmediately by the client, the file handle should remain open/locked, and\rfile metadata (including file length, last modified time) should NOT get\rupdated. METADATA indicates that more data will be sent immediately by the\rclient, the file handle should remain open/locked, and file metadata should\rget updated. CLOSE indicates that the client is done sending data, the file\rhandle should be closed/unlocked, and file metadata should get updated.\rPossible values include: 'DATA', 'METADATA', 'CLOSE'"
          optional: true
        - id: options.leaseId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file to ensure\rsingle writer semantics, meaning that only clients that append to the file\rwith the same leaseId will be allowed to do so."
          optional: true
        - id: options.permission
          type:
            - number
          description: "The octal representation of the unnamed\ruser, mask and other permissions that should be set for the file when\rcreated. If not specified, it inherits these from the container."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function createWithHttpOperationResponse(accountName, path, options)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#create'
    id: 'azure-arm-datalake-store.FileSystem#create'
    parent: azure-arm-datalake-store.FileSystem
    name: 'create(accountName, path, options, optionalCallback)'
    summary: "Creates a file with optionally specified content. NOTE: If content is\rprovided, the resulting file cannot be modified using ConcurrentAppend."
    fullName: >-
      azure-arm-datalake-store.FileSystem.create(accountName, path, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile to create."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.streamContents
          type:
            - object
          description: "The file contents to include when\rcreating the file. This parameter is optional, resulting in an empty file if\rnot specified."
          optional: true
        - id: options.overwrite
          type:
            - boolean
          description: "The indication of if the file should be\roverwritten."
          optional: true
        - id: options.syncFlag
          type:
            - string
          description: "Optionally indicates what to do after\rcompletion of the create. DATA indicates that more data will be sent\rimmediately by the client, the file handle should remain open/locked, and\rfile metadata (including file length, last modified time) should NOT get\rupdated. METADATA indicates that more data will be sent immediately by the\rclient, the file handle should remain open/locked, and file metadata should\rget updated. CLOSE indicates that the client is done sending data, the file\rhandle should be closed/unlocked, and file metadata should get updated.\rPossible values include: 'DATA', 'METADATA', 'CLOSE'"
          optional: true
        - id: options.leaseId
          type:
            - azure-arm-datalake-store.uuid
          description: "Optional unique GUID per file to ensure\rsingle writer semantics, meaning that only clients that append to the file\rwith the same leaseId will be allowed to do so."
          optional: true
        - id: options.permission
          type:
            - number
          description: "The octal representation of the unnamed\ruser, mask and other permissions that should be set for the file when\rcreated. If not specified, it inherits these from the container."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function create(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setAclWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#setAclWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setAclWithHttpOperationResponse(accountName, path, aclspec, options)'
    summary: Sets the Access Control List (ACL) for a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse(accountName,
      path, aclspec, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory on which to set the ACL."
        - id: aclspec
          type:
            - string
          description: "The ACL spec included in ACL creation operations in\rthe format '[default:]user|group|other::r|-w|-x|-'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setAclWithHttpOperationResponse(accountName, path, aclspec,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setAcl'
    id: 'azure-arm-datalake-store.FileSystem#setAcl'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setAcl(accountName, path, aclspec, options, optionalCallback)'
    summary: Sets the Access Control List (ACL) for a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setAcl(accountName, path, aclspec,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory on which to set the ACL."
        - id: aclspec
          type:
            - string
          description: "The ACL spec included in ACL creation operations in\rthe format '[default:]user|group|other::r|-w|-x|-'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function setAcl(accountName, path, aclspec, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-datalake-store.FileSystem#modifyAclEntriesWithHttpOperationResponse
    id: >-
      azure-arm-datalake-store.FileSystem#modifyAclEntriesWithHttpOperationResponse
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      modifyAclEntriesWithHttpOperationResponse(accountName, path, aclspec,
      options)
    summary: Modifies existing Access Control List (ACL) entries on a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse(accountName,
      path, aclspec, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory with the ACL being modified."
        - id: aclspec
          type:
            - string
          description: "The ACL specification included in ACL modification\roperations in the format '[default:]user|group|other::r|-w|-x|-'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function modifyAclEntriesWithHttpOperationResponse(accountName, path,
        aclspec, options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#modifyAclEntries'
    id: 'azure-arm-datalake-store.FileSystem#modifyAclEntries'
    parent: azure-arm-datalake-store.FileSystem
    name: 'modifyAclEntries(accountName, path, aclspec, options, optionalCallback)'
    summary: Modifies existing Access Control List (ACL) entries on a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.modifyAclEntries(accountName, path,
      aclspec, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory with the ACL being modified."
        - id: aclspec
          type:
            - string
          description: "The ACL specification included in ACL modification\roperations in the format '[default:]user|group|other::r|-w|-x|-'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function modifyAclEntries(accountName, path, aclspec, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-datalake-store.FileSystem#removeAclEntriesWithHttpOperationResponse
    id: >-
      azure-arm-datalake-store.FileSystem#removeAclEntriesWithHttpOperationResponse
    parent: azure-arm-datalake-store.FileSystem
    name: >-
      removeAclEntriesWithHttpOperationResponse(accountName, path, aclspec,
      options)
    summary: Removes existing Access Control List (ACL) entries for a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse(accountName,
      path, aclspec, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory with the ACL being removed."
        - id: aclspec
          type:
            - string
          description: "The ACL spec included in ACL removal operations in\rthe format '[default:]user|group|other'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function removeAclEntriesWithHttpOperationResponse(accountName, path,
        aclspec, options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#removeAclEntries'
    id: 'azure-arm-datalake-store.FileSystem#removeAclEntries'
    parent: azure-arm-datalake-store.FileSystem
    name: 'removeAclEntries(accountName, path, aclspec, options, optionalCallback)'
    summary: Removes existing Access Control List (ACL) entries for a file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeAclEntries(accountName, path,
      aclspec, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory with the ACL being removed."
        - id: aclspec
          type:
            - string
          description: "The ACL spec included in ACL removal operations in\rthe format '[default:]user|group|other'"
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function removeAclEntries(accountName, path, aclspec, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-datalake-store.FileSystem#removeDefaultAclWithHttpOperationResponse
    id: >-
      azure-arm-datalake-store.FileSystem#removeDefaultAclWithHttpOperationResponse
    parent: azure-arm-datalake-store.FileSystem
    name: 'removeDefaultAclWithHttpOperationResponse(accountName, path, options)'
    summary: "Removes the existing Default Access Control List (ACL) of the specified\rdirectory."
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdirectory with the default ACL being removed."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function removeDefaultAclWithHttpOperationResponse(accountName, path,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#removeDefaultAcl'
    id: 'azure-arm-datalake-store.FileSystem#removeDefaultAcl'
    parent: azure-arm-datalake-store.FileSystem
    name: 'removeDefaultAcl(accountName, path, options, optionalCallback)'
    summary: "Removes the existing Default Access Control List (ACL) of the specified\rdirectory."
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeDefaultAcl(accountName, path,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rdirectory with the default ACL being removed."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function removeDefaultAcl(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#removeAclWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#removeAclWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'removeAclWithHttpOperationResponse(accountName, path, options)'
    summary: "Removes the existing Access Control List (ACL) of the specified file or\rdirectory."
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory with the ACL being removed."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function removeAclWithHttpOperationResponse(accountName, path, options)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#removeAcl'
    id: 'azure-arm-datalake-store.FileSystem#removeAcl'
    parent: azure-arm-datalake-store.FileSystem
    name: 'removeAcl(accountName, path, options, optionalCallback)'
    summary: "Removes the existing Access Control List (ACL) of the specified file or\rdirectory."
    fullName: >-
      azure-arm-datalake-store.FileSystem.removeAcl(accountName, path, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory with the ACL being removed."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function removeAcl(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#getAclStatusWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#getAclStatusWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'getAclStatusWithHttpOperationResponse(accountName, path, options)'
    summary: >-
      Gets Access Control List (ACL) entries for the specified file or
      directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<AclStatusResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<AclStatusResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to get the ACL."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tooId
          type:
            - boolean
          description: "An optional switch to return friendly names\rin place of object ID for ACL entries. tooid=false returns friendly names\rinstead of the AAD Object ID. Default value is true, returning AAD object\rIDs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getAclStatusWithHttpOperationResponse(accountName, path,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#getAclStatus'
    id: 'azure-arm-datalake-store.FileSystem#getAclStatus'
    parent: azure-arm-datalake-store.FileSystem
    name: 'getAclStatus(accountName, path, options, optionalCallback)'
    summary: >-
      Gets Access Control List (ACL) entries for the specified file or
      directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.getAclStatus(accountName, path,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{AclStatusResult} - The deserialized result object.'
        value: '{AclStatusResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AclStatusResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link AclStatusResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to get the ACL."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.tooId
          type:
            - boolean
          description: "An optional switch to return friendly names\rin place of object ID for ACL entries. tooid=false returns friendly names\rinstead of the AAD Object ID. Default value is true, returning AAD object\rIDs."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function getAclStatus(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#deleteMethodWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#deleteMethodWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'deleteMethodWithHttpOperationResponse(accountName, path, options)'
    summary: 'Deletes the requested file or directory, optionally recursively.'
    fullName: >-
      azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory to delete."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "The optional switch indicating if the\rdelete should be recursive"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(accountName, path,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#deleteMethod'
    id: 'azure-arm-datalake-store.FileSystem#deleteMethod'
    parent: azure-arm-datalake-store.FileSystem
    name: 'deleteMethod(accountName, path, options, optionalCallback)'
    summary: 'Deletes the requested file or directory, optionally recursively.'
    fullName: >-
      azure-arm-datalake-store.FileSystem.deleteMethod(accountName, path,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileOperationResult} - The deserialized result object.'
        value: '{FileOperationResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory to delete."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.recursive
          type:
            - boolean
          description: "The optional switch indicating if the\rdelete should be recursive"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function deleteMethod(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#renameWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#renameWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'renameWithHttpOperationResponse(accountName, path, destination, options)'
    summary: Rename a file or directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse(accountName,
      path, destination, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<FileOperationResult>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<FileOperationResult>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory to move/rename."
        - id: destination
          type:
            - string
          description: The path to move/rename the file or folder to
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function renameWithHttpOperationResponse(accountName, path, destination,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#rename'
    id: 'azure-arm-datalake-store.FileSystem#rename'
    parent: azure-arm-datalake-store.FileSystem
    name: 'rename(accountName, path, destination, options, optionalCallback)'
    summary: Rename a file or directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.rename(accountName, path, destination,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{FileOperationResult} - The deserialized result object.'
        value: '{FileOperationResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link FileOperationResult} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory to move/rename."
        - id: destination
          type:
            - string
          description: The path to move/rename the file or folder to
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function rename(accountName, path, destination, options,
        optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setOwnerWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#setOwnerWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setOwnerWithHttpOperationResponse(accountName, path, options)'
    summary: Sets the owner of a file or directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to set the owner."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.owner
          type:
            - string
          description: "The AAD Object ID of the user owner of the\rfile or directory. If empty, the property will remain unchanged."
          optional: true
        - id: options.group
          type:
            - string
          description: "The AAD Object ID of the group owner of the\rfile or directory. If empty, the property will remain unchanged."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function setOwnerWithHttpOperationResponse(accountName, path, options)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setOwner'
    id: 'azure-arm-datalake-store.FileSystem#setOwner'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setOwner(accountName, path, options, optionalCallback)'
    summary: Sets the owner of a file or directory.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setOwner(accountName, path, options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to set the owner."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.owner
          type:
            - string
          description: "The AAD Object ID of the user owner of the\rfile or directory. If empty, the property will remain unchanged."
          optional: true
        - id: options.group
          type:
            - string
          description: "The AAD Object ID of the group owner of the\rfile or directory. If empty, the property will remain unchanged."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function setOwner(accountName, path, options, optionalCallback)'
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setPermissionWithHttpOperationResponse'
    id: 'azure-arm-datalake-store.FileSystem#setPermissionWithHttpOperationResponse'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setPermissionWithHttpOperationResponse(accountName, path, options)'
    summary: Sets the permission of the file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse(accountName,
      path, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to set the permission."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.permission
          type:
            - string
          description: "A string representation of the\rpermission (i.e 'rwx'). If empty, this property remains unchanged."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function setPermissionWithHttpOperationResponse(accountName, path,
        options)
    langs:
      - js
  - uid: 'azure-arm-datalake-store.FileSystem#setPermission'
    id: 'azure-arm-datalake-store.FileSystem#setPermission'
    parent: azure-arm-datalake-store.FileSystem
    name: 'setPermission(accountName, path, options, optionalCallback)'
    summary: Sets the permission of the file or folder.
    fullName: >-
      azure-arm-datalake-store.FileSystem.setPermission(accountName, path,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: accountName
          type:
            - string
          description: "The Azure Data Lake Store account to execute\rfilesystem operations on."
        - id: path
          type:
            - string
          description: "The Data Lake Store path (starting with '/') of the\rfile or directory for which to set the permission."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.permission
          type:
            - string
          description: "A string representation of the\rpermission (i.e 'rwx'). If empty, this property remains unchanged."
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function setPermission(accountName, path, options, optionalCallback)'
    langs:
      - js
references:
  - uid: azure-arm-datalake-store.DataLakeStoreFileSystemManagementClient
    name: DataLakeStoreFileSystemManagementClient
    fullName: azure-arm-datalake-store.DataLakeStoreFileSystemManagementClient
    isExternal: false
