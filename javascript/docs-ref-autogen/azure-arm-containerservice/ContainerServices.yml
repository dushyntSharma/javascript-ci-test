### YamlMime:UniversalReference
items:
  - uid: azure-arm-containerservice.ContainerServices
    id: azure-arm-containerservice.ContainerServices
    name: ContainerServices
    summary: Class representing a ContainerServices.
    fullName: azure-arm-containerservice.ContainerServices
    source:
      id: azure-arm-containerservice.ContainerServices
      path: >-
        lib\services\containerservicesManagement\lib\operations\containerServices.js
      startLine: 1644
      remote:
        branch: master
        path: >-
          lib\services\containerservicesManagement\lib\operations\containerServices.js
        repo: 'https://github.com/Azure/azure-sdk-for-node.git'
    type: Class
    children:
      - 'azure-arm-containerservice.ContainerServices.#ctor'
      - >-
        azure-arm-containerservice.ContainerServices#listWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#list'
      - >-
        azure-arm-containerservice.ContainerServices#createOrUpdateWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#createOrUpdate'
      - >-
        azure-arm-containerservice.ContainerServices#getWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#get'
      - >-
        azure-arm-containerservice.ContainerServices#deleteMethodWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#deleteMethod'
      - >-
        azure-arm-containerservice.ContainerServices#listByResourceGroupWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listByResourceGroup'
      - >-
        azure-arm-containerservice.ContainerServices#listOrchestratorsWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listOrchestrators'
      - >-
        azure-arm-containerservice.ContainerServices#beginCreateOrUpdateWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#beginCreateOrUpdate'
      - >-
        azure-arm-containerservice.ContainerServices#beginDeleteMethodWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#beginDeleteMethod'
      - >-
        azure-arm-containerservice.ContainerServices#listNextWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listNext'
      - >-
        azure-arm-containerservice.ContainerServices#listByResourceGroupNextWithHttpOperationResponse
      - 'azure-arm-containerservice.ContainerServices#listByResourceGroupNext'
    langs:
      - js
  - id: 'azure-arm-containerservice.ContainerServices.#ctor'
    uid: 'azure-arm-containerservice.ContainerServices.#ctor'
    parent: azure-arm-containerservice.ContainerServices
    name: ContainerServices(client)
    fullName: azure-arm-containerservice.ContainerServices.ContainerServices(client)
    summary: Create a ContainerServices.
    type: Constructor
    syntax:
      parameters:
        - id: client
          type:
            - undefinedContainerServiceClient
          description: Reference to the service client.
      content: new ContainerServices(client)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listWithHttpOperationResponse'
    id: 'azure-arm-containerservice.ContainerServices#listWithHttpOperationResponse'
    parent: azure-arm-containerservice.ContainerServices
    name: listWithHttpOperationResponse(options)
    summary: "Gets a list of container services in the specified subscription.\r\rGets a list of container services in the specified subscription. The\roperation returns properties of each container service including state,\rorchestrator, number of masters and agents, and FQDNs of masters and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listWithHttpOperationResponse(options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: function listWithHttpOperationResponse(options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#list'
    id: 'azure-arm-containerservice.ContainerServices#list'
    parent: azure-arm-containerservice.ContainerServices
    name: 'list(options, optionalCallback)'
    summary: "Gets a list of container services in the specified subscription.\r\rGets a list of container services in the specified subscription. The\roperation returns properties of each container service including state,\rorchestrator, number of masters and agents, and FQDNs of masters and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.list(options,
      optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function list(options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#createOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#createOrUpdateWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      createOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    summary: "Creates or updates a container service.\r\rCreates or updates a container service with the specified configuration of\rorchestrator, masters, and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.createOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: parameters
          type:
            - object
          description: "Parameters supplied to the Create or Update a\rContainer Service operation."
        - id: parameters.orchestratorProfile
          type:
            - object
          description: "Profile for the container\rservice orchestrator."
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: "The\rorchestrator to use to manage container service cluster resources. Valid\rvalues are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible values\rinclude: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'"
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: "The\rversion of the orchestrator to use. You can specify the major.minor.patch\rpart of the actual version.For example, you can specify version as \"1.6.11\"."
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: "Properties to configure a custom\rcontainer service cluster."
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: "The name of the custom\rorchestrator to use."
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: "Information about a\rservice principal identity for the cluster to use for manipulating Azure\rAPIs. Exact one of secret or keyVaultSecretRef need to be specified."
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: "The ID for the\rservice principal."
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: "The secret\rpassword associated with the service principal in plain text."
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: "The secret\rname."
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: "The secret\rversion."
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: "Profile for the container service\rmaster."
        - id: parameters.masterProfile.count
          type:
            - number
          description: "Number of masters (VMs) in\rthe container service cluster. Allowed values are 1, 3, and 5. The default\rvalue is 1."
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: "DNS prefix to be used to\rcreate the FQDN for the master pool."
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: "Size of agent VMs. Possible\rvalues include: 'Standard_A0', 'Standard_A1', 'Standard_A10',\r'Standard_A11', 'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',\r'Standard_A2m_v2', 'Standard_A3', 'Standard_A4', 'Standard_A4_v2',\r'Standard_A4m_v2', 'Standard_A5', 'Standard_A6', 'Standard_A7',\r'Standard_A8', 'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9',\r'Standard_D1', 'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',\r'Standard_D12', 'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',\r'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',\r'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',\r'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2', 'Standard_D2',\r'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',\r'Standard_D2s_v3', 'Standard_D3', 'Standard_D3_v2', 'Standard_D3_v2_Promo',\r'Standard_D4', 'Standard_D4_v2', 'Standard_D4_v2_Promo', 'Standard_D4_v3',\r'Standard_D4s_v3', 'Standard_D5_v2', 'Standard_D5_v2_Promo',\r'Standard_D8_v3', 'Standard_D8s_v3', 'Standard_DS1', 'Standard_DS11',\r'Standard_DS11_v2', 'Standard_DS11_v2_Promo', 'Standard_DS12',\r'Standard_DS12_v2', 'Standard_DS12_v2_Promo', 'Standard_DS13',\r'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',\r'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',\r'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',\r'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',\r'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',\r'Standard_DS4_v2_Promo', 'Standard_DS5_v2', 'Standard_DS5_v2_Promo',\r'Standard_E16_v3', 'Standard_E16s_v3', 'Standard_E2_v3', 'Standard_E2s_v3',\r'Standard_E32_v3', 'Standard_E32s_v3', 'Standard_E4_v3', 'Standard_E4s_v3',\r'Standard_E64_v3', 'Standard_E64s_v3', 'Standard_E8_v3', 'Standard_E8s_v3',\r'Standard_F1', 'Standard_F16', 'Standard_F16s', 'Standard_F1s',\r'Standard_F2', 'Standard_F2s', 'Standard_F4', 'Standard_F4s', 'Standard_F8',\r'Standard_F8s', 'Standard_G1', 'Standard_G2', 'Standard_G3', 'Standard_G4',\r'Standard_G5', 'Standard_GS1', 'Standard_GS2', 'Standard_GS3',\r'Standard_GS4', 'Standard_GS5', 'Standard_H16', 'Standard_H16m',\r'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',\r'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',\r'Standard_M128s', 'Standard_M64ms', 'Standard_NC12', 'Standard_NC24',\r'Standard_NC24r', 'Standard_NC6', 'Standard_NV12', 'Standard_NV24',\r'Standard_NV6'"
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: "OS Disk Size in GB\rto be used to specify the disk size for every machine in this master/agent\rpool. If you specify 0, it will apply the default osDisk size according to\rthe vmSize specified."
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: "VNet SubnetID\rspecifies the vnet's subnet identifier. If you specify either master VNet\rSubnet, or agent VNet Subnet, you need to specify both. And they have to be\rin the same VNet."
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: "Storage profile\rspecifies what kind of storage used. Choose from StorageAccount and\rManagedDisks. Leave it empty, we will choose for you based on the\rorchestrator choice. Possible values include: 'StorageAccount',\r'ManagedDisks'"
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: "Profile for Windows VMs in the\rcontainer service cluster."
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Windows VMs."
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: "The administrator\rpassword to use for Windows VMs."
        - id: parameters.linuxProfile
          type:
            - object
          description: "Profile for Linux VMs in the\rcontainer service cluster."
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Linux VMs."
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: "SSH configuration for\rLinux-based VMs running on Azure."
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: "The list of SSH public\rkeys used to authenticate with Linux-based VMs. Only expect one key\rspecified."
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: "Profile for diagnostics in\rthe container service cluster."
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: "Profile for\rdiagnostics on the container service VMs."
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: "Whether\rthe VM diagnostic agent is provisioned on the VM."
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function createOrUpdateWithHttpOperationResponse(resourceGroupName,
        containerServiceName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#createOrUpdate'
    id: 'azure-arm-containerservice.ContainerServices#createOrUpdate'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      createOrUpdate(resourceGroupName, containerServiceName, parameters,
      options, optionalCallback)
    summary: "Creates or updates a container service.\r\rCreates or updates a container service with the specified configuration of\rorchestrator, masters, and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.createOrUpdate(resourceGroupName,
      containerServiceName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerService} - The deserialized result object.'
        value: '{ContainerService} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerService} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerService} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: parameters
          type:
            - object
          description: "Parameters supplied to the Create or Update a\rContainer Service operation."
        - id: parameters.orchestratorProfile
          type:
            - object
          description: "Profile for the container\rservice orchestrator."
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: "The\rorchestrator to use to manage container service cluster resources. Valid\rvalues are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible values\rinclude: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'"
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: "The\rversion of the orchestrator to use. You can specify the major.minor.patch\rpart of the actual version.For example, you can specify version as \"1.6.11\"."
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: "Properties to configure a custom\rcontainer service cluster."
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: "The name of the custom\rorchestrator to use."
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: "Information about a\rservice principal identity for the cluster to use for manipulating Azure\rAPIs. Exact one of secret or keyVaultSecretRef need to be specified."
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: "The ID for the\rservice principal."
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: "The secret\rpassword associated with the service principal in plain text."
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: "The secret\rname."
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: "The secret\rversion."
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: "Profile for the container service\rmaster."
        - id: parameters.masterProfile.count
          type:
            - number
          description: "Number of masters (VMs) in\rthe container service cluster. Allowed values are 1, 3, and 5. The default\rvalue is 1."
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: "DNS prefix to be used to\rcreate the FQDN for the master pool."
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: "Size of agent VMs. Possible\rvalues include: 'Standard_A0', 'Standard_A1', 'Standard_A10',\r'Standard_A11', 'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',\r'Standard_A2m_v2', 'Standard_A3', 'Standard_A4', 'Standard_A4_v2',\r'Standard_A4m_v2', 'Standard_A5', 'Standard_A6', 'Standard_A7',\r'Standard_A8', 'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9',\r'Standard_D1', 'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',\r'Standard_D12', 'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',\r'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',\r'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',\r'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2', 'Standard_D2',\r'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',\r'Standard_D2s_v3', 'Standard_D3', 'Standard_D3_v2', 'Standard_D3_v2_Promo',\r'Standard_D4', 'Standard_D4_v2', 'Standard_D4_v2_Promo', 'Standard_D4_v3',\r'Standard_D4s_v3', 'Standard_D5_v2', 'Standard_D5_v2_Promo',\r'Standard_D8_v3', 'Standard_D8s_v3', 'Standard_DS1', 'Standard_DS11',\r'Standard_DS11_v2', 'Standard_DS11_v2_Promo', 'Standard_DS12',\r'Standard_DS12_v2', 'Standard_DS12_v2_Promo', 'Standard_DS13',\r'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',\r'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',\r'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',\r'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',\r'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',\r'Standard_DS4_v2_Promo', 'Standard_DS5_v2', 'Standard_DS5_v2_Promo',\r'Standard_E16_v3', 'Standard_E16s_v3', 'Standard_E2_v3', 'Standard_E2s_v3',\r'Standard_E32_v3', 'Standard_E32s_v3', 'Standard_E4_v3', 'Standard_E4s_v3',\r'Standard_E64_v3', 'Standard_E64s_v3', 'Standard_E8_v3', 'Standard_E8s_v3',\r'Standard_F1', 'Standard_F16', 'Standard_F16s', 'Standard_F1s',\r'Standard_F2', 'Standard_F2s', 'Standard_F4', 'Standard_F4s', 'Standard_F8',\r'Standard_F8s', 'Standard_G1', 'Standard_G2', 'Standard_G3', 'Standard_G4',\r'Standard_G5', 'Standard_GS1', 'Standard_GS2', 'Standard_GS3',\r'Standard_GS4', 'Standard_GS5', 'Standard_H16', 'Standard_H16m',\r'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',\r'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',\r'Standard_M128s', 'Standard_M64ms', 'Standard_NC12', 'Standard_NC24',\r'Standard_NC24r', 'Standard_NC6', 'Standard_NV12', 'Standard_NV24',\r'Standard_NV6'"
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: "OS Disk Size in GB\rto be used to specify the disk size for every machine in this master/agent\rpool. If you specify 0, it will apply the default osDisk size according to\rthe vmSize specified."
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: "VNet SubnetID\rspecifies the vnet's subnet identifier. If you specify either master VNet\rSubnet, or agent VNet Subnet, you need to specify both. And they have to be\rin the same VNet."
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: "Storage profile\rspecifies what kind of storage used. Choose from StorageAccount and\rManagedDisks. Leave it empty, we will choose for you based on the\rorchestrator choice. Possible values include: 'StorageAccount',\r'ManagedDisks'"
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: "Profile for Windows VMs in the\rcontainer service cluster."
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Windows VMs."
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: "The administrator\rpassword to use for Windows VMs."
        - id: parameters.linuxProfile
          type:
            - object
          description: "Profile for Linux VMs in the\rcontainer service cluster."
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Linux VMs."
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: "SSH configuration for\rLinux-based VMs running on Azure."
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: "The list of SSH public\rkeys used to authenticate with Linux-based VMs. Only expect one key\rspecified."
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: "Profile for diagnostics in\rthe container service cluster."
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: "Profile for\rdiagnostics on the container service VMs."
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: "Whether\rthe VM diagnostic agent is provisioned on the VM."
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function createOrUpdate(resourceGroupName, containerServiceName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#getWithHttpOperationResponse'
    id: 'azure-arm-containerservice.ContainerServices#getWithHttpOperationResponse'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      getWithHttpOperationResponse(resourceGroupName, containerServiceName,
      options)
    summary: "Gets the properties of the specified container service.\r\rGets the properties of the specified container service in the specified\rsubscription and resource group. The operation returns the properties\rincluding state, orchestrator, number of masters and agents, and FQDNs of\rmasters and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.getWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function getWithHttpOperationResponse(resourceGroupName,
        containerServiceName, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#get'
    id: 'azure-arm-containerservice.ContainerServices#get'
    parent: azure-arm-containerservice.ContainerServices
    name: 'get(resourceGroupName, containerServiceName, options, optionalCallback)'
    summary: "Gets the properties of the specified container service.\r\rGets the properties of the specified container service in the specified\rsubscription and resource group. The operation returns the properties\rincluding state, orchestrator, number of masters and agents, and FQDNs of\rmasters and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.get(resourceGroupName,
      containerServiceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerService} - The deserialized result object.'
        value: '{ContainerService} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerService} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerService} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function get(resourceGroupName, containerServiceName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#deleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#deleteMethodWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      deleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    summary: "Deletes the specified container service.\r\rDeletes the specified container service in the specified subscription and\rresource group. The operation does not delete other resources created as\rpart of creating a container service, including storage accounts, VMs, and\ravailability sets. All the other resources created with the container\rservice are part of the same resource group and can be deleted individually."
    fullName: >-
      azure-arm-containerservice.ContainerServices.deleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function deleteMethodWithHttpOperationResponse(resourceGroupName,
        containerServiceName, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#deleteMethod'
    id: 'azure-arm-containerservice.ContainerServices#deleteMethod'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      deleteMethod(resourceGroupName, containerServiceName, options,
      optionalCallback)
    summary: "Deletes the specified container service.\r\rDeletes the specified container service in the specified subscription and\rresource group. The operation does not delete other resources created as\rpart of creating a container service, including storage accounts, VMs, and\ravailability sets. All the other resources created with the container\rservice are part of the same resource group and can be deleted individually."
    fullName: >-
      azure-arm-containerservice.ContainerServices.deleteMethod(resourceGroupName,
      containerServiceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function deleteMethod(resourceGroupName, containerServiceName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroupWithHttpOperationResponse(resourceGroupName, options)'
    summary: "Gets a list of container services in the specified resource group.\r\rGets a list of container services in the specified subscription and resource\rgroup. The operation returns properties of each container service including\rstate, orchestrator, number of masters and agents, and FQDNs of masters and\ragents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroupWithHttpOperationResponse(resourceGroupName,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupWithHttpOperationResponse(resourceGroupName,
        options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listByResourceGroup'
    id: 'azure-arm-containerservice.ContainerServices#listByResourceGroup'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroup(resourceGroupName, options, optionalCallback)'
    summary: "Gets a list of container services in the specified resource group.\r\rGets a list of container services in the specified subscription and resource\rgroup. The operation returns properties of each container service including\rstate, orchestrator, number of masters and agents, and FQDNs of masters and\ragents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroup(resourceGroupName,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroup(resourceGroupName, options,
        optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listOrchestratorsWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listOrchestratorsWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listOrchestratorsWithHttpOperationResponse(location, options)'
    summary: "Gets a list of supported orchestrators in the specified\rsubscription.\r\rGets a list of supported orchestrators in the specified subscription. The\roperation returns properties of each orchestrator including verison and\ravailable upgrades."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listOrchestratorsWithHttpOperationResponse(location,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<OrchestratorVersionProfileListResult>} - The
          deserialized result object.
        value: >-
          {HttpOperationResponse<OrchestratorVersionProfileListResult>} - The
          deserialized result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: The name of a supported Azure region.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.resourceType
          type:
            - string
          description: "resource type for which the list of\rorchestrators needs to be returned"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listOrchestratorsWithHttpOperationResponse(location, options)'
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listOrchestrators'
    id: 'azure-arm-containerservice.ContainerServices#listOrchestrators'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listOrchestrators(location, options, optionalCallback)'
    summary: "Gets a list of supported orchestrators in the specified\rsubscription.\r\rGets a list of supported orchestrators in the specified subscription. The\roperation returns properties of each orchestrator including verison and\ravailable upgrades."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listOrchestrators(location,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {OrchestratorVersionProfileListResult} - The deserialized result
          object.
        value: >-
          {OrchestratorVersionProfileListResult} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OrchestratorVersionProfileListResult} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link OrchestratorVersionProfileListResult} for\r                     more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: location
          type:
            - string
          description: The name of a supported Azure region.
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.resourceType
          type:
            - string
          description: "resource type for which the list of\rorchestrators needs to be returned"
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listOrchestrators(location, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#beginCreateOrUpdateWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#beginCreateOrUpdateWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    summary: "Creates or updates a container service.\r\rCreates or updates a container service with the specified configuration of\rorchestrator, masters, and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
      containerServiceName, parameters, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
        value: >-
          {HttpOperationResponse<ContainerService>} - The deserialized result
          object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: parameters
          type:
            - object
          description: "Parameters supplied to the Create or Update a\rContainer Service operation."
        - id: parameters.orchestratorProfile
          type:
            - object
          description: "Profile for the container\rservice orchestrator."
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: "The\rorchestrator to use to manage container service cluster resources. Valid\rvalues are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible values\rinclude: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'"
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: "The\rversion of the orchestrator to use. You can specify the major.minor.patch\rpart of the actual version.For example, you can specify version as \"1.6.11\"."
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: "Properties to configure a custom\rcontainer service cluster."
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: "The name of the custom\rorchestrator to use."
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: "Information about a\rservice principal identity for the cluster to use for manipulating Azure\rAPIs. Exact one of secret or keyVaultSecretRef need to be specified."
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: "The ID for the\rservice principal."
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: "The secret\rpassword associated with the service principal in plain text."
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: "The secret\rname."
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: "The secret\rversion."
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: "Profile for the container service\rmaster."
        - id: parameters.masterProfile.count
          type:
            - number
          description: "Number of masters (VMs) in\rthe container service cluster. Allowed values are 1, 3, and 5. The default\rvalue is 1."
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: "DNS prefix to be used to\rcreate the FQDN for the master pool."
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: "Size of agent VMs. Possible\rvalues include: 'Standard_A0', 'Standard_A1', 'Standard_A10',\r'Standard_A11', 'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',\r'Standard_A2m_v2', 'Standard_A3', 'Standard_A4', 'Standard_A4_v2',\r'Standard_A4m_v2', 'Standard_A5', 'Standard_A6', 'Standard_A7',\r'Standard_A8', 'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9',\r'Standard_D1', 'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',\r'Standard_D12', 'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',\r'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',\r'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',\r'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2', 'Standard_D2',\r'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',\r'Standard_D2s_v3', 'Standard_D3', 'Standard_D3_v2', 'Standard_D3_v2_Promo',\r'Standard_D4', 'Standard_D4_v2', 'Standard_D4_v2_Promo', 'Standard_D4_v3',\r'Standard_D4s_v3', 'Standard_D5_v2', 'Standard_D5_v2_Promo',\r'Standard_D8_v3', 'Standard_D8s_v3', 'Standard_DS1', 'Standard_DS11',\r'Standard_DS11_v2', 'Standard_DS11_v2_Promo', 'Standard_DS12',\r'Standard_DS12_v2', 'Standard_DS12_v2_Promo', 'Standard_DS13',\r'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',\r'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',\r'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',\r'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',\r'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',\r'Standard_DS4_v2_Promo', 'Standard_DS5_v2', 'Standard_DS5_v2_Promo',\r'Standard_E16_v3', 'Standard_E16s_v3', 'Standard_E2_v3', 'Standard_E2s_v3',\r'Standard_E32_v3', 'Standard_E32s_v3', 'Standard_E4_v3', 'Standard_E4s_v3',\r'Standard_E64_v3', 'Standard_E64s_v3', 'Standard_E8_v3', 'Standard_E8s_v3',\r'Standard_F1', 'Standard_F16', 'Standard_F16s', 'Standard_F1s',\r'Standard_F2', 'Standard_F2s', 'Standard_F4', 'Standard_F4s', 'Standard_F8',\r'Standard_F8s', 'Standard_G1', 'Standard_G2', 'Standard_G3', 'Standard_G4',\r'Standard_G5', 'Standard_GS1', 'Standard_GS2', 'Standard_GS3',\r'Standard_GS4', 'Standard_GS5', 'Standard_H16', 'Standard_H16m',\r'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',\r'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',\r'Standard_M128s', 'Standard_M64ms', 'Standard_NC12', 'Standard_NC24',\r'Standard_NC24r', 'Standard_NC6', 'Standard_NV12', 'Standard_NV24',\r'Standard_NV6'"
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: "OS Disk Size in GB\rto be used to specify the disk size for every machine in this master/agent\rpool. If you specify 0, it will apply the default osDisk size according to\rthe vmSize specified."
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: "VNet SubnetID\rspecifies the vnet's subnet identifier. If you specify either master VNet\rSubnet, or agent VNet Subnet, you need to specify both. And they have to be\rin the same VNet."
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: "Storage profile\rspecifies what kind of storage used. Choose from StorageAccount and\rManagedDisks. Leave it empty, we will choose for you based on the\rorchestrator choice. Possible values include: 'StorageAccount',\r'ManagedDisks'"
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: "Profile for Windows VMs in the\rcontainer service cluster."
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Windows VMs."
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: "The administrator\rpassword to use for Windows VMs."
        - id: parameters.linuxProfile
          type:
            - object
          description: "Profile for Linux VMs in the\rcontainer service cluster."
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Linux VMs."
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: "SSH configuration for\rLinux-based VMs running on Azure."
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: "The list of SSH public\rkeys used to authenticate with Linux-based VMs. Only expect one key\rspecified."
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: "Profile for diagnostics in\rthe container service cluster."
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: "Profile for\rdiagnostics on the container service VMs."
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: "Whether\rthe VM diagnostic agent is provisioned on the VM."
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName,
        containerServiceName, parameters, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#beginCreateOrUpdate'
    id: 'azure-arm-containerservice.ContainerServices#beginCreateOrUpdate'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginCreateOrUpdate(resourceGroupName, containerServiceName, parameters,
      options, optionalCallback)
    summary: "Creates or updates a container service.\r\rCreates or updates a container service with the specified configuration of\rorchestrator, masters, and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginCreateOrUpdate(resourceGroupName,
      containerServiceName, parameters, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerService} - The deserialized result object.'
        value: '{ContainerService} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerService} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerService} for more information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: parameters
          type:
            - object
          description: "Parameters supplied to the Create or Update a\rContainer Service operation."
        - id: parameters.orchestratorProfile
          type:
            - object
          description: "Profile for the container\rservice orchestrator."
        - id: parameters.orchestratorProfile.orchestratorType
          type:
            - string
          description: "The\rorchestrator to use to manage container service cluster resources. Valid\rvalues are Kubernetes, Swarm, DCOS, DockerCE and Custom. Possible values\rinclude: 'Kubernetes', 'Swarm', 'DCOS', 'DockerCE', 'Custom'"
        - id: parameters.orchestratorProfile.orchestratorVersion
          type:
            - string
          description: "The\rversion of the orchestrator to use. You can specify the major.minor.patch\rpart of the actual version.For example, you can specify version as \"1.6.11\"."
          optional: true
        - id: parameters.customProfile
          type:
            - object
          description: "Properties to configure a custom\rcontainer service cluster."
          optional: true
        - id: parameters.customProfile.orchestrator
          type:
            - string
          description: "The name of the custom\rorchestrator to use."
        - id: parameters.servicePrincipalProfile
          type:
            - object
          description: "Information about a\rservice principal identity for the cluster to use for manipulating Azure\rAPIs. Exact one of secret or keyVaultSecretRef need to be specified."
          optional: true
        - id: parameters.servicePrincipalProfile.clientId
          type:
            - string
          description: "The ID for the\rservice principal."
        - id: parameters.servicePrincipalProfile.secret
          type:
            - string
          description: "The secret\rpassword associated with the service principal in plain text."
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef
          type:
            - object
          description: Reference to a secret stored in Azure Key Vault.
          optional: true
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.vaultID
          type:
            - string
          description: Key vault identifier.
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.secretName
          type:
            - string
          description: "The secret\rname."
        - id: parameters.servicePrincipalProfile.keyVaultSecretRef.version
          type:
            - string
          description: "The secret\rversion."
          optional: true
        - id: parameters.masterProfile
          type:
            - object
          description: "Profile for the container service\rmaster."
        - id: parameters.masterProfile.count
          type:
            - number
          description: "Number of masters (VMs) in\rthe container service cluster. Allowed values are 1, 3, and 5. The default\rvalue is 1."
          optional: true
        - id: parameters.masterProfile.dnsPrefix
          type:
            - string
          description: "DNS prefix to be used to\rcreate the FQDN for the master pool."
        - id: parameters.masterProfile.vmSize
          type:
            - string
          description: "Size of agent VMs. Possible\rvalues include: 'Standard_A0', 'Standard_A1', 'Standard_A10',\r'Standard_A11', 'Standard_A1_v2', 'Standard_A2', 'Standard_A2_v2',\r'Standard_A2m_v2', 'Standard_A3', 'Standard_A4', 'Standard_A4_v2',\r'Standard_A4m_v2', 'Standard_A5', 'Standard_A6', 'Standard_A7',\r'Standard_A8', 'Standard_A8_v2', 'Standard_A8m_v2', 'Standard_A9',\r'Standard_D1', 'Standard_D11', 'Standard_D11_v2', 'Standard_D11_v2_Promo',\r'Standard_D12', 'Standard_D12_v2', 'Standard_D12_v2_Promo', 'Standard_D13',\r'Standard_D13_v2', 'Standard_D13_v2_Promo', 'Standard_D14',\r'Standard_D14_v2', 'Standard_D14_v2_Promo', 'Standard_D15_v2',\r'Standard_D16_v3', 'Standard_D16s_v3', 'Standard_D1_v2', 'Standard_D2',\r'Standard_D2_v2', 'Standard_D2_v2_Promo', 'Standard_D2_v3',\r'Standard_D2s_v3', 'Standard_D3', 'Standard_D3_v2', 'Standard_D3_v2_Promo',\r'Standard_D4', 'Standard_D4_v2', 'Standard_D4_v2_Promo', 'Standard_D4_v3',\r'Standard_D4s_v3', 'Standard_D5_v2', 'Standard_D5_v2_Promo',\r'Standard_D8_v3', 'Standard_D8s_v3', 'Standard_DS1', 'Standard_DS11',\r'Standard_DS11_v2', 'Standard_DS11_v2_Promo', 'Standard_DS12',\r'Standard_DS12_v2', 'Standard_DS12_v2_Promo', 'Standard_DS13',\r'Standard_DS13_v2', 'Standard_DS13_v2_Promo', 'Standard_DS14',\r'Standard_DS14_v2', 'Standard_DS14_v2_Promo', 'Standard_DS15_v2',\r'Standard_DS1_v2', 'Standard_DS2', 'Standard_DS2_v2',\r'Standard_DS2_v2_Promo', 'Standard_DS3', 'Standard_DS3_v2',\r'Standard_DS3_v2_Promo', 'Standard_DS4', 'Standard_DS4_v2',\r'Standard_DS4_v2_Promo', 'Standard_DS5_v2', 'Standard_DS5_v2_Promo',\r'Standard_E16_v3', 'Standard_E16s_v3', 'Standard_E2_v3', 'Standard_E2s_v3',\r'Standard_E32_v3', 'Standard_E32s_v3', 'Standard_E4_v3', 'Standard_E4s_v3',\r'Standard_E64_v3', 'Standard_E64s_v3', 'Standard_E8_v3', 'Standard_E8s_v3',\r'Standard_F1', 'Standard_F16', 'Standard_F16s', 'Standard_F1s',\r'Standard_F2', 'Standard_F2s', 'Standard_F4', 'Standard_F4s', 'Standard_F8',\r'Standard_F8s', 'Standard_G1', 'Standard_G2', 'Standard_G3', 'Standard_G4',\r'Standard_G5', 'Standard_GS1', 'Standard_GS2', 'Standard_GS3',\r'Standard_GS4', 'Standard_GS5', 'Standard_H16', 'Standard_H16m',\r'Standard_H16mr', 'Standard_H16r', 'Standard_H8', 'Standard_H8m',\r'Standard_L16s', 'Standard_L32s', 'Standard_L4s', 'Standard_L8s',\r'Standard_M128s', 'Standard_M64ms', 'Standard_NC12', 'Standard_NC24',\r'Standard_NC24r', 'Standard_NC6', 'Standard_NV12', 'Standard_NV24',\r'Standard_NV6'"
        - id: parameters.masterProfile.osDiskSizeGB
          type:
            - number
          description: "OS Disk Size in GB\rto be used to specify the disk size for every machine in this master/agent\rpool. If you specify 0, it will apply the default osDisk size according to\rthe vmSize specified."
          optional: true
        - id: parameters.masterProfile.vnetSubnetID
          type:
            - string
          description: "VNet SubnetID\rspecifies the vnet's subnet identifier. If you specify either master VNet\rSubnet, or agent VNet Subnet, you need to specify both. And they have to be\rin the same VNet."
          optional: true
        - id: parameters.masterProfile.firstConsecutiveStaticIP
          type:
            - string
          description: >-
            FirstConsecutiveStaticIP used to specify the first static ip of
            masters.
          optional: true
        - id: parameters.masterProfile.storageProfile
          type:
            - string
          description: "Storage profile\rspecifies what kind of storage used. Choose from StorageAccount and\rManagedDisks. Leave it empty, we will choose for you based on the\rorchestrator choice. Possible values include: 'StorageAccount',\r'ManagedDisks'"
          optional: true
        - id: parameters.agentPoolProfiles
          type:
            - array
          description: Properties of the agent pool.
          optional: true
        - id: parameters.windowsProfile
          type:
            - object
          description: "Profile for Windows VMs in the\rcontainer service cluster."
          optional: true
        - id: parameters.windowsProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Windows VMs."
        - id: parameters.windowsProfile.adminPassword
          type:
            - string
          description: "The administrator\rpassword to use for Windows VMs."
        - id: parameters.linuxProfile
          type:
            - object
          description: "Profile for Linux VMs in the\rcontainer service cluster."
        - id: parameters.linuxProfile.adminUsername
          type:
            - string
          description: "The administrator\rusername to use for Linux VMs."
        - id: parameters.linuxProfile.ssh
          type:
            - object
          description: "SSH configuration for\rLinux-based VMs running on Azure."
        - id: parameters.linuxProfile.ssh.publicKeys
          type:
            - array
          description: "The list of SSH public\rkeys used to authenticate with Linux-based VMs. Only expect one key\rspecified."
        - id: parameters.diagnosticsProfile
          type:
            - object
          description: "Profile for diagnostics in\rthe container service cluster."
          optional: true
        - id: parameters.diagnosticsProfile.vmDiagnostics
          type:
            - object
          description: "Profile for\rdiagnostics on the container service VMs."
        - id: parameters.diagnosticsProfile.vmDiagnostics.enabled
          type:
            - boolean
          description: "Whether\rthe VM diagnostic agent is provisioned on the VM."
        - id: parameters.location
          type:
            - string
          description: Resource location
        - id: parameters.tags
          type:
            - object
          description: Resource tags
          optional: true
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginCreateOrUpdate(resourceGroupName, containerServiceName,
        parameters, options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#beginDeleteMethodWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#beginDeleteMethodWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    summary: "Deletes the specified container service.\r\rDeletes the specified container service in the specified subscription and\rresource group. The operation does not delete other resources created as\rpart of creating a container service, including storage accounts, VMs, and\ravailability sets. All the other resources created with the container\rservice are part of the same resource group and can be deleted individually."
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
      containerServiceName, options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{HttpOperationResponse<null>} - The deserialized result object.'
        value: '{HttpOperationResponse<null>} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function beginDeleteMethodWithHttpOperationResponse(resourceGroupName,
        containerServiceName, options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#beginDeleteMethod'
    id: 'azure-arm-containerservice.ContainerServices#beginDeleteMethod'
    parent: azure-arm-containerservice.ContainerServices
    name: >-
      beginDeleteMethod(resourceGroupName, containerServiceName, options,
      optionalCallback)
    summary: "Deletes the specified container service.\r\rDeletes the specified container service in the specified subscription and\rresource group. The operation does not delete other resources created as\rpart of creating a container service, including storage accounts, VMs, and\ravailability sets. All the other resources created with the container\rservice are part of the same resource group and can be deleted individually."
    fullName: >-
      azure-arm-containerservice.ContainerServices.beginDeleteMethod(resourceGroupName,
      containerServiceName, options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{null} - The deserialized result object.'
        value: '{null} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {null} [result]   - The deserialized result object if an error did not occur.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: The name of the resource group.
        - id: containerServiceName
          type:
            - string
          description: "The name of the container service in\rthe specified subscription and resource group."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function beginDeleteMethod(resourceGroupName, containerServiceName,
        options, optionalCallback)
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listNextWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listNextWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Gets a list of container services in the specified subscription.\r\rGets a list of container services in the specified subscription. The\roperation returns properties of each container service including state,\rorchestrator, number of masters and agents, and FQDNs of masters and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: 'function listNextWithHttpOperationResponse(nextPageLink, options)'
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listNext'
    id: 'azure-arm-containerservice.ContainerServices#listNext'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listNext(nextPageLink, options, optionalCallback)'
    summary: "Gets a list of container services in the specified subscription.\r\rGets a list of container services in the specified subscription. The\roperation returns properties of each container service including state,\rorchestrator, number of masters and agents, and FQDNs of masters and agents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: 'function listNext(nextPageLink, options, optionalCallback)'
    langs:
      - js
  - uid: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupNextWithHttpOperationResponse
    id: >-
      azure-arm-containerservice.ContainerServices#listByResourceGroupNextWithHttpOperationResponse
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroupNextWithHttpOperationResponse(nextPageLink, options)'
    summary: "Gets a list of container services in the specified resource group.\r\rGets a list of container services in the specified subscription and resource\rgroup. The operation returns properties of each container service including\rstate, orchestrator, number of masters and agents, and FQDNs of masters and\ragents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
      options)
    tags:
      - originalTitle: resolve
        title: resolve
        text: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
        value: >-
          {HttpOperationResponse<ContainerServiceListResult>} - The deserialized
          result object.
      - originalTitle: reject
        title: reject
        text: '{Error} - The error object.'
        value: '{Error} - The error object.'
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
      return:
        type:
          - Promise
        description: A promise is returned
      content: >-
        function listByResourceGroupNextWithHttpOperationResponse(nextPageLink,
        options)
    langs:
      - js
  - uid: 'azure-arm-containerservice.ContainerServices#listByResourceGroupNext'
    id: 'azure-arm-containerservice.ContainerServices#listByResourceGroupNext'
    parent: azure-arm-containerservice.ContainerServices
    name: 'listByResourceGroupNext(nextPageLink, options, optionalCallback)'
    summary: "Gets a list of container services in the specified resource group.\r\rGets a list of container services in the specified subscription and resource\rgroup. The operation returns properties of each container service including\rstate, orchestrator, number of masters and agents, and FQDNs of masters and\ragents."
    fullName: >-
      azure-arm-containerservice.ContainerServices.listByResourceGroupNext(nextPageLink,
      options, optionalCallback)
    tags:
      - originalTitle: resolve
        title: resolve
        text: '{ContainerServiceListResult} - The deserialized result object.'
        value: '{ContainerServiceListResult} - The deserialized result object.'
      - originalTitle: reject
        title: reject
        text: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
        value: "{Error} - The error object.\r\r{function} optionalCallback(err, result, request, response)\r\r                     {Error}  err        - The Error object if an error occurred, null otherwise.\r\r                     {object} [result]   - The deserialized result object if an error did not occur.\r                     See {@link ContainerServiceListResult} for more\r                     information.\r\r                     {object} [request]  - The HTTP Request object if an error did not occur.\r\r                     {stream} [response] - The HTTP Response stream if an error did not occur."
    type: Function
    syntax:
      parameters:
        - id: nextPageLink
          type:
            - string
          description: "The NextLink from the previous successful call\rto List operation."
        - id: options
          type:
            - object
          description: Optional Parameters.
          optional: true
        - id: options.customHeaders
          type:
            - object
          description: "Headers that will be added to the\rrequest"
          optional: true
        - id: optionalCallback
          type:
            - function
          description: The optional callback.
          optional: true
      return:
        type:
          - function
          - Promise
        description: "If a callback was passed as the last parameter\rthen it returns the callback else returns a Promise.\r\r{Promise} A promise is returned"
      content: >-
        function listByResourceGroupNext(nextPageLink, options,
        optionalCallback)
    langs:
      - js
